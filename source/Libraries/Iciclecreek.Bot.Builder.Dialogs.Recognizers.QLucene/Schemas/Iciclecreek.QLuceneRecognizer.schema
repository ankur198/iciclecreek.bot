{
    "$schema": "https://schemas.botframework.com/schemas/component/v1.0/component.schema",
    "$role": "implements(Microsoft.IRecognizer)",
    "title": "QnA Lucene Recognizer",
    "description": "Recognizer which uses Lucene to do QnA recognition..",
    "type": "object",
    "properties": {
        "id": {
            "type": "string",
            "title": "Id",
            "description": "Optional unique id using with RecognizerSet. "
        },
        "knowledgeBase": {
            "type": "string",
            "title": "Knowledge base",
            "description": "name of the .qna resource.",
            "examples": [ "mykb.en-us.qna" ]
        },
        "includeDialogNameInMetadata": {
            "$ref": "schema:#/definitions/booleanExpression",
            "title": "Include DialogName",
            "description": "Set to true to include the dialog name in metadata.",
            "default": false
        },
        "strictFilters": {
            "$ref": "schema:#/definitions/arrayExpression",
            "title": "Strict Filters",
            "description": "Metadata filters to use when calling the QnA Maker KB.",
            "items": {
                "type": "object",
                "title": "Metadata filters",
                "description": "Metadata filters to use when querying QnA Maker KB.",
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Name to filter on.",
                        "maximum": 100
                    },
                    "value": {
                        "type": "string",
                        "title": "Value",
                        "description": "Value to restrict filter.",
                        "maximum": 100
                    }
                }
            }
        },
        "strictFiltersCompoundOperationType": {
            "title": "Strict Filters Operation Type",
            "description": "Set whether to combine filters with OR and AND semantics",
            "oneOf": [
                {
                    "type": "string",
                    "title": "Ranker type",
                    "description": "Type of Ranker.",
                    "enum": [
                        "AND",
                        "OR"
                    ],
                    "default": "AND"
                },
                {
                    "$ref": "schema:#/definitions/equalsExpression"
                }
            ]
        },
        "rankerType": {
            "title": "Ranker Type",
            "description": "Type of Ranker.",
            "oneOf": [
                {
                    "type": "string",
                    "title": "Ranker type",
                    "description": "Type of Ranker.",
                    "enum": [
                        "default",
                        "questionOnly"
                    ],
                    "default": "default"
                },
                {
                    "$ref": "schema:#/definitions/equalsExpression"
                }
            ]
        },
        "context": {
            "$ref": "schema:#/definitions/objectExpression",
            "title": "QnARequestContext",
            "description": "Context to use for ranking."
        },
        "threshold": {
            "$ref": "schema:#/definitions/numberExpression",
            "title": "Threshold",
            "description": "Threshold to consider scores to be the same.",
            "default": 0.1
        }
    }
}
