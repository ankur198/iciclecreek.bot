{
  "$schema": "https://schemas.botframework.com/schemas/component/v1.0/component.schema",
  "type": "object",
  "title": "Component kinds",
  "description": "These are all of the kinds that can be created by the loader.",
  "oneOf": [
    {
      "$ref": "#/definitions/GitHub.Activity.Events.GetAll"
    },
    {
      "$ref": "#/definitions/GitHub.Activity.Events.GetAllForAnOrganization"
    },
    {
      "$ref": "#/definitions/GitHub.Activity.Events.GetAllForOrganization"
    },
    {
      "$ref": "#/definitions/GitHub.Activity.Events.GetAllForRepository"
    },
    {
      "$ref": "#/definitions/GitHub.Activity.Events.GetAllForRepositoryNetwork"
    },
    {
      "$ref": "#/definitions/GitHub.Activity.Events.GetAllIssuesForRepository"
    },
    {
      "$ref": "#/definitions/GitHub.Activity.Events.GetAllUserPerformed"
    },
    {
      "$ref": "#/definitions/GitHub.Activity.Events.GetAllUserPerformedPublic"
    },
    {
      "$ref": "#/definitions/GitHub.Activity.Events.GetAllUserReceived"
    },
    {
      "$ref": "#/definitions/GitHub.Activity.Events.GetAllUserReceivedPublic"
    },
    {
      "$ref": "#/definitions/GitHub.Activity.Feeds.GetFeeds"
    },
    {
      "$ref": "#/definitions/GitHub.Activity.Notifications.DeleteThreadSubscription"
    },
    {
      "$ref": "#/definitions/GitHub.Activity.Notifications.Get"
    },
    {
      "$ref": "#/definitions/GitHub.Activity.Notifications.GetAllForCurrent"
    },
    {
      "$ref": "#/definitions/GitHub.Activity.Notifications.GetAllForRepository"
    },
    {
      "$ref": "#/definitions/GitHub.Activity.Notifications.GetThreadSubscription"
    },
    {
      "$ref": "#/definitions/GitHub.Activity.Notifications.MarkAsRead"
    },
    {
      "$ref": "#/definitions/GitHub.Activity.Notifications.MarkAsReadForRepository"
    },
    {
      "$ref": "#/definitions/GitHub.Activity.Notifications.SetThreadSubscription"
    },
    {
      "$ref": "#/definitions/GitHub.Activity.Starring.CheckStarred"
    },
    {
      "$ref": "#/definitions/GitHub.Activity.Starring.GetAllForCurrent"
    },
    {
      "$ref": "#/definitions/GitHub.Activity.Starring.GetAllForCurrentWithTimestamps"
    },
    {
      "$ref": "#/definitions/GitHub.Activity.Starring.GetAllForUser"
    },
    {
      "$ref": "#/definitions/GitHub.Activity.Starring.GetAllForUserWithTimestamps"
    },
    {
      "$ref": "#/definitions/GitHub.Activity.Starring.GetAllStargazers"
    },
    {
      "$ref": "#/definitions/GitHub.Activity.Starring.GetAllStargazersWithTimestamps"
    },
    {
      "$ref": "#/definitions/GitHub.Activity.Starring.RemoveStarFromRepo"
    },
    {
      "$ref": "#/definitions/GitHub.Activity.Starring.StarRepo"
    },
    {
      "$ref": "#/definitions/GitHub.Activity.Watching.CheckWatched"
    },
    {
      "$ref": "#/definitions/GitHub.Activity.Watching.GetAllForCurrent"
    },
    {
      "$ref": "#/definitions/GitHub.Activity.Watching.GetAllForUser"
    },
    {
      "$ref": "#/definitions/GitHub.Activity.Watching.GetAllWatchers"
    },
    {
      "$ref": "#/definitions/GitHub.Activity.Watching.UnwatchRepo"
    },
    {
      "$ref": "#/definitions/GitHub.Activity.Watching.WatchRepo"
    },
    {
      "$ref": "#/definitions/GitHub.Check.Run.Create"
    },
    {
      "$ref": "#/definitions/GitHub.Check.Run.Get"
    },
    {
      "$ref": "#/definitions/GitHub.Check.Run.GetAllAnnotations"
    },
    {
      "$ref": "#/definitions/GitHub.Check.Run.GetAllForCheckSuite"
    },
    {
      "$ref": "#/definitions/GitHub.Check.Run.GetAllForReference"
    },
    {
      "$ref": "#/definitions/GitHub.Check.Run.Update"
    },
    {
      "$ref": "#/definitions/GitHub.Check.Suite.Create"
    },
    {
      "$ref": "#/definitions/GitHub.Check.Suite.Get"
    },
    {
      "$ref": "#/definitions/GitHub.Check.Suite.GetAllForReference"
    },
    {
      "$ref": "#/definitions/GitHub.Check.Suite.Rerequest"
    },
    {
      "$ref": "#/definitions/GitHub.Check.Suite.UpdatePreferences"
    },
    {
      "$ref": "#/definitions/GitHub.Enterprise.AdminStats.GetStatisticsAll"
    },
    {
      "$ref": "#/definitions/GitHub.Enterprise.AdminStats.GetStatisticsComments"
    },
    {
      "$ref": "#/definitions/GitHub.Enterprise.AdminStats.GetStatisticsGists"
    },
    {
      "$ref": "#/definitions/GitHub.Enterprise.AdminStats.GetStatisticsHooks"
    },
    {
      "$ref": "#/definitions/GitHub.Enterprise.AdminStats.GetStatisticsIssues"
    },
    {
      "$ref": "#/definitions/GitHub.Enterprise.AdminStats.GetStatisticsMilestones"
    },
    {
      "$ref": "#/definitions/GitHub.Enterprise.AdminStats.GetStatisticsOrgs"
    },
    {
      "$ref": "#/definitions/GitHub.Enterprise.AdminStats.GetStatisticsPages"
    },
    {
      "$ref": "#/definitions/GitHub.Enterprise.AdminStats.GetStatisticsPulls"
    },
    {
      "$ref": "#/definitions/GitHub.Enterprise.AdminStats.GetStatisticsRepos"
    },
    {
      "$ref": "#/definitions/GitHub.Enterprise.AdminStats.GetStatisticsUsers"
    },
    {
      "$ref": "#/definitions/GitHub.Enterprise.Ldap.QueueSyncTeamMapping"
    },
    {
      "$ref": "#/definitions/GitHub.Enterprise.Ldap.QueueSyncUserMapping"
    },
    {
      "$ref": "#/definitions/GitHub.Enterprise.Ldap.UpdateTeamMapping"
    },
    {
      "$ref": "#/definitions/GitHub.Enterprise.Ldap.UpdateUserMapping"
    },
    {
      "$ref": "#/definitions/GitHub.Enterprise.License.Get"
    },
    {
      "$ref": "#/definitions/GitHub.Enterprise.ManagementConsole.EditMaintenanceMode"
    },
    {
      "$ref": "#/definitions/GitHub.Enterprise.ManagementConsole.GetMaintenanceMode"
    },
    {
      "$ref": "#/definitions/GitHub.Enterprise.Organization.Create"
    },
    {
      "$ref": "#/definitions/GitHub.Enterprise.PreReceiveEnvironment.Create"
    },
    {
      "$ref": "#/definitions/GitHub.Enterprise.PreReceiveEnvironment.Delete"
    },
    {
      "$ref": "#/definitions/GitHub.Enterprise.PreReceiveEnvironment.DownloadStatus"
    },
    {
      "$ref": "#/definitions/GitHub.Enterprise.PreReceiveEnvironment.Edit"
    },
    {
      "$ref": "#/definitions/GitHub.Enterprise.PreReceiveEnvironment.Get"
    },
    {
      "$ref": "#/definitions/GitHub.Enterprise.PreReceiveEnvironment.GetAll"
    },
    {
      "$ref": "#/definitions/GitHub.Enterprise.PreReceiveEnvironment.TriggerDownload"
    },
    {
      "$ref": "#/definitions/GitHub.Enterprise.SearchIndexing.Queue"
    },
    {
      "$ref": "#/definitions/GitHub.Enterprise.SearchIndexing.QueueAll"
    },
    {
      "$ref": "#/definitions/GitHub.Enterprise.SearchIndexing.QueueAllCode"
    },
    {
      "$ref": "#/definitions/GitHub.Enterprise.SearchIndexing.QueueAllIssues"
    },
    {
      "$ref": "#/definitions/GitHub.Gist.Comment.Create"
    },
    {
      "$ref": "#/definitions/GitHub.Gist.Comment.Delete"
    },
    {
      "$ref": "#/definitions/GitHub.Gist.Comment.Get"
    },
    {
      "$ref": "#/definitions/GitHub.Gist.Comment.GetAllForGist"
    },
    {
      "$ref": "#/definitions/GitHub.Gist.Comment.Update"
    },
    {
      "$ref": "#/definitions/GitHub.Gist.Create"
    },
    {
      "$ref": "#/definitions/GitHub.Gist.Delete"
    },
    {
      "$ref": "#/definitions/GitHub.Gist.Edit"
    },
    {
      "$ref": "#/definitions/GitHub.Gist.Fork"
    },
    {
      "$ref": "#/definitions/GitHub.Gist.Get"
    },
    {
      "$ref": "#/definitions/GitHub.Gist.GetAll"
    },
    {
      "$ref": "#/definitions/GitHub.Gist.GetAllCommits"
    },
    {
      "$ref": "#/definitions/GitHub.Gist.GetAllForUser"
    },
    {
      "$ref": "#/definitions/GitHub.Gist.GetAllForks"
    },
    {
      "$ref": "#/definitions/GitHub.Gist.GetAllPublic"
    },
    {
      "$ref": "#/definitions/GitHub.Gist.GetAllStarred"
    },
    {
      "$ref": "#/definitions/GitHub.Gist.IsStarred"
    },
    {
      "$ref": "#/definitions/GitHub.Gist.Star"
    },
    {
      "$ref": "#/definitions/GitHub.Gist.Unstar"
    },
    {
      "$ref": "#/definitions/GitHub.Git.Blob.Create"
    },
    {
      "$ref": "#/definitions/GitHub.Git.Blob.Get"
    },
    {
      "$ref": "#/definitions/GitHub.Git.Commit.Create"
    },
    {
      "$ref": "#/definitions/GitHub.Git.Commit.Get"
    },
    {
      "$ref": "#/definitions/GitHub.Git.Reference.Create"
    },
    {
      "$ref": "#/definitions/GitHub.Git.Reference.Delete"
    },
    {
      "$ref": "#/definitions/GitHub.Git.Reference.Get"
    },
    {
      "$ref": "#/definitions/GitHub.Git.Reference.GetAll"
    },
    {
      "$ref": "#/definitions/GitHub.Git.Reference.GetAllForSubNamespace"
    },
    {
      "$ref": "#/definitions/GitHub.Git.Reference.Update"
    },
    {
      "$ref": "#/definitions/GitHub.Git.Tag.Create"
    },
    {
      "$ref": "#/definitions/GitHub.Git.Tag.Get"
    },
    {
      "$ref": "#/definitions/GitHub.Git.Tree.Create"
    },
    {
      "$ref": "#/definitions/GitHub.Git.Tree.Get"
    },
    {
      "$ref": "#/definitions/GitHub.Git.Tree.GetRecursive"
    },
    {
      "$ref": "#/definitions/GitHub.GitHubApps.CreateInstallationToken"
    },
    {
      "$ref": "#/definitions/GitHub.GitHubApps.Get"
    },
    {
      "$ref": "#/definitions/GitHub.GitHubApps.GetAllInstallationsForCurrent"
    },
    {
      "$ref": "#/definitions/GitHub.GitHubApps.GetAllInstallationsForCurrentUser"
    },
    {
      "$ref": "#/definitions/GitHub.GitHubApps.GetCurrent"
    },
    {
      "$ref": "#/definitions/GitHub.GitHubApps.GetInstallation"
    },
    {
      "$ref": "#/definitions/GitHub.GitHubApps.GetInstallationForCurrent"
    },
    {
      "$ref": "#/definitions/GitHub.GitHubApps.GetOrganizationInstallationForCurrent"
    },
    {
      "$ref": "#/definitions/GitHub.GitHubApps.GetRepositoryInstallationForCurrent"
    },
    {
      "$ref": "#/definitions/GitHub.GitHubApps.GetUserInstallationForCurrent"
    },
    {
      "$ref": "#/definitions/GitHub.GitHubApps.Installation.GetAllRepositoriesForCurrent"
    },
    {
      "$ref": "#/definitions/GitHub.GitHubApps.Installation.GetAllRepositoriesForCurrentUser"
    },
    {
      "$ref": "#/definitions/GitHub.Issue.Assignee.AddAssignees"
    },
    {
      "$ref": "#/definitions/GitHub.Issue.Assignee.CheckAssignee"
    },
    {
      "$ref": "#/definitions/GitHub.Issue.Assignee.GetAllForRepository"
    },
    {
      "$ref": "#/definitions/GitHub.Issue.Assignee.RemoveAssignees"
    },
    {
      "$ref": "#/definitions/GitHub.Issue.Comment.Create"
    },
    {
      "$ref": "#/definitions/GitHub.Issue.Comment.Delete"
    },
    {
      "$ref": "#/definitions/GitHub.Issue.Comment.Get"
    },
    {
      "$ref": "#/definitions/GitHub.Issue.Comment.GetAllForIssue"
    },
    {
      "$ref": "#/definitions/GitHub.Issue.Comment.GetAllForRepository"
    },
    {
      "$ref": "#/definitions/GitHub.Issue.Comment.Update"
    },
    {
      "$ref": "#/definitions/GitHub.Issue.Create"
    },
    {
      "$ref": "#/definitions/GitHub.Issue.Events.Get"
    },
    {
      "$ref": "#/definitions/GitHub.Issue.Events.GetAllForIssue"
    },
    {
      "$ref": "#/definitions/GitHub.Issue.Events.GetAllForRepository"
    },
    {
      "$ref": "#/definitions/GitHub.Issue.Get"
    },
    {
      "$ref": "#/definitions/GitHub.Issue.GetAllForCurrent"
    },
    {
      "$ref": "#/definitions/GitHub.Issue.GetAllForOrganization"
    },
    {
      "$ref": "#/definitions/GitHub.Issue.GetAllForOwnedAndMemberRepositories"
    },
    {
      "$ref": "#/definitions/GitHub.Issue.GetAllForRepository"
    },
    {
      "$ref": "#/definitions/GitHub.Issue.Labels.AddToIssue"
    },
    {
      "$ref": "#/definitions/GitHub.Issue.Labels.Create"
    },
    {
      "$ref": "#/definitions/GitHub.Issue.Labels.Delete"
    },
    {
      "$ref": "#/definitions/GitHub.Issue.Labels.Get"
    },
    {
      "$ref": "#/definitions/GitHub.Issue.Labels.GetAllForIssue"
    },
    {
      "$ref": "#/definitions/GitHub.Issue.Labels.GetAllForMilestone"
    },
    {
      "$ref": "#/definitions/GitHub.Issue.Labels.GetAllForRepository"
    },
    {
      "$ref": "#/definitions/GitHub.Issue.Labels.RemoveAllFromIssue"
    },
    {
      "$ref": "#/definitions/GitHub.Issue.Labels.RemoveFromIssue"
    },
    {
      "$ref": "#/definitions/GitHub.Issue.Labels.ReplaceAllForIssue"
    },
    {
      "$ref": "#/definitions/GitHub.Issue.Labels.Update"
    },
    {
      "$ref": "#/definitions/GitHub.Issue.Lock"
    },
    {
      "$ref": "#/definitions/GitHub.Issue.Milestone.Create"
    },
    {
      "$ref": "#/definitions/GitHub.Issue.Milestone.Delete"
    },
    {
      "$ref": "#/definitions/GitHub.Issue.Milestone.Get"
    },
    {
      "$ref": "#/definitions/GitHub.Issue.Milestone.GetAllForRepository"
    },
    {
      "$ref": "#/definitions/GitHub.Issue.Milestone.Update"
    },
    {
      "$ref": "#/definitions/GitHub.Issue.Timeline.GetAllForIssue"
    },
    {
      "$ref": "#/definitions/GitHub.Issue.Unlock"
    },
    {
      "$ref": "#/definitions/GitHub.Issue.Update"
    },
    {
      "$ref": "#/definitions/GitHub.Migration.Migrations.DeleteArchive"
    },
    {
      "$ref": "#/definitions/GitHub.Migration.Migrations.Get"
    },
    {
      "$ref": "#/definitions/GitHub.Migration.Migrations.GetAll"
    },
    {
      "$ref": "#/definitions/GitHub.Migration.Migrations.GetArchive"
    },
    {
      "$ref": "#/definitions/GitHub.Migration.Migrations.Start"
    },
    {
      "$ref": "#/definitions/GitHub.Migration.Migrations.UnlockRepository"
    },
    {
      "$ref": "#/definitions/GitHub.Miscellaneous.GetAllEmojis"
    },
    {
      "$ref": "#/definitions/GitHub.Miscellaneous.GetAllGitIgnoreTemplates"
    },
    {
      "$ref": "#/definitions/GitHub.Miscellaneous.GetAllLicenses"
    },
    {
      "$ref": "#/definitions/GitHub.Miscellaneous.GetGitIgnoreTemplate"
    },
    {
      "$ref": "#/definitions/GitHub.Miscellaneous.GetLicense"
    },
    {
      "$ref": "#/definitions/GitHub.Miscellaneous.GetMetadata"
    },
    {
      "$ref": "#/definitions/GitHub.Miscellaneous.GetRateLimits"
    },
    {
      "$ref": "#/definitions/GitHub.Miscellaneous.RenderArbitraryMarkdown"
    },
    {
      "$ref": "#/definitions/GitHub.Miscellaneous.RenderRawMarkdown"
    },
    {
      "$ref": "#/definitions/GitHub.Oauth.CreateAccessToken"
    },
    {
      "$ref": "#/definitions/GitHub.Oauth.GetGitHubLoginUrl"
    },
    {
      "$ref": "#/definitions/GitHub.OnCheckRunEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnCheckSuiteEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnCodeScanningAlertEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnCommitCommentEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnContentReferenceEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnCreateEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnDeleteEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnDeployKeyEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnDeploymentEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnDeploymentStatusEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnForkEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnGithubAppAuthorizationEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnGollumEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnInstallationEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnInstallationRepositoriesEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnIssueCommentEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnIssuesEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnLabelEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnMarketplacePurchaseEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnMemberEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnMembershipEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnMetaEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnMilestoneEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnOrgBlockEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnOrganizationEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnPackageEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnPageBuildEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnPingEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnProjectCardEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnProjectColumnEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnProjectEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnPublicEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnPullRequestEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnPullRequestReviewCommentEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnPullRequestReviewEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnPushEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnReleaseEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnRepositoryDispatchEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnRepositoryEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnRepositoryImportEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnRepositoryVulnerabilityAlertEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnSecurityAdvisoryEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnSponsorshipEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnStarEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnStatusEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnTeamAddEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnTeamEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnWatchEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnWorkflowDispatchEvent"
    },
    {
      "$ref": "#/definitions/GitHub.OnWorkflowRunEvent"
    },
    {
      "$ref": "#/definitions/GitHub.Organization.Get"
    },
    {
      "$ref": "#/definitions/GitHub.Organization.GetAll"
    },
    {
      "$ref": "#/definitions/GitHub.Organization.GetAllForCurrent"
    },
    {
      "$ref": "#/definitions/GitHub.Organization.GetAllForUser"
    },
    {
      "$ref": "#/definitions/GitHub.Organization.Hook.Create"
    },
    {
      "$ref": "#/definitions/GitHub.Organization.Hook.Delete"
    },
    {
      "$ref": "#/definitions/GitHub.Organization.Hook.Edit"
    },
    {
      "$ref": "#/definitions/GitHub.Organization.Hook.Get"
    },
    {
      "$ref": "#/definitions/GitHub.Organization.Hook.GetAll"
    },
    {
      "$ref": "#/definitions/GitHub.Organization.Hook.Ping"
    },
    {
      "$ref": "#/definitions/GitHub.Organization.Member.AddOrUpdateOrganizationMembership"
    },
    {
      "$ref": "#/definitions/GitHub.Organization.Member.CheckMember"
    },
    {
      "$ref": "#/definitions/GitHub.Organization.Member.CheckMemberPublic"
    },
    {
      "$ref": "#/definitions/GitHub.Organization.Member.Conceal"
    },
    {
      "$ref": "#/definitions/GitHub.Organization.Member.Delete"
    },
    {
      "$ref": "#/definitions/GitHub.Organization.Member.GetAll"
    },
    {
      "$ref": "#/definitions/GitHub.Organization.Member.GetAllPendingInvitations"
    },
    {
      "$ref": "#/definitions/GitHub.Organization.Member.GetAllPublic"
    },
    {
      "$ref": "#/definitions/GitHub.Organization.Member.GetOrganizationMembership"
    },
    {
      "$ref": "#/definitions/GitHub.Organization.Member.Publicize"
    },
    {
      "$ref": "#/definitions/GitHub.Organization.Member.RemoveOrganizationMembership"
    },
    {
      "$ref": "#/definitions/GitHub.Organization.OutsideCollaborator.ConvertFromMember"
    },
    {
      "$ref": "#/definitions/GitHub.Organization.OutsideCollaborator.Delete"
    },
    {
      "$ref": "#/definitions/GitHub.Organization.OutsideCollaborator.GetAll"
    },
    {
      "$ref": "#/definitions/GitHub.Organization.Team.AddOrEditMembership"
    },
    {
      "$ref": "#/definitions/GitHub.Organization.Team.AddRepository"
    },
    {
      "$ref": "#/definitions/GitHub.Organization.Team.Create"
    },
    {
      "$ref": "#/definitions/GitHub.Organization.Team.Delete"
    },
    {
      "$ref": "#/definitions/GitHub.Organization.Team.Get"
    },
    {
      "$ref": "#/definitions/GitHub.Organization.Team.GetAll"
    },
    {
      "$ref": "#/definitions/GitHub.Organization.Team.GetAllChildTeams"
    },
    {
      "$ref": "#/definitions/GitHub.Organization.Team.GetAllForCurrent"
    },
    {
      "$ref": "#/definitions/GitHub.Organization.Team.GetAllMembers"
    },
    {
      "$ref": "#/definitions/GitHub.Organization.Team.GetAllPendingInvitations"
    },
    {
      "$ref": "#/definitions/GitHub.Organization.Team.GetAllRepositories"
    },
    {
      "$ref": "#/definitions/GitHub.Organization.Team.GetMembershipDetails"
    },
    {
      "$ref": "#/definitions/GitHub.Organization.Team.IsRepositoryManagedByTeam"
    },
    {
      "$ref": "#/definitions/GitHub.Organization.Team.RemoveMembership"
    },
    {
      "$ref": "#/definitions/GitHub.Organization.Team.RemoveRepository"
    },
    {
      "$ref": "#/definitions/GitHub.Organization.Team.Update"
    },
    {
      "$ref": "#/definitions/GitHub.Organization.Update"
    },
    {
      "$ref": "#/definitions/GitHub.PullRequest.Commits"
    },
    {
      "$ref": "#/definitions/GitHub.PullRequest.Create"
    },
    {
      "$ref": "#/definitions/GitHub.PullRequest.Files"
    },
    {
      "$ref": "#/definitions/GitHub.PullRequest.Get"
    },
    {
      "$ref": "#/definitions/GitHub.PullRequest.GetAllForRepository"
    },
    {
      "$ref": "#/definitions/GitHub.PullRequest.Merge"
    },
    {
      "$ref": "#/definitions/GitHub.PullRequest.Merged"
    },
    {
      "$ref": "#/definitions/GitHub.PullRequest.Review.Create"
    },
    {
      "$ref": "#/definitions/GitHub.PullRequest.Review.Delete"
    },
    {
      "$ref": "#/definitions/GitHub.PullRequest.Review.Dismiss"
    },
    {
      "$ref": "#/definitions/GitHub.PullRequest.Review.Get"
    },
    {
      "$ref": "#/definitions/GitHub.PullRequest.Review.GetAll"
    },
    {
      "$ref": "#/definitions/GitHub.PullRequest.Review.GetAllComments"
    },
    {
      "$ref": "#/definitions/GitHub.PullRequest.Review.Submit"
    },
    {
      "$ref": "#/definitions/GitHub.PullRequest.ReviewComment.Create"
    },
    {
      "$ref": "#/definitions/GitHub.PullRequest.ReviewComment.CreateReply"
    },
    {
      "$ref": "#/definitions/GitHub.PullRequest.ReviewComment.Delete"
    },
    {
      "$ref": "#/definitions/GitHub.PullRequest.ReviewComment.Edit"
    },
    {
      "$ref": "#/definitions/GitHub.PullRequest.ReviewComment.GetAll"
    },
    {
      "$ref": "#/definitions/GitHub.PullRequest.ReviewComment.GetAllForRepository"
    },
    {
      "$ref": "#/definitions/GitHub.PullRequest.ReviewComment.GetComment"
    },
    {
      "$ref": "#/definitions/GitHub.PullRequest.ReviewRequest.Create"
    },
    {
      "$ref": "#/definitions/GitHub.PullRequest.ReviewRequest.Delete"
    },
    {
      "$ref": "#/definitions/GitHub.PullRequest.ReviewRequest.Get"
    },
    {
      "$ref": "#/definitions/GitHub.PullRequest.Update"
    },
    {
      "$ref": "#/definitions/GitHub.Reaction.CommitComment.Create"
    },
    {
      "$ref": "#/definitions/GitHub.Reaction.CommitComment.GetAll"
    },
    {
      "$ref": "#/definitions/GitHub.Reaction.Delete"
    },
    {
      "$ref": "#/definitions/GitHub.Reaction.Issue.Create"
    },
    {
      "$ref": "#/definitions/GitHub.Reaction.Issue.GetAll"
    },
    {
      "$ref": "#/definitions/GitHub.Reaction.IssueComment.Create"
    },
    {
      "$ref": "#/definitions/GitHub.Reaction.IssueComment.GetAll"
    },
    {
      "$ref": "#/definitions/GitHub.Reaction.PullRequestReviewComment.Create"
    },
    {
      "$ref": "#/definitions/GitHub.Reaction.PullRequestReviewComment.GetAll"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Branch.AddAdminEnforcement"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Branch.AddProtectedBranchTeamRestrictions"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Branch.AddProtectedBranchUserRestrictions"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Branch.AddRequiredStatusChecksContexts"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Branch.DeleteBranchProtection"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Branch.DeleteProtectedBranchRestrictions"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Branch.DeleteProtectedBranchTeamRestrictions"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Branch.DeleteProtectedBranchUserRestrictions"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Branch.DeleteRequiredStatusChecks"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Branch.DeleteRequiredStatusChecksContexts"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Branch.Get"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Branch.GetAdminEnforcement"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Branch.GetAll"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Branch.GetAllProtectedBranchTeamRestrictions"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Branch.GetAllProtectedBranchUserRestrictions"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Branch.GetAllRequiredStatusChecksContexts"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Branch.GetBranchProtection"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Branch.GetProtectedBranchRestrictions"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Branch.GetRequiredStatusChecks"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Branch.GetReviewEnforcement"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Branch.RemoveAdminEnforcement"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Branch.RemoveReviewEnforcement"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Branch.UpdateBranchProtection"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Branch.UpdateProtectedBranchTeamRestrictions"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Branch.UpdateProtectedBranchUserRestrictions"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Branch.UpdateRequiredStatusChecks"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Branch.UpdateRequiredStatusChecksContexts"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Branch.UpdateReviewEnforcement"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Collaborator.Add"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Collaborator.Delete"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Collaborator.GetAll"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Collaborator.Invite"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Collaborator.IsCollaborator"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Collaborator.ReviewPermission"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Comment.Create"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Comment.Delete"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Comment.Get"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Comment.GetAllForCommit"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Comment.GetAllForRepository"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Comment.Update"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Commit.Compare"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Commit.Get"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Commit.GetAll"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Commit.GetSha1"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Content.CreateFile"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Content.DeleteFile"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Content.GetAllContents"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Content.GetAllContentsByRef"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Content.GetArchive"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Content.GetRawContent"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Content.GetRawContentByRef"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Content.GetReadme"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Content.GetReadmeHtml"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Content.UpdateFile"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Create"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Delete"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.DeployKeys.Create"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.DeployKeys.Delete"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.DeployKeys.Get"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.DeployKeys.GetAll"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Deployment.Create"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Deployment.GetAll"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Deployment.Status.Create"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Deployment.Status.GetAll"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Edit"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Forks.Create"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Forks.GetAll"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Get"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.GetAllContributors"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.GetAllForCurrent"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.GetAllForOrg"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.GetAllForUser"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.GetAllLanguages"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.GetAllPublic"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.GetAllTags"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.GetAllTeams"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.GetLicenseContents"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Hooks.Create"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Hooks.Delete"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Hooks.Edit"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Hooks.Get"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Hooks.GetAll"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Hooks.Ping"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Hooks.Test"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Invitation.Accept"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Invitation.Decline"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Invitation.Delete"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Invitation.Edit"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Invitation.GetAllForCurrent"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Invitation.GetAllForRepository"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Merging.Create"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Page.Get"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Page.GetAll"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Page.GetLatest"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Page.RequestPageBuild"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Project.Card.Create"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Project.Card.Delete"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Project.Card.Get"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Project.Card.GetAll"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Project.Card.Move"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Project.Card.Update"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Project.Column.Create"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Project.Column.Delete"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Project.Column.Get"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Project.Column.GetAll"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Project.Column.Move"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Project.Column.Update"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Project.CreateForOrganization"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Project.CreateForRepository"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Project.Delete"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Project.Get"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Project.GetAllForOrganization"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Project.GetAllForRepository"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Project.Update"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.PullRequest.Commits"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.PullRequest.Create"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.PullRequest.Files"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.PullRequest.Get"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.PullRequest.GetAllForRepository"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.PullRequest.Merge"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.PullRequest.Merged"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.PullRequest.Review.Create"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.PullRequest.Review.Delete"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.PullRequest.Review.Dismiss"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.PullRequest.Review.Get"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.PullRequest.Review.GetAll"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.PullRequest.Review.GetAllComments"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.PullRequest.Review.Submit"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.PullRequest.ReviewComment.Create"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.PullRequest.ReviewComment.CreateReply"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.PullRequest.ReviewComment.Delete"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.PullRequest.ReviewComment.Edit"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.PullRequest.ReviewComment.GetAll"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.PullRequest.ReviewComment.GetAllForRepository"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.PullRequest.ReviewComment.GetComment"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.PullRequest.ReviewRequest.Create"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.PullRequest.ReviewRequest.Delete"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.PullRequest.ReviewRequest.Get"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.PullRequest.Update"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Release.Create"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Release.Delete"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Release.DeleteAsset"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Release.Edit"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Release.EditAsset"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Release.Get"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Release.GetAll"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Release.GetAllAssets"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Release.GetAsset"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Release.GetLatest"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Release.UploadAsset"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Statistics.GetCodeFrequency"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Statistics.GetCommitActivity"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Statistics.GetContributors"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Statistics.GetParticipation"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Statistics.GetPunchCard"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Status.Create"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Status.GetAll"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Status.GetCombined"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Traffic.GetAllPaths"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Traffic.GetAllReferrers"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Traffic.GetClones"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Traffic.GetViews"
    },
    {
      "$ref": "#/definitions/GitHub.Repository.Transfer"
    },
    {
      "$ref": "#/definitions/GitHub.Search.SearchCode"
    },
    {
      "$ref": "#/definitions/GitHub.Search.SearchIssues"
    },
    {
      "$ref": "#/definitions/GitHub.Search.SearchLabels"
    },
    {
      "$ref": "#/definitions/GitHub.Search.SearchRepo"
    },
    {
      "$ref": "#/definitions/GitHub.Search.SearchUsers"
    },
    {
      "$ref": "#/definitions/GitHub.User.Administration.Create"
    },
    {
      "$ref": "#/definitions/GitHub.User.Administration.CreateImpersonationToken"
    },
    {
      "$ref": "#/definitions/GitHub.User.Administration.Delete"
    },
    {
      "$ref": "#/definitions/GitHub.User.Administration.DeleteImpersonationToken"
    },
    {
      "$ref": "#/definitions/GitHub.User.Administration.DeletePublicKey"
    },
    {
      "$ref": "#/definitions/GitHub.User.Administration.Demote"
    },
    {
      "$ref": "#/definitions/GitHub.User.Administration.ListAllPublicKeys"
    },
    {
      "$ref": "#/definitions/GitHub.User.Administration.Promote"
    },
    {
      "$ref": "#/definitions/GitHub.User.Administration.Rename"
    },
    {
      "$ref": "#/definitions/GitHub.User.Administration.Suspend"
    },
    {
      "$ref": "#/definitions/GitHub.User.Administration.Unsuspend"
    },
    {
      "$ref": "#/definitions/GitHub.User.Current"
    },
    {
      "$ref": "#/definitions/GitHub.User.Email.Add"
    },
    {
      "$ref": "#/definitions/GitHub.User.Email.Delete"
    },
    {
      "$ref": "#/definitions/GitHub.User.Email.GetAll"
    },
    {
      "$ref": "#/definitions/GitHub.User.Followers.Follow"
    },
    {
      "$ref": "#/definitions/GitHub.User.Followers.GetAll"
    },
    {
      "$ref": "#/definitions/GitHub.User.Followers.GetAllFollowing"
    },
    {
      "$ref": "#/definitions/GitHub.User.Followers.GetAllFollowingForCurrent"
    },
    {
      "$ref": "#/definitions/GitHub.User.Followers.GetAllForCurrent"
    },
    {
      "$ref": "#/definitions/GitHub.User.Followers.IsFollowing"
    },
    {
      "$ref": "#/definitions/GitHub.User.Followers.IsFollowingForCurrent"
    },
    {
      "$ref": "#/definitions/GitHub.User.Followers.Unfollow"
    },
    {
      "$ref": "#/definitions/GitHub.User.Get"
    },
    {
      "$ref": "#/definitions/GitHub.User.GitSshKey.Create"
    },
    {
      "$ref": "#/definitions/GitHub.User.GitSshKey.Delete"
    },
    {
      "$ref": "#/definitions/GitHub.User.GitSshKey.Get"
    },
    {
      "$ref": "#/definitions/GitHub.User.GitSshKey.GetAll"
    },
    {
      "$ref": "#/definitions/GitHub.User.GitSshKey.GetAllForCurrent"
    },
    {
      "$ref": "#/definitions/GitHub.User.GpgKey.Create"
    },
    {
      "$ref": "#/definitions/GitHub.User.GpgKey.Delete"
    },
    {
      "$ref": "#/definitions/GitHub.User.GpgKey.Get"
    },
    {
      "$ref": "#/definitions/GitHub.User.GpgKey.GetAllForCurrent"
    },
    {
      "$ref": "#/definitions/GitHub.User.Update"
    },
    {
      "$ref": "#/definitions/Microsoft.ActivityTemplate"
    },
    {
      "$ref": "#/definitions/Microsoft.AdaptiveDialog"
    },
    {
      "$ref": "#/definitions/Microsoft.AgeEntityRecognizer"
    },
    {
      "$ref": "#/definitions/Microsoft.Ask"
    },
    {
      "$ref": "#/definitions/Microsoft.AttachmentInput"
    },
    {
      "$ref": "#/definitions/Microsoft.BeginDialog"
    },
    {
      "$ref": "#/definitions/Microsoft.BeginSkill"
    },
    {
      "$ref": "#/definitions/Microsoft.BreakLoop"
    },
    {
      "$ref": "#/definitions/Microsoft.CancelAllDialogs"
    },
    {
      "$ref": "#/definitions/Microsoft.CancelDialog"
    },
    {
      "$ref": "#/definitions/Microsoft.ChannelMentionEntityRecognizer"
    },
    {
      "$ref": "#/definitions/Microsoft.ChoiceInput"
    },
    {
      "$ref": "#/definitions/Microsoft.ConditionalSelector"
    },
    {
      "$ref": "#/definitions/Microsoft.ConfirmInput"
    },
    {
      "$ref": "#/definitions/Microsoft.ConfirmationEntityRecognizer"
    },
    {
      "$ref": "#/definitions/Microsoft.ContinueConversationLater"
    },
    {
      "$ref": "#/definitions/Microsoft.ContinueLoop"
    },
    {
      "$ref": "#/definitions/Microsoft.CrossTrainedRecognizerSet"
    },
    {
      "$ref": "#/definitions/Microsoft.CurrencyEntityRecognizer"
    },
    {
      "$ref": "#/definitions/Microsoft.DateTimeEntityRecognizer"
    },
    {
      "$ref": "#/definitions/Microsoft.DateTimeInput"
    },
    {
      "$ref": "#/definitions/Microsoft.DebugBreak"
    },
    {
      "$ref": "#/definitions/Microsoft.DeleteActivity"
    },
    {
      "$ref": "#/definitions/Microsoft.DeleteProperties"
    },
    {
      "$ref": "#/definitions/Microsoft.DeleteProperty"
    },
    {
      "$ref": "#/definitions/Microsoft.DimensionEntityRecognizer"
    },
    {
      "$ref": "#/definitions/Microsoft.EditActions"
    },
    {
      "$ref": "#/definitions/Microsoft.EditArray"
    },
    {
      "$ref": "#/definitions/Microsoft.EmailEntityRecognizer"
    },
    {
      "$ref": "#/definitions/Microsoft.EmitEvent"
    },
    {
      "$ref": "#/definitions/Microsoft.EndDialog"
    },
    {
      "$ref": "#/definitions/Microsoft.EndTurn"
    },
    {
      "$ref": "#/definitions/Microsoft.FirstSelector"
    },
    {
      "$ref": "#/definitions/Microsoft.Foreach"
    },
    {
      "$ref": "#/definitions/Microsoft.ForeachPage"
    },
    {
      "$ref": "#/definitions/Microsoft.GetActivityMembers"
    },
    {
      "$ref": "#/definitions/Microsoft.GetConversationMembers"
    },
    {
      "$ref": "#/definitions/Microsoft.GotoAction"
    },
    {
      "$ref": "#/definitions/Microsoft.GuidEntityRecognizer"
    },
    {
      "$ref": "#/definitions/Microsoft.HashtagEntityRecognizer"
    },
    {
      "$ref": "#/definitions/Microsoft.HttpRequest"
    },
    {
      "$ref": "#/definitions/Microsoft.IfCondition"
    },
    {
      "$ref": "#/definitions/Microsoft.IpEntityRecognizer"
    },
    {
      "$ref": "#/definitions/Microsoft.LogAction"
    },
    {
      "$ref": "#/definitions/Microsoft.LuisRecognizer"
    },
    {
      "$ref": "#/definitions/Microsoft.MentionEntityRecognizer"
    },
    {
      "$ref": "#/definitions/Microsoft.MostSpecificSelector"
    },
    {
      "$ref": "#/definitions/Microsoft.MultiLanguageRecognizer"
    },
    {
      "$ref": "#/definitions/Microsoft.NumberEntityRecognizer"
    },
    {
      "$ref": "#/definitions/Microsoft.NumberInput"
    },
    {
      "$ref": "#/definitions/Microsoft.NumberRangeEntityRecognizer"
    },
    {
      "$ref": "#/definitions/Microsoft.OAuthInput"
    },
    {
      "$ref": "#/definitions/Microsoft.OnActivity"
    },
    {
      "$ref": "#/definitions/Microsoft.OnAssignEntity"
    },
    {
      "$ref": "#/definitions/Microsoft.OnBeginDialog"
    },
    {
      "$ref": "#/definitions/Microsoft.OnCancelDialog"
    },
    {
      "$ref": "#/definitions/Microsoft.OnChooseEntity"
    },
    {
      "$ref": "#/definitions/Microsoft.OnChooseIntent"
    },
    {
      "$ref": "#/definitions/Microsoft.OnChooseProperty"
    },
    {
      "$ref": "#/definitions/Microsoft.OnCondition"
    },
    {
      "$ref": "#/definitions/Microsoft.OnContinueConversation"
    },
    {
      "$ref": "#/definitions/Microsoft.OnConversationUpdateActivity"
    },
    {
      "$ref": "#/definitions/Microsoft.OnDialogEvent"
    },
    {
      "$ref": "#/definitions/Microsoft.OnEndOfActions"
    },
    {
      "$ref": "#/definitions/Microsoft.OnEndOfConversationActivity"
    },
    {
      "$ref": "#/definitions/Microsoft.OnError"
    },
    {
      "$ref": "#/definitions/Microsoft.OnEventActivity"
    },
    {
      "$ref": "#/definitions/Microsoft.OnHandoffActivity"
    },
    {
      "$ref": "#/definitions/Microsoft.OnInstallationUpdateActivity"
    },
    {
      "$ref": "#/definitions/Microsoft.OnIntent"
    },
    {
      "$ref": "#/definitions/Microsoft.OnInvokeActivity"
    },
    {
      "$ref": "#/definitions/Microsoft.OnMessageActivity"
    },
    {
      "$ref": "#/definitions/Microsoft.OnMessageDeleteActivity"
    },
    {
      "$ref": "#/definitions/Microsoft.OnMessageReactionActivity"
    },
    {
      "$ref": "#/definitions/Microsoft.OnMessageUpdateActivity"
    },
    {
      "$ref": "#/definitions/Microsoft.OnQnAMatch"
    },
    {
      "$ref": "#/definitions/Microsoft.OnRepromptDialog"
    },
    {
      "$ref": "#/definitions/Microsoft.OnTypingActivity"
    },
    {
      "$ref": "#/definitions/Microsoft.OnUnknownIntent"
    },
    {
      "$ref": "#/definitions/Microsoft.OrdinalEntityRecognizer"
    },
    {
      "$ref": "#/definitions/Microsoft.PercentageEntityRecognizer"
    },
    {
      "$ref": "#/definitions/Microsoft.PhoneNumberEntityRecognizer"
    },
    {
      "$ref": "#/definitions/Microsoft.RandomSelector"
    },
    {
      "$ref": "#/definitions/Microsoft.RecognizerSet"
    },
    {
      "$ref": "#/definitions/Microsoft.RegexEntityRecognizer"
    },
    {
      "$ref": "#/definitions/Microsoft.RegexRecognizer"
    },
    {
      "$ref": "#/definitions/Microsoft.RepeatDialog"
    },
    {
      "$ref": "#/definitions/Microsoft.ReplaceDialog"
    },
    {
      "$ref": "#/definitions/Microsoft.ResourceMultiLanguageGenerator"
    },
    {
      "$ref": "#/definitions/Microsoft.SendActivity"
    },
    {
      "$ref": "#/definitions/Microsoft.SetProperties"
    },
    {
      "$ref": "#/definitions/Microsoft.SetProperty"
    },
    {
      "$ref": "#/definitions/Microsoft.SignOutUser"
    },
    {
      "$ref": "#/definitions/Microsoft.StaticActivityTemplate"
    },
    {
      "$ref": "#/definitions/Microsoft.SwitchCondition"
    },
    {
      "$ref": "#/definitions/Microsoft.TelemetryTrackEvent"
    },
    {
      "$ref": "#/definitions/Microsoft.TemperatureEntityRecognizer"
    },
    {
      "$ref": "#/definitions/Microsoft.TemplateEngineLanguageGenerator"
    },
    {
      "$ref": "#/definitions/Microsoft.TextInput"
    },
    {
      "$ref": "#/definitions/Microsoft.TextTemplate"
    },
    {
      "$ref": "#/definitions/Microsoft.ThrowException"
    },
    {
      "$ref": "#/definitions/Microsoft.TraceActivity"
    },
    {
      "$ref": "#/definitions/Microsoft.TrueSelector"
    },
    {
      "$ref": "#/definitions/Microsoft.UpdateActivity"
    },
    {
      "$ref": "#/definitions/Microsoft.UrlEntityRecognizer"
    }
  ],
  "definitions": {
    "GitHub.Activity.Events.GetAll": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAll",
      "description": "Get all",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Activity.Events.GetAll"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Activity.Events.GetAllForAnOrganization": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForAnOrganization",
      "description": "Get all for an organization",
      "type": "object",
      "required": [
        "user",
        "organization",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "user": {
          "title": "User",
          "description": "User",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "organization": {
          "title": "Organization",
          "description": "Organization",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Activity.Events.GetAllForAnOrganization"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Activity.Events.GetAllForOrganization": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForOrganization",
      "description": "Get all for organization",
      "type": "object",
      "required": [
        "organization",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "organization": {
          "title": "Organization",
          "description": "Organization",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Activity.Events.GetAllForOrganization"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Activity.Events.GetAllForRepository": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForRepository",
      "description": "Get all for repository",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Activity.Events.GetAllForRepository"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Activity.Events.GetAllForRepositoryNetwork": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForRepositoryNetwork",
      "description": "Get all for repository network",
      "type": "object",
      "required": [
        "owner",
        "name",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Activity.Events.GetAllForRepositoryNetwork"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Activity.Events.GetAllIssuesForRepository": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllIssuesForRepository",
      "description": "Get all issues for repository",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Activity.Events.GetAllIssuesForRepository"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Activity.Events.GetAllUserPerformed": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllUserPerformed",
      "description": "Get all user performed",
      "type": "object",
      "required": [
        "user",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "user": {
          "title": "User",
          "description": "User",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Activity.Events.GetAllUserPerformed"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Activity.Events.GetAllUserPerformedPublic": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllUserPerformedPublic",
      "description": "Get all user performed public",
      "type": "object",
      "required": [
        "user",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "user": {
          "title": "User",
          "description": "User",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Activity.Events.GetAllUserPerformedPublic"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Activity.Events.GetAllUserReceived": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllUserReceived",
      "description": "Get all user received",
      "type": "object",
      "required": [
        "user",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "user": {
          "title": "User",
          "description": "User",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Activity.Events.GetAllUserReceived"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Activity.Events.GetAllUserReceivedPublic": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllUserReceivedPublic",
      "description": "Get all user received public",
      "type": "object",
      "required": [
        "user",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "user": {
          "title": "User",
          "description": "User",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Activity.Events.GetAllUserReceivedPublic"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Activity.Feeds.GetFeeds": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetFeeds",
      "description": "Get feeds",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Activity.Feeds.GetFeeds"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Activity.Notifications.DeleteThreadSubscription": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "DeleteThreadSubscription",
      "description": "Delete thread subscription",
      "type": "object",
      "required": [
        "id",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Activity.Notifications.DeleteThreadSubscription"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Activity.Notifications.Get": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get",
      "description": "Get",
      "type": "object",
      "required": [
        "id",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Activity.Notifications.Get"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Activity.Notifications.GetAllForCurrent": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForCurrent",
      "description": "Get all for current",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "request": {
          "title": "Request",
          "description": "Request",
          "$ref": "#/definitions/objectExpression"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Activity.Notifications.GetAllForCurrent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Activity.Notifications.GetAllForRepository": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForRepository",
      "description": "Get all for repository",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "request": {
          "title": "Request",
          "description": "Request",
          "$ref": "#/definitions/objectExpression"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Activity.Notifications.GetAllForRepository"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Activity.Notifications.GetThreadSubscription": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetThreadSubscription",
      "description": "Get thread subscription",
      "type": "object",
      "required": [
        "id",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Activity.Notifications.GetThreadSubscription"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Activity.Notifications.MarkAsRead": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "MarkAsRead",
      "description": "Mark as read",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "markAsReadRequest": {
          "title": "Mark as read request",
          "description": "Mark as read request",
          "$ref": "#/definitions/objectExpression"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Activity.Notifications.MarkAsRead"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Activity.Notifications.MarkAsReadForRepository": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "MarkAsReadForRepository",
      "description": "Mark as read for repository",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "markAsReadRequest": {
          "title": "Mark as read request",
          "description": "Mark as read request",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Activity.Notifications.MarkAsReadForRepository"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Activity.Notifications.SetThreadSubscription": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "SetThreadSubscription",
      "description": "Set thread subscription",
      "type": "object",
      "required": [
        "id",
        "threadSubscription",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "threadSubscription": {
          "title": "Thread subscription",
          "description": "Thread subscription",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Activity.Notifications.SetThreadSubscription"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Activity.Starring.CheckStarred": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "CheckStarred",
      "description": "Check starred",
      "type": "object",
      "required": [
        "owner",
        "name",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Activity.Starring.CheckStarred"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Activity.Starring.GetAllForCurrent": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForCurrent",
      "description": "Get all for current",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "request": {
          "title": "Request",
          "description": "Request",
          "$ref": "#/definitions/objectExpression"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Activity.Starring.GetAllForCurrent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Activity.Starring.GetAllForCurrentWithTimestamps": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForCurrentWithTimestamps",
      "description": "Get all for current with timestamps",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "request": {
          "title": "Request",
          "description": "Request",
          "$ref": "#/definitions/objectExpression"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Activity.Starring.GetAllForCurrentWithTimestamps"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Activity.Starring.GetAllForUser": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForUser",
      "description": "Get all for user",
      "type": "object",
      "required": [
        "user",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "user": {
          "title": "User",
          "description": "User",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "request": {
          "title": "Request",
          "description": "Request",
          "$ref": "#/definitions/objectExpression"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Activity.Starring.GetAllForUser"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Activity.Starring.GetAllForUserWithTimestamps": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForUserWithTimestamps",
      "description": "Get all for user with timestamps",
      "type": "object",
      "required": [
        "user",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "user": {
          "title": "User",
          "description": "User",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "request": {
          "title": "Request",
          "description": "Request",
          "$ref": "#/definitions/objectExpression"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Activity.Starring.GetAllForUserWithTimestamps"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Activity.Starring.GetAllStargazers": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllStargazers",
      "description": "Get all stargazers",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Activity.Starring.GetAllStargazers"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Activity.Starring.GetAllStargazersWithTimestamps": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllStargazersWithTimestamps",
      "description": "Get all stargazers with timestamps",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Activity.Starring.GetAllStargazersWithTimestamps"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Activity.Starring.RemoveStarFromRepo": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "RemoveStarFromRepo",
      "description": "Remove star from repo",
      "type": "object",
      "required": [
        "owner",
        "name",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Activity.Starring.RemoveStarFromRepo"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Activity.Starring.StarRepo": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "StarRepo",
      "description": "Star repo",
      "type": "object",
      "required": [
        "owner",
        "name",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Activity.Starring.StarRepo"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Activity.Watching.CheckWatched": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "CheckWatched",
      "description": "Check watched",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Activity.Watching.CheckWatched"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Activity.Watching.GetAllForCurrent": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForCurrent",
      "description": "Get all for current",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Activity.Watching.GetAllForCurrent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Activity.Watching.GetAllForUser": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForUser",
      "description": "Get all for user",
      "type": "object",
      "required": [
        "user",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "user": {
          "title": "User",
          "description": "User",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Activity.Watching.GetAllForUser"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Activity.Watching.GetAllWatchers": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllWatchers",
      "description": "Get all watchers",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Activity.Watching.GetAllWatchers"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Activity.Watching.UnwatchRepo": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "UnwatchRepo",
      "description": "Unwatch repo",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Activity.Watching.UnwatchRepo"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Activity.Watching.WatchRepo": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "WatchRepo",
      "description": "Watch repo",
      "type": "object",
      "required": [
        "newSubscription",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "newSubscription": {
          "title": "New subscription",
          "description": "New subscription",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Activity.Watching.WatchRepo"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Check.Run.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "newCheckRun",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "newCheckRun": {
          "title": "New check run",
          "description": "New check run",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Check.Run.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Check.Run.Get": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get",
      "description": "Get",
      "type": "object",
      "required": [
        "checkRunId",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "checkRunId": {
          "title": "Check run id",
          "description": "Check run id"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Check.Run.Get"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Check.Run.GetAllAnnotations": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllAnnotations",
      "description": "Get all annotations",
      "type": "object",
      "required": [
        "checkRunId",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "checkRunId": {
          "title": "Check run id",
          "description": "Check run id"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Check.Run.GetAllAnnotations"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Check.Run.GetAllForCheckSuite": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForCheckSuite",
      "description": "Get all for check suite",
      "type": "object",
      "required": [
        "checkSuiteId",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "checkSuiteId": {
          "title": "Check suite id",
          "description": "Check suite id"
        },
        "checkRunRequest": {
          "title": "Check run request",
          "description": "Check run request",
          "$ref": "#/definitions/objectExpression"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Check.Run.GetAllForCheckSuite"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Check.Run.GetAllForReference": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForReference",
      "description": "Get all for reference",
      "type": "object",
      "required": [
        "reference",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "reference": {
          "title": "Reference",
          "description": "Reference",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "checkRunRequest": {
          "title": "Check run request",
          "description": "Check run request",
          "$ref": "#/definitions/objectExpression"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Check.Run.GetAllForReference"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Check.Run.Update": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Update",
      "description": "Update",
      "type": "object",
      "required": [
        "checkRunId",
        "checkRunUpdate",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "checkRunId": {
          "title": "Check run id",
          "description": "Check run id"
        },
        "checkRunUpdate": {
          "title": "Check run update",
          "description": "Check run update",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Check.Run.Update"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Check.Suite.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "newCheckSuite",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "newCheckSuite": {
          "title": "New check suite",
          "description": "New check suite",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Check.Suite.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Check.Suite.Get": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get",
      "description": "Get",
      "type": "object",
      "required": [
        "checkSuiteId",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "checkSuiteId": {
          "title": "Check suite id",
          "description": "Check suite id"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Check.Suite.Get"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Check.Suite.GetAllForReference": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForReference",
      "description": "Get all for reference",
      "type": "object",
      "required": [
        "reference",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "reference": {
          "title": "Reference",
          "description": "Reference",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "request": {
          "title": "Request",
          "description": "Request",
          "$ref": "#/definitions/objectExpression"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Check.Suite.GetAllForReference"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Check.Suite.Rerequest": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Rerequest",
      "description": "Rerequest",
      "type": "object",
      "required": [
        "checkSuiteId",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "checkSuiteId": {
          "title": "Check suite id",
          "description": "Check suite id"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Check.Suite.Rerequest"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Check.Suite.UpdatePreferences": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "UpdatePreferences",
      "description": "Update preferences",
      "type": "object",
      "required": [
        "preferences",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "preferences": {
          "title": "Preferences",
          "description": "Preferences",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Check.Suite.UpdatePreferences"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Enterprise.AdminStats.GetStatisticsAll": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetStatisticsAll",
      "description": "Get statistics all",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Enterprise.AdminStats.GetStatisticsAll"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Enterprise.AdminStats.GetStatisticsComments": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetStatisticsComments",
      "description": "Get statistics comments",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Enterprise.AdminStats.GetStatisticsComments"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Enterprise.AdminStats.GetStatisticsGists": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetStatisticsGists",
      "description": "Get statistics gists",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Enterprise.AdminStats.GetStatisticsGists"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Enterprise.AdminStats.GetStatisticsHooks": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetStatisticsHooks",
      "description": "Get statistics hooks",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Enterprise.AdminStats.GetStatisticsHooks"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Enterprise.AdminStats.GetStatisticsIssues": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetStatisticsIssues",
      "description": "Get statistics issues",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Enterprise.AdminStats.GetStatisticsIssues"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Enterprise.AdminStats.GetStatisticsMilestones": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetStatisticsMilestones",
      "description": "Get statistics milestones",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Enterprise.AdminStats.GetStatisticsMilestones"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Enterprise.AdminStats.GetStatisticsOrgs": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetStatisticsOrgs",
      "description": "Get statistics orgs",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Enterprise.AdminStats.GetStatisticsOrgs"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Enterprise.AdminStats.GetStatisticsPages": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetStatisticsPages",
      "description": "Get statistics pages",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Enterprise.AdminStats.GetStatisticsPages"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Enterprise.AdminStats.GetStatisticsPulls": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetStatisticsPulls",
      "description": "Get statistics pulls",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Enterprise.AdminStats.GetStatisticsPulls"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Enterprise.AdminStats.GetStatisticsRepos": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetStatisticsRepos",
      "description": "Get statistics repos",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Enterprise.AdminStats.GetStatisticsRepos"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Enterprise.AdminStats.GetStatisticsUsers": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetStatisticsUsers",
      "description": "Get statistics users",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Enterprise.AdminStats.GetStatisticsUsers"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Enterprise.Ldap.QueueSyncTeamMapping": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "QueueSyncTeamMapping",
      "description": "Queue sync team mapping",
      "type": "object",
      "required": [
        "teamId",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "teamId": {
          "title": "Team id",
          "description": "Team id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Enterprise.Ldap.QueueSyncTeamMapping"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Enterprise.Ldap.QueueSyncUserMapping": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "QueueSyncUserMapping",
      "description": "Queue sync user mapping",
      "type": "object",
      "required": [
        "userName",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "userName": {
          "title": "User name",
          "description": "User name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Enterprise.Ldap.QueueSyncUserMapping"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Enterprise.Ldap.UpdateTeamMapping": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "UpdateTeamMapping",
      "description": "Update team mapping",
      "type": "object",
      "required": [
        "teamId",
        "newLdapMapping",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "teamId": {
          "title": "Team id",
          "description": "Team id"
        },
        "newLdapMapping": {
          "title": "New ldap mapping",
          "description": "New ldap mapping",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Enterprise.Ldap.UpdateTeamMapping"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Enterprise.Ldap.UpdateUserMapping": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "UpdateUserMapping",
      "description": "Update user mapping",
      "type": "object",
      "required": [
        "userName",
        "newLdapMapping",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "userName": {
          "title": "User name",
          "description": "User name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "newLdapMapping": {
          "title": "New ldap mapping",
          "description": "New ldap mapping",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Enterprise.Ldap.UpdateUserMapping"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Enterprise.License.Get": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get",
      "description": "Get",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Enterprise.License.Get"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Enterprise.ManagementConsole.EditMaintenanceMode": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "EditMaintenanceMode",
      "description": "Edit maintenance mode",
      "type": "object",
      "required": [
        "maintenance",
        "managementConsolePassword",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "maintenance": {
          "title": "Maintenance",
          "description": "Maintenance",
          "$ref": "#/definitions/objectExpression"
        },
        "managementConsolePassword": {
          "title": "Management console password",
          "description": "Management console password",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Enterprise.ManagementConsole.EditMaintenanceMode"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Enterprise.ManagementConsole.GetMaintenanceMode": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetMaintenanceMode",
      "description": "Get maintenance mode",
      "type": "object",
      "required": [
        "managementConsolePassword",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "managementConsolePassword": {
          "title": "Management console password",
          "description": "Management console password",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Enterprise.ManagementConsole.GetMaintenanceMode"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Enterprise.Organization.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "newOrganization",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "newOrganization": {
          "title": "New organization",
          "description": "New organization",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Enterprise.Organization.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Enterprise.PreReceiveEnvironment.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "newPreReceiveEnvironment",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "newPreReceiveEnvironment": {
          "title": "New pre receive environment",
          "description": "New pre receive environment",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Enterprise.PreReceiveEnvironment.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Enterprise.PreReceiveEnvironment.Delete": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Delete",
      "description": "Delete",
      "type": "object",
      "required": [
        "environmentId",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "environmentId": {
          "title": "Environment id",
          "description": "Environment id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Enterprise.PreReceiveEnvironment.Delete"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Enterprise.PreReceiveEnvironment.DownloadStatus": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "DownloadStatus",
      "description": "Download status",
      "type": "object",
      "required": [
        "environmentId",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "environmentId": {
          "title": "Environment id",
          "description": "Environment id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Enterprise.PreReceiveEnvironment.DownloadStatus"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Enterprise.PreReceiveEnvironment.Edit": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Edit",
      "description": "Edit",
      "type": "object",
      "required": [
        "environmentId",
        "updatePreReceiveEnvironment",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "environmentId": {
          "title": "Environment id",
          "description": "Environment id"
        },
        "updatePreReceiveEnvironment": {
          "title": "Update pre receive environment",
          "description": "Update pre receive environment",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Enterprise.PreReceiveEnvironment.Edit"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Enterprise.PreReceiveEnvironment.Get": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get",
      "description": "Get",
      "type": "object",
      "required": [
        "environmentId",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "environmentId": {
          "title": "Environment id",
          "description": "Environment id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Enterprise.PreReceiveEnvironment.Get"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Enterprise.PreReceiveEnvironment.GetAll": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAll",
      "description": "Get all",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Enterprise.PreReceiveEnvironment.GetAll"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Enterprise.PreReceiveEnvironment.TriggerDownload": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "TriggerDownload",
      "description": "Trigger download",
      "type": "object",
      "required": [
        "environmentId",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "environmentId": {
          "title": "Environment id",
          "description": "Environment id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Enterprise.PreReceiveEnvironment.TriggerDownload"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Enterprise.SearchIndexing.Queue": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Queue",
      "description": "Queue",
      "type": "object",
      "required": [
        "owner",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repository": {
          "title": "Repository",
          "description": "Repository",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Enterprise.SearchIndexing.Queue"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Enterprise.SearchIndexing.QueueAll": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "QueueAll",
      "description": "Queue all",
      "type": "object",
      "required": [
        "owner",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Enterprise.SearchIndexing.QueueAll"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Enterprise.SearchIndexing.QueueAllCode": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "QueueAllCode",
      "description": "Queue all code",
      "type": "object",
      "required": [
        "owner",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repository": {
          "title": "Repository",
          "description": "Repository",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Enterprise.SearchIndexing.QueueAllCode"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Enterprise.SearchIndexing.QueueAllIssues": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "QueueAllIssues",
      "description": "Queue all issues",
      "type": "object",
      "required": [
        "owner",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repository": {
          "title": "Repository",
          "description": "Repository",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Enterprise.SearchIndexing.QueueAllIssues"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Gist.Comment.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "gistId",
        "comment",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "gistId": {
          "title": "Gist id",
          "description": "Gist id",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "comment": {
          "title": "Comment",
          "description": "Comment",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Gist.Comment.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Gist.Comment.Delete": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Delete",
      "description": "Delete",
      "type": "object",
      "required": [
        "gistId",
        "commentId",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "gistId": {
          "title": "Gist id",
          "description": "Gist id",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "commentId": {
          "title": "Comment id",
          "description": "Comment id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Gist.Comment.Delete"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Gist.Comment.Get": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get",
      "description": "Get",
      "type": "object",
      "required": [
        "gistId",
        "commentId",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "gistId": {
          "title": "Gist id",
          "description": "Gist id",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "commentId": {
          "title": "Comment id",
          "description": "Comment id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Gist.Comment.Get"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Gist.Comment.GetAllForGist": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForGist",
      "description": "Get all for gist",
      "type": "object",
      "required": [
        "gistId",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "gistId": {
          "title": "Gist id",
          "description": "Gist id",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Gist.Comment.GetAllForGist"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Gist.Comment.Update": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Update",
      "description": "Update",
      "type": "object",
      "required": [
        "gistId",
        "commentId",
        "comment",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "gistId": {
          "title": "Gist id",
          "description": "Gist id",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "commentId": {
          "title": "Comment id",
          "description": "Comment id"
        },
        "comment": {
          "title": "Comment",
          "description": "Comment",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Gist.Comment.Update"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Gist.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "newGist",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "newGist": {
          "title": "New gist",
          "description": "New gist",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Gist.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Gist.Delete": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Delete",
      "description": "Delete",
      "type": "object",
      "required": [
        "id",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Gist.Delete"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Gist.Edit": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Edit",
      "description": "Edit",
      "type": "object",
      "required": [
        "id",
        "gistUpdate",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "gistUpdate": {
          "title": "Gist update",
          "description": "Gist update",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Gist.Edit"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Gist.Fork": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Fork",
      "description": "Fork",
      "type": "object",
      "required": [
        "id",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Gist.Fork"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Gist.Get": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get",
      "description": "Get",
      "type": "object",
      "required": [
        "id",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Gist.Get"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Gist.GetAll": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAll",
      "description": "Get all",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "since": {
          "title": "Since",
          "description": "Since",
          "$ref": "#/definitions/objectExpression"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Gist.GetAll"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Gist.GetAllCommits": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllCommits",
      "description": "Get all commits",
      "type": "object",
      "required": [
        "id",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Gist.GetAllCommits"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Gist.GetAllForUser": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForUser",
      "description": "Get all for user",
      "type": "object",
      "required": [
        "user",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "user": {
          "title": "User",
          "description": "User",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "since": {
          "title": "Since",
          "description": "Since",
          "$ref": "#/definitions/objectExpression"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Gist.GetAllForUser"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Gist.GetAllForks": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForks",
      "description": "Get all forks",
      "type": "object",
      "required": [
        "id",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Gist.GetAllForks"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Gist.GetAllPublic": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllPublic",
      "description": "Get all public",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "since": {
          "title": "Since",
          "description": "Since",
          "$ref": "#/definitions/objectExpression"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Gist.GetAllPublic"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Gist.GetAllStarred": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllStarred",
      "description": "Get all starred",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "since": {
          "title": "Since",
          "description": "Since",
          "$ref": "#/definitions/objectExpression"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Gist.GetAllStarred"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Gist.IsStarred": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "IsStarred",
      "description": "Is starred",
      "type": "object",
      "required": [
        "id",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Gist.IsStarred"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Gist.Star": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Star",
      "description": "Star",
      "type": "object",
      "required": [
        "id",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Gist.Star"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Gist.Unstar": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Unstar",
      "description": "Unstar",
      "type": "object",
      "required": [
        "id",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Gist.Unstar"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Git.Blob.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "newBlob",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "newBlob": {
          "title": "New blob",
          "description": "New blob",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Git.Blob.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Git.Blob.Get": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get",
      "description": "Get",
      "type": "object",
      "required": [
        "reference",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "reference": {
          "title": "Reference",
          "description": "Reference",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Git.Blob.Get"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Git.Commit.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "commit",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "commit": {
          "title": "Commit",
          "description": "Commit",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Git.Commit.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Git.Commit.Get": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get",
      "description": "Get",
      "type": "object",
      "required": [
        "reference",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "reference": {
          "title": "Reference",
          "description": "Reference",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Git.Commit.Get"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Git.Reference.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "reference",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "reference": {
          "title": "Reference",
          "description": "Reference",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Git.Reference.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Git.Reference.Delete": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Delete",
      "description": "Delete",
      "type": "object",
      "required": [
        "reference",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "reference": {
          "title": "Reference",
          "description": "Reference",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Git.Reference.Delete"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Git.Reference.Get": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get",
      "description": "Get",
      "type": "object",
      "required": [
        "reference",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "reference": {
          "title": "Reference",
          "description": "Reference",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Git.Reference.Get"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Git.Reference.GetAll": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAll",
      "description": "Get all",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Git.Reference.GetAll"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Git.Reference.GetAllForSubNamespace": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForSubNamespace",
      "description": "Get all for sub namespace",
      "type": "object",
      "required": [
        "subNamespace",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "subNamespace": {
          "title": "Sub namespace",
          "description": "Sub namespace",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Git.Reference.GetAllForSubNamespace"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Git.Reference.Update": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Update",
      "description": "Update",
      "type": "object",
      "required": [
        "reference",
        "referenceUpdate",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "reference": {
          "title": "Reference",
          "description": "Reference",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "referenceUpdate": {
          "title": "Reference update",
          "description": "Reference update",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Git.Reference.Update"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Git.Tag.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "tag",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "tag": {
          "title": "Tag",
          "description": "Tag",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Git.Tag.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Git.Tag.Get": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get",
      "description": "Get",
      "type": "object",
      "required": [
        "reference",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "reference": {
          "title": "Reference",
          "description": "Reference",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Git.Tag.Get"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Git.Tree.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "newTree",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "newTree": {
          "title": "New tree",
          "description": "New tree",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Git.Tree.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Git.Tree.Get": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get",
      "description": "Get",
      "type": "object",
      "required": [
        "reference",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "reference": {
          "title": "Reference",
          "description": "Reference",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Git.Tree.Get"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Git.Tree.GetRecursive": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetRecursive",
      "description": "Get recursive",
      "type": "object",
      "required": [
        "reference",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "reference": {
          "title": "Reference",
          "description": "Reference",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Git.Tree.GetRecursive"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.GitHubApps.CreateInstallationToken": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "CreateInstallationToken",
      "description": "Create installation token",
      "type": "object",
      "required": [
        "installationId",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "installationId": {
          "title": "Installation id",
          "description": "Installation id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.GitHubApps.CreateInstallationToken"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.GitHubApps.Get": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get",
      "description": "Get",
      "type": "object",
      "required": [
        "slug",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "slug": {
          "title": "Slug",
          "description": "Slug",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.GitHubApps.Get"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.GitHubApps.GetAllInstallationsForCurrent": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllInstallationsForCurrent",
      "description": "Get all installations for current",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.GitHubApps.GetAllInstallationsForCurrent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.GitHubApps.GetAllInstallationsForCurrentUser": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllInstallationsForCurrentUser",
      "description": "Get all installations for current user",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.GitHubApps.GetAllInstallationsForCurrentUser"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.GitHubApps.GetCurrent": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetCurrent",
      "description": "Get current",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.GitHubApps.GetCurrent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.GitHubApps.GetInstallation": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetInstallation",
      "description": "Get installation",
      "type": "object",
      "required": [
        "installationId",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "installationId": {
          "title": "Installation id",
          "description": "Installation id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.GitHubApps.GetInstallation"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.GitHubApps.GetInstallationForCurrent": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetInstallationForCurrent",
      "description": "Get installation for current",
      "type": "object",
      "required": [
        "installationId",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "installationId": {
          "title": "Installation id",
          "description": "Installation id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.GitHubApps.GetInstallationForCurrent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.GitHubApps.GetOrganizationInstallationForCurrent": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetOrganizationInstallationForCurrent",
      "description": "Get organization installation for current",
      "type": "object",
      "required": [
        "organization",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "organization": {
          "title": "Organization",
          "description": "Organization",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.GitHubApps.GetOrganizationInstallationForCurrent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.GitHubApps.GetRepositoryInstallationForCurrent": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetRepositoryInstallationForCurrent",
      "description": "Get repository installation for current",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repo": {
          "title": "Repo",
          "description": "Repo",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.GitHubApps.GetRepositoryInstallationForCurrent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.GitHubApps.GetUserInstallationForCurrent": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetUserInstallationForCurrent",
      "description": "Get user installation for current",
      "type": "object",
      "required": [
        "user",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "user": {
          "title": "User",
          "description": "User",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.GitHubApps.GetUserInstallationForCurrent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.GitHubApps.Installation.GetAllRepositoriesForCurrent": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllRepositoriesForCurrent",
      "description": "Get all repositories for current",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.GitHubApps.Installation.GetAllRepositoriesForCurrent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.GitHubApps.Installation.GetAllRepositoriesForCurrentUser": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllRepositoriesForCurrentUser",
      "description": "Get all repositories for current user",
      "type": "object",
      "required": [
        "installationId",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "installationId": {
          "title": "Installation id",
          "description": "Installation id"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.GitHubApps.Installation.GetAllRepositoriesForCurrentUser"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Issue.Assignee.AddAssignees": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "AddAssignees",
      "description": "Add assignees",
      "type": "object",
      "required": [
        "owner",
        "name",
        "number",
        "assignees",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "assignees": {
          "title": "Assignees",
          "description": "Assignees",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Issue.Assignee.AddAssignees"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Issue.Assignee.CheckAssignee": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "CheckAssignee",
      "description": "Check assignee",
      "type": "object",
      "required": [
        "assignee",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "assignee": {
          "title": "Assignee",
          "description": "Assignee",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Issue.Assignee.CheckAssignee"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Issue.Assignee.GetAllForRepository": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForRepository",
      "description": "Get all for repository",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Issue.Assignee.GetAllForRepository"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Issue.Assignee.RemoveAssignees": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "RemoveAssignees",
      "description": "Remove assignees",
      "type": "object",
      "required": [
        "owner",
        "name",
        "number",
        "assignees",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "assignees": {
          "title": "Assignees",
          "description": "Assignees",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Issue.Assignee.RemoveAssignees"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Issue.Comment.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "number",
        "newComment",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "newComment": {
          "title": "New comment",
          "description": "New comment",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Issue.Comment.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Issue.Comment.Delete": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Delete",
      "description": "Delete",
      "type": "object",
      "required": [
        "id",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Issue.Comment.Delete"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Issue.Comment.Get": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get",
      "description": "Get",
      "type": "object",
      "required": [
        "id",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Issue.Comment.Get"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Issue.Comment.GetAllForIssue": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForIssue",
      "description": "Get all for issue",
      "type": "object",
      "required": [
        "number",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "request": {
          "title": "Request",
          "description": "Request",
          "$ref": "#/definitions/objectExpression"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Issue.Comment.GetAllForIssue"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Issue.Comment.GetAllForRepository": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForRepository",
      "description": "Get all for repository",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "request": {
          "title": "Request",
          "description": "Request",
          "$ref": "#/definitions/objectExpression"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Issue.Comment.GetAllForRepository"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Issue.Comment.Update": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Update",
      "description": "Update",
      "type": "object",
      "required": [
        "id",
        "commentUpdate",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "commentUpdate": {
          "title": "Comment update",
          "description": "Comment update",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Issue.Comment.Update"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Issue.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "newIssue",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "newIssue": {
          "title": "New issue",
          "description": "New issue",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Issue.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Issue.Events.Get": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get",
      "description": "Get",
      "type": "object",
      "required": [
        "eventId",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "eventId": {
          "title": "Event id",
          "description": "Event id"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Issue.Events.Get"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Issue.Events.GetAllForIssue": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForIssue",
      "description": "Get all for issue",
      "type": "object",
      "required": [
        "number",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Issue.Events.GetAllForIssue"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Issue.Events.GetAllForRepository": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForRepository",
      "description": "Get all for repository",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Issue.Events.GetAllForRepository"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Issue.Get": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get",
      "description": "Get",
      "type": "object",
      "required": [
        "number",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Issue.Get"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Issue.GetAllForCurrent": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForCurrent",
      "description": "Get all for current",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "request": {
          "title": "Request",
          "description": "Request",
          "$ref": "#/definitions/objectExpression"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Issue.GetAllForCurrent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Issue.GetAllForOrganization": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForOrganization",
      "description": "Get all for organization",
      "type": "object",
      "required": [
        "organization",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "organization": {
          "title": "Organization",
          "description": "Organization",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "request": {
          "title": "Request",
          "description": "Request",
          "$ref": "#/definitions/objectExpression"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Issue.GetAllForOrganization"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Issue.GetAllForOwnedAndMemberRepositories": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForOwnedAndMemberRepositories",
      "description": "Get all for owned and member repositories",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "request": {
          "title": "Request",
          "description": "Request",
          "$ref": "#/definitions/objectExpression"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Issue.GetAllForOwnedAndMemberRepositories"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Issue.GetAllForRepository": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForRepository",
      "description": "Get all for repository",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "request": {
          "title": "Request",
          "description": "Request",
          "$ref": "#/definitions/objectExpression"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Issue.GetAllForRepository"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Issue.Labels.AddToIssue": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "AddToIssue",
      "description": "Add to issue",
      "type": "object",
      "required": [
        "number",
        "labels",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "labels": {
          "title": "Labels",
          "description": "Labels",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Issue.Labels.AddToIssue"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Issue.Labels.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "newLabel",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "newLabel": {
          "title": "New label",
          "description": "New label",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Issue.Labels.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Issue.Labels.Delete": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Delete",
      "description": "Delete",
      "type": "object",
      "required": [
        "labelName",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "labelName": {
          "title": "Label name",
          "description": "Label name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Issue.Labels.Delete"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Issue.Labels.Get": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get",
      "description": "Get",
      "type": "object",
      "required": [
        "labelName",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "labelName": {
          "title": "Label name",
          "description": "Label name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Issue.Labels.Get"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Issue.Labels.GetAllForIssue": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForIssue",
      "description": "Get all for issue",
      "type": "object",
      "required": [
        "number",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Issue.Labels.GetAllForIssue"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Issue.Labels.GetAllForMilestone": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForMilestone",
      "description": "Get all for milestone",
      "type": "object",
      "required": [
        "number",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Issue.Labels.GetAllForMilestone"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Issue.Labels.GetAllForRepository": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForRepository",
      "description": "Get all for repository",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Issue.Labels.GetAllForRepository"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Issue.Labels.RemoveAllFromIssue": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "RemoveAllFromIssue",
      "description": "Remove all from issue",
      "type": "object",
      "required": [
        "number",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Issue.Labels.RemoveAllFromIssue"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Issue.Labels.RemoveFromIssue": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "RemoveFromIssue",
      "description": "Remove from issue",
      "type": "object",
      "required": [
        "number",
        "labelName",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "labelName": {
          "title": "Label name",
          "description": "Label name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Issue.Labels.RemoveFromIssue"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Issue.Labels.ReplaceAllForIssue": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "ReplaceAllForIssue",
      "description": "Replace all for issue",
      "type": "object",
      "required": [
        "number",
        "labels",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "labels": {
          "title": "Labels",
          "description": "Labels",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Issue.Labels.ReplaceAllForIssue"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Issue.Labels.Update": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Update",
      "description": "Update",
      "type": "object",
      "required": [
        "labelName",
        "labelUpdate",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "labelName": {
          "title": "Label name",
          "description": "Label name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "labelUpdate": {
          "title": "Label update",
          "description": "Label update",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Issue.Labels.Update"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Issue.Lock": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Lock",
      "description": "Lock",
      "type": "object",
      "required": [
        "number",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Issue.Lock"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Issue.Milestone.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "newMilestone",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "newMilestone": {
          "title": "New milestone",
          "description": "New milestone",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Issue.Milestone.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Issue.Milestone.Delete": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Delete",
      "description": "Delete",
      "type": "object",
      "required": [
        "number",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Issue.Milestone.Delete"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Issue.Milestone.Get": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get",
      "description": "Get",
      "type": "object",
      "required": [
        "number",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Issue.Milestone.Get"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Issue.Milestone.GetAllForRepository": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForRepository",
      "description": "Get all for repository",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "request": {
          "title": "Request",
          "description": "Request",
          "$ref": "#/definitions/objectExpression"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Issue.Milestone.GetAllForRepository"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Issue.Milestone.Update": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Update",
      "description": "Update",
      "type": "object",
      "required": [
        "number",
        "milestoneUpdate",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "milestoneUpdate": {
          "title": "Milestone update",
          "description": "Milestone update",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Issue.Milestone.Update"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Issue.Timeline.GetAllForIssue": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForIssue",
      "description": "Get all for issue",
      "type": "object",
      "required": [
        "number",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repo": {
          "title": "Repo",
          "description": "Repo",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Issue.Timeline.GetAllForIssue"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Issue.Unlock": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Unlock",
      "description": "Unlock",
      "type": "object",
      "required": [
        "number",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Issue.Unlock"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Issue.Update": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Update",
      "description": "Update",
      "type": "object",
      "required": [
        "number",
        "issueUpdate",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "issueUpdate": {
          "title": "Issue update",
          "description": "Issue update",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Issue.Update"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Migration.Migrations.DeleteArchive": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "DeleteArchive",
      "description": "Delete archive",
      "type": "object",
      "required": [
        "org",
        "id",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "org": {
          "title": "Org",
          "description": "Org",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Migration.Migrations.DeleteArchive"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Migration.Migrations.Get": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get",
      "description": "Get",
      "type": "object",
      "required": [
        "org",
        "id",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "org": {
          "title": "Org",
          "description": "Org",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Migration.Migrations.Get"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Migration.Migrations.GetAll": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAll",
      "description": "Get all",
      "type": "object",
      "required": [
        "org",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "org": {
          "title": "Org",
          "description": "Org",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Migration.Migrations.GetAll"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Migration.Migrations.GetArchive": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetArchive",
      "description": "Get archive",
      "type": "object",
      "required": [
        "org",
        "id",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "org": {
          "title": "Org",
          "description": "Org",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Migration.Migrations.GetArchive"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Migration.Migrations.Start": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Start",
      "description": "Start",
      "type": "object",
      "required": [
        "org",
        "migration",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "org": {
          "title": "Org",
          "description": "Org",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "migration": {
          "title": "Migration",
          "description": "Migration",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Migration.Migrations.Start"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Migration.Migrations.UnlockRepository": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "UnlockRepository",
      "description": "Unlock repository",
      "type": "object",
      "required": [
        "org",
        "id",
        "repo",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "org": {
          "title": "Org",
          "description": "Org",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "repo": {
          "title": "Repo",
          "description": "Repo",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Migration.Migrations.UnlockRepository"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Miscellaneous.GetAllEmojis": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllEmojis",
      "description": "Get all emojis",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Miscellaneous.GetAllEmojis"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Miscellaneous.GetAllGitIgnoreTemplates": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllGitIgnoreTemplates",
      "description": "Get all git ignore templates",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Miscellaneous.GetAllGitIgnoreTemplates"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Miscellaneous.GetAllLicenses": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllLicenses",
      "description": "Get all licenses",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Miscellaneous.GetAllLicenses"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Miscellaneous.GetGitIgnoreTemplate": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetGitIgnoreTemplate",
      "description": "Get git ignore template",
      "type": "object",
      "required": [
        "templateName",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "templateName": {
          "title": "Template name",
          "description": "Template name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Miscellaneous.GetGitIgnoreTemplate"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Miscellaneous.GetLicense": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetLicense",
      "description": "Get license",
      "type": "object",
      "required": [
        "key",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "key": {
          "title": "Key",
          "description": "Key",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Miscellaneous.GetLicense"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Miscellaneous.GetMetadata": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetMetadata",
      "description": "Get metadata",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Miscellaneous.GetMetadata"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Miscellaneous.GetRateLimits": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetRateLimits",
      "description": "Get rate limits",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Miscellaneous.GetRateLimits"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Miscellaneous.RenderArbitraryMarkdown": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "RenderArbitraryMarkdown",
      "description": "Render arbitrary markdown",
      "type": "object",
      "required": [
        "markdown",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "markdown": {
          "title": "Markdown",
          "description": "Markdown",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Miscellaneous.RenderArbitraryMarkdown"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Miscellaneous.RenderRawMarkdown": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "RenderRawMarkdown",
      "description": "Render raw markdown",
      "type": "object",
      "required": [
        "markdown",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "markdown": {
          "title": "Markdown",
          "description": "Markdown",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Miscellaneous.RenderRawMarkdown"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Oauth.CreateAccessToken": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "CreateAccessToken",
      "description": "Create access token",
      "type": "object",
      "required": [
        "request",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "request": {
          "title": "Request",
          "description": "Request",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Oauth.CreateAccessToken"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Oauth.GetGitHubLoginUrl": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetGitHubLoginUrl",
      "description": "Get git hub login url",
      "type": "object",
      "required": [
        "request",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "request": {
          "title": "Request",
          "description": "Request",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Oauth.GetGitHubLoginUrl"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnCheckRunEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubCheckRunEvent",
      "description": "Trigger on github 'check_run' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "action": {
          "type": "string",
          "title": "Action",
          "description": "The github webhook action to trigger on",
          "enum": [
            "completed",
            "created",
            "requested_action",
            "rerequested"
          ]
        },
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnCheckRunEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnCheckSuiteEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubCheckSuiteEvent",
      "description": "Trigger on github 'check_suite' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "action": {
          "type": "string",
          "title": "Action",
          "description": "The github webhook action to trigger on",
          "enum": [
            "completed",
            "requested",
            "rerequested"
          ]
        },
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnCheckSuiteEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnCodeScanningAlertEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubCodeScanningAlertEvent",
      "description": "Trigger on github 'code_scanning_alert' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "action": {
          "type": "string",
          "title": "Action",
          "description": "The github webhook action to trigger on",
          "enum": [
            "appeared_in_branch",
            "closed_by_user",
            "created",
            "fixed",
            "reopened",
            "reopened_by_user"
          ]
        },
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnCodeScanningAlertEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnCommitCommentEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubCommitCommentEvent",
      "description": "Trigger on github 'commit_comment' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnCommitCommentEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnContentReferenceEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubContentReferenceEvent",
      "description": "Trigger on github 'content_reference' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnContentReferenceEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnCreateEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubCreateEvent",
      "description": "Trigger on github 'create' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnCreateEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnDeleteEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubDeleteEvent",
      "description": "Trigger on github 'delete' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnDeleteEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnDeployKeyEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubDeployKeyEvent",
      "description": "Trigger on github 'deploy_key' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "action": {
          "type": "string",
          "title": "Action",
          "description": "The github webhook action to trigger on",
          "enum": [
            "created",
            "deleted"
          ]
        },
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnDeployKeyEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnDeploymentEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubDeploymentEvent",
      "description": "Trigger on github 'deployment' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnDeploymentEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnDeploymentStatusEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubDeploymentStatusEvent",
      "description": "Trigger on github 'deployment_status' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnDeploymentStatusEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnForkEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubForkEvent",
      "description": "Trigger on github 'fork' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnForkEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnGithubAppAuthorizationEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubGithubAppAuthorizationEvent",
      "description": "Trigger on github 'github_app_authorization' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnGithubAppAuthorizationEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnGollumEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubGollumEvent",
      "description": "Trigger on github 'gollum' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnGollumEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnInstallationEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubInstallationEvent",
      "description": "Trigger on github 'installation' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "action": {
          "type": "string",
          "title": "Action",
          "description": "The github webhook action to trigger on",
          "enum": [
            "created",
            "deleted",
            "new_permissions_accepted",
            "suspend",
            "unsuspend"
          ]
        },
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnInstallationEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnInstallationRepositoriesEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubInstallationRepositoriesEvent",
      "description": "Trigger on github 'installation_repositories' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "action": {
          "type": "string",
          "title": "Action",
          "description": "The github webhook action to trigger on",
          "enum": [
            "added",
            "removed"
          ]
        },
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnInstallationRepositoriesEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnIssueCommentEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubIssueCommentEvent",
      "description": "Trigger on github 'issue_comment' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "action": {
          "type": "string",
          "title": "Action",
          "description": "The github webhook action to trigger on",
          "enum": [
            "created",
            "deleted",
            "edited"
          ]
        },
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnIssueCommentEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnIssuesEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubIssuesEvent",
      "description": "Trigger on github 'issues' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "action": {
          "type": "string",
          "title": "Action",
          "description": "The github webhook action to trigger on",
          "enum": [
            "assigned",
            "closed",
            "deleted",
            "demilestoned",
            "edited",
            "labeled",
            "locked",
            "milestoned",
            "opened",
            "pinned",
            "reopened",
            "transferred",
            "unassigned",
            "unlabeled",
            "unlocked",
            "unpinned"
          ]
        },
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnIssuesEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnLabelEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubLabelEvent",
      "description": "Trigger on github 'label' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "action": {
          "type": "string",
          "title": "Action",
          "description": "The github webhook action to trigger on",
          "enum": [
            "created",
            "deleted",
            "edited"
          ]
        },
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnLabelEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnMarketplacePurchaseEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubMarketplacePurchaseEvent",
      "description": "Trigger on github 'marketplace_purchase' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "action": {
          "type": "string",
          "title": "Action",
          "description": "The github webhook action to trigger on",
          "enum": [
            "cancelled",
            "changed",
            "pending_change",
            "pending_change_cancelled",
            "purchased"
          ]
        },
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnMarketplacePurchaseEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnMemberEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubMemberEvent",
      "description": "Trigger on github 'member' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "action": {
          "type": "string",
          "title": "Action",
          "description": "The github webhook action to trigger on",
          "enum": [
            "added",
            "edited",
            "removed"
          ]
        },
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnMemberEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnMembershipEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubMembershipEvent",
      "description": "Trigger on github 'membership' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "action": {
          "type": "string",
          "title": "Action",
          "description": "The github webhook action to trigger on",
          "enum": [
            "added",
            "removed"
          ]
        },
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnMembershipEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnMetaEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubMetaEvent",
      "description": "Trigger on github 'meta' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnMetaEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnMilestoneEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubMilestoneEvent",
      "description": "Trigger on github 'milestone' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "action": {
          "type": "string",
          "title": "Action",
          "description": "The github webhook action to trigger on",
          "enum": [
            "closed",
            "created",
            "deleted",
            "edited",
            "opened"
          ]
        },
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnMilestoneEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnOrgBlockEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubOrgBlockEvent",
      "description": "Trigger on github 'org_block' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "action": {
          "type": "string",
          "title": "Action",
          "description": "The github webhook action to trigger on",
          "enum": [
            "blocked",
            "unblocked"
          ]
        },
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnOrgBlockEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnOrganizationEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubOrganizationEvent",
      "description": "Trigger on github 'organization' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "action": {
          "type": "string",
          "title": "Action",
          "description": "The github webhook action to trigger on",
          "enum": [
            "deleted",
            "member_added",
            "member_invited",
            "member_removed",
            "renamed"
          ]
        },
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnOrganizationEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnPackageEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubPackageEvent",
      "description": "Trigger on github 'package' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "action": {
          "type": "string",
          "title": "Action",
          "description": "The github webhook action to trigger on",
          "enum": [
            "published",
            "updated"
          ]
        },
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnPackageEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnPageBuildEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubPageBuildEvent",
      "description": "Trigger on github 'page_build' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnPageBuildEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnPingEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubPingEvent",
      "description": "Trigger on github 'ping' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnPingEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnProjectCardEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubProjectCardEvent",
      "description": "Trigger on github 'project_card' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "action": {
          "type": "string",
          "title": "Action",
          "description": "The github webhook action to trigger on",
          "enum": [
            "converted",
            "created",
            "deleted",
            "edited",
            "moved"
          ]
        },
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnProjectCardEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnProjectColumnEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubProjectColumnEvent",
      "description": "Trigger on github 'project_column' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "action": {
          "type": "string",
          "title": "Action",
          "description": "The github webhook action to trigger on",
          "enum": [
            "created",
            "deleted",
            "edited",
            "moved"
          ]
        },
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnProjectColumnEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnProjectEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubProjectEvent",
      "description": "Trigger on github 'project' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "action": {
          "type": "string",
          "title": "Action",
          "description": "The github webhook action to trigger on",
          "enum": [
            "closed",
            "created",
            "deleted",
            "edited",
            "reopened"
          ]
        },
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnProjectEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnPublicEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubPublicEvent",
      "description": "Trigger on github 'public' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnPublicEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnPullRequestEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubPullRequestEvent",
      "description": "Trigger on github 'pull_request' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "action": {
          "type": "string",
          "title": "Action",
          "description": "The github webhook action to trigger on",
          "enum": [
            "assigned",
            "closed",
            "edited",
            "labeled",
            "locked",
            "merged",
            "opened",
            "ready_for_review",
            "reopened",
            "review_request_removed",
            "review_requested",
            "synchronize",
            "unassigned",
            "unlabeled",
            "unlocked"
          ]
        },
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnPullRequestEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnPullRequestReviewCommentEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubPullRequestReviewCommentEvent",
      "description": "Trigger on github 'pull_request_review_comment' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "action": {
          "type": "string",
          "title": "Action",
          "description": "The github webhook action to trigger on",
          "enum": [
            "created",
            "deleted",
            "edited"
          ]
        },
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnPullRequestReviewCommentEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnPullRequestReviewEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubPullRequestReviewEvent",
      "description": "Trigger on github 'pull_request_review' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "action": {
          "type": "string",
          "title": "Action",
          "description": "The github webhook action to trigger on",
          "enum": [
            "dismissed",
            "edited",
            "submitted"
          ]
        },
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnPullRequestReviewEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnPushEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubPushEvent",
      "description": "Trigger on github 'push' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnPushEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnReleaseEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubReleaseEvent",
      "description": "Trigger on github 'release' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "action": {
          "type": "string",
          "title": "Action",
          "description": "The github webhook action to trigger on",
          "enum": [
            "created",
            "deleted",
            "edited",
            "prereleased",
            "published",
            "released",
            "unpublished"
          ]
        },
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnReleaseEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnRepositoryDispatchEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubRepositoryDispatchEvent",
      "description": "Trigger on github 'repository_dispatch' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnRepositoryDispatchEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnRepositoryEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubRepositoryEvent",
      "description": "Trigger on github 'repository' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "action": {
          "type": "string",
          "title": "Action",
          "description": "The github webhook action to trigger on",
          "enum": [
            "archived",
            "created",
            "deleted",
            "edited",
            "privatized",
            "publicized",
            "renamed",
            "transferred",
            "unarchived"
          ]
        },
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnRepositoryEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnRepositoryImportEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubRepositoryImportEvent",
      "description": "Trigger on github 'repository_import' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnRepositoryImportEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnRepositoryVulnerabilityAlertEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubRepositoryVulnerabilityAlertEvent",
      "description": "Trigger on github 'repository_vulnerability_alert' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "action": {
          "type": "string",
          "title": "Action",
          "description": "The github webhook action to trigger on",
          "enum": [
            "create",
            "dismiss",
            "resolve"
          ]
        },
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnRepositoryVulnerabilityAlertEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnSecurityAdvisoryEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubSecurityAdvisoryEvent",
      "description": "Trigger on github 'security_advisory' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "action": {
          "type": "string",
          "title": "Action",
          "description": "The github webhook action to trigger on",
          "enum": [
            "performed",
            "published",
            "updated"
          ]
        },
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnSecurityAdvisoryEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnSponsorshipEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubSponsorshipEvent",
      "description": "Trigger on github 'sponsorship' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "action": {
          "type": "string",
          "title": "Action",
          "description": "The github webhook action to trigger on",
          "enum": [
            "cancelled",
            "created",
            "edited",
            "pending_cancellation",
            "pending_tier_change",
            "tier_changed"
          ]
        },
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnSponsorshipEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnStarEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubStarEvent",
      "description": "Trigger on github 'star' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "action": {
          "type": "string",
          "title": "Action",
          "description": "The github webhook action to trigger on",
          "enum": [
            "created",
            "deleted"
          ]
        },
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnStarEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnStatusEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubStatusEvent",
      "description": "Trigger on github 'status' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnStatusEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnTeamAddEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubTeamAddEvent",
      "description": "Trigger on github 'team_add' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnTeamAddEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnTeamEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubTeamEvent",
      "description": "Trigger on github 'team' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "action": {
          "type": "string",
          "title": "Action",
          "description": "The github webhook action to trigger on",
          "enum": [
            "added_to_repository",
            "created",
            "deleted",
            "edited",
            "removed_from_repository"
          ]
        },
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnTeamEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnWatchEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubWatchEvent",
      "description": "Trigger on github 'watch' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnWatchEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnWorkflowDispatchEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubWorkflowDispatchEvent",
      "description": "Trigger on github 'workflow_dispatch' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnWorkflowDispatchEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.OnWorkflowRunEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "type": "object",
      "title": "OnGitHubWorkflowRunEvent",
      "description": "Trigger on github 'workflow_run' webhook event.",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "action": {
          "type": "string",
          "title": "Action",
          "description": "The github webhook action to trigger on",
          "enum": [
            "action",
            "completed",
            "requested"
          ]
        },
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.OnWorkflowRunEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Organization.Get": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get",
      "description": "Get",
      "type": "object",
      "required": [
        "org",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "org": {
          "title": "Org",
          "description": "Org",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Organization.Get"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Organization.GetAll": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAll",
      "description": "Get all",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "request": {
          "title": "Request",
          "description": "Request",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Organization.GetAll"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Organization.GetAllForCurrent": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForCurrent",
      "description": "Get all for current",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Organization.GetAllForCurrent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Organization.GetAllForUser": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForUser",
      "description": "Get all for user",
      "type": "object",
      "required": [
        "user",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "user": {
          "title": "User",
          "description": "User",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Organization.GetAllForUser"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Organization.Hook.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "org",
        "hook",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "org": {
          "title": "Org",
          "description": "Org",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "hook": {
          "title": "Hook",
          "description": "Hook",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Organization.Hook.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Organization.Hook.Delete": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Delete",
      "description": "Delete",
      "type": "object",
      "required": [
        "org",
        "hookId",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "org": {
          "title": "Org",
          "description": "Org",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "hookId": {
          "title": "Hook id",
          "description": "Hook id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Organization.Hook.Delete"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Organization.Hook.Edit": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Edit",
      "description": "Edit",
      "type": "object",
      "required": [
        "org",
        "hookId",
        "hook",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "org": {
          "title": "Org",
          "description": "Org",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "hookId": {
          "title": "Hook id",
          "description": "Hook id"
        },
        "hook": {
          "title": "Hook",
          "description": "Hook",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Organization.Hook.Edit"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Organization.Hook.Get": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get",
      "description": "Get",
      "type": "object",
      "required": [
        "org",
        "hookId",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "org": {
          "title": "Org",
          "description": "Org",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "hookId": {
          "title": "Hook id",
          "description": "Hook id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Organization.Hook.Get"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Organization.Hook.GetAll": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAll",
      "description": "Get all",
      "type": "object",
      "required": [
        "org",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "org": {
          "title": "Org",
          "description": "Org",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Organization.Hook.GetAll"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Organization.Hook.Ping": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Ping",
      "description": "Ping",
      "type": "object",
      "required": [
        "org",
        "hookId",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "org": {
          "title": "Org",
          "description": "Org",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "hookId": {
          "title": "Hook id",
          "description": "Hook id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Organization.Hook.Ping"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Organization.Member.AddOrUpdateOrganizationMembership": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "AddOrUpdateOrganizationMembership",
      "description": "Add or update organization membership",
      "type": "object",
      "required": [
        "org",
        "user",
        "addOrUpdateRequest",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "org": {
          "title": "Org",
          "description": "Org",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "user": {
          "title": "User",
          "description": "User",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "addOrUpdateRequest": {
          "title": "Add or update request",
          "description": "Add or update request",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Organization.Member.AddOrUpdateOrganizationMembership"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Organization.Member.CheckMember": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "CheckMember",
      "description": "Check member",
      "type": "object",
      "required": [
        "org",
        "user",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "org": {
          "title": "Org",
          "description": "Org",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "user": {
          "title": "User",
          "description": "User",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Organization.Member.CheckMember"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Organization.Member.CheckMemberPublic": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "CheckMemberPublic",
      "description": "Check member public",
      "type": "object",
      "required": [
        "org",
        "user",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "org": {
          "title": "Org",
          "description": "Org",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "user": {
          "title": "User",
          "description": "User",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Organization.Member.CheckMemberPublic"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Organization.Member.Conceal": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Conceal",
      "description": "Conceal",
      "type": "object",
      "required": [
        "org",
        "user",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "org": {
          "title": "Org",
          "description": "Org",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "user": {
          "title": "User",
          "description": "User",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Organization.Member.Conceal"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Organization.Member.Delete": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Delete",
      "description": "Delete",
      "type": "object",
      "required": [
        "org",
        "user",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "org": {
          "title": "Org",
          "description": "Org",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "user": {
          "title": "User",
          "description": "User",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Organization.Member.Delete"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Organization.Member.GetAll": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAll",
      "description": "Get all",
      "type": "object",
      "required": [
        "org",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "org": {
          "title": "Org",
          "description": "Org",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "filter": {
          "title": "Filter",
          "description": "Filter",
          "$ref": "#/definitions/objectExpression"
        },
        "role": {
          "title": "Role",
          "description": "Role",
          "$ref": "#/definitions/objectExpression"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Organization.Member.GetAll"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Organization.Member.GetAllPendingInvitations": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllPendingInvitations",
      "description": "Get all pending invitations",
      "type": "object",
      "required": [
        "org",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "org": {
          "title": "Org",
          "description": "Org",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Organization.Member.GetAllPendingInvitations"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Organization.Member.GetAllPublic": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllPublic",
      "description": "Get all public",
      "type": "object",
      "required": [
        "org",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "org": {
          "title": "Org",
          "description": "Org",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Organization.Member.GetAllPublic"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Organization.Member.GetOrganizationMembership": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetOrganizationMembership",
      "description": "Get organization membership",
      "type": "object",
      "required": [
        "org",
        "user",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "org": {
          "title": "Org",
          "description": "Org",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "user": {
          "title": "User",
          "description": "User",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Organization.Member.GetOrganizationMembership"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Organization.Member.Publicize": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Publicize",
      "description": "Publicize",
      "type": "object",
      "required": [
        "org",
        "user",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "org": {
          "title": "Org",
          "description": "Org",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "user": {
          "title": "User",
          "description": "User",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Organization.Member.Publicize"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Organization.Member.RemoveOrganizationMembership": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "RemoveOrganizationMembership",
      "description": "Remove organization membership",
      "type": "object",
      "required": [
        "org",
        "user",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "org": {
          "title": "Org",
          "description": "Org",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "user": {
          "title": "User",
          "description": "User",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Organization.Member.RemoveOrganizationMembership"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Organization.OutsideCollaborator.ConvertFromMember": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "ConvertFromMember",
      "description": "Convert from member",
      "type": "object",
      "required": [
        "org",
        "user",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "org": {
          "title": "Org",
          "description": "Org",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "user": {
          "title": "User",
          "description": "User",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Organization.OutsideCollaborator.ConvertFromMember"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Organization.OutsideCollaborator.Delete": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Delete",
      "description": "Delete",
      "type": "object",
      "required": [
        "org",
        "user",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "org": {
          "title": "Org",
          "description": "Org",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "user": {
          "title": "User",
          "description": "User",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Organization.OutsideCollaborator.Delete"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Organization.OutsideCollaborator.GetAll": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAll",
      "description": "Get all",
      "type": "object",
      "required": [
        "org",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "org": {
          "title": "Org",
          "description": "Org",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "filter": {
          "title": "Filter",
          "description": "Filter",
          "$ref": "#/definitions/objectExpression"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Organization.OutsideCollaborator.GetAll"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Organization.Team.AddOrEditMembership": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "AddOrEditMembership",
      "description": "Add or edit membership",
      "type": "object",
      "required": [
        "id",
        "login",
        "request",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "login": {
          "title": "Login",
          "description": "Login",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "request": {
          "title": "Request",
          "description": "Request",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Organization.Team.AddOrEditMembership"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Organization.Team.AddRepository": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "AddRepository",
      "description": "Add repository",
      "type": "object",
      "required": [
        "id",
        "organization",
        "repoName",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "organization": {
          "title": "Organization",
          "description": "Organization",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repoName": {
          "title": "Repo name",
          "description": "Repo name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "permission": {
          "title": "Permission",
          "description": "Permission",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Organization.Team.AddRepository"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Organization.Team.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "org",
        "team",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "org": {
          "title": "Org",
          "description": "Org",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "team": {
          "title": "Team",
          "description": "Team",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Organization.Team.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Organization.Team.Delete": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Delete",
      "description": "Delete",
      "type": "object",
      "required": [
        "id",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Organization.Team.Delete"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Organization.Team.Get": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get",
      "description": "Get",
      "type": "object",
      "required": [
        "id",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Organization.Team.Get"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Organization.Team.GetAll": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAll",
      "description": "Get all",
      "type": "object",
      "required": [
        "org",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "org": {
          "title": "Org",
          "description": "Org",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Organization.Team.GetAll"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Organization.Team.GetAllChildTeams": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllChildTeams",
      "description": "Get all child teams",
      "type": "object",
      "required": [
        "id",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Organization.Team.GetAllChildTeams"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Organization.Team.GetAllForCurrent": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForCurrent",
      "description": "Get all for current",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Organization.Team.GetAllForCurrent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Organization.Team.GetAllMembers": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllMembers",
      "description": "Get all members",
      "type": "object",
      "required": [
        "id",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "request": {
          "title": "Request",
          "description": "Request",
          "$ref": "#/definitions/objectExpression"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Organization.Team.GetAllMembers"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Organization.Team.GetAllPendingInvitations": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllPendingInvitations",
      "description": "Get all pending invitations",
      "type": "object",
      "required": [
        "id",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Organization.Team.GetAllPendingInvitations"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Organization.Team.GetAllRepositories": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllRepositories",
      "description": "Get all repositories",
      "type": "object",
      "required": [
        "id",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Organization.Team.GetAllRepositories"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Organization.Team.GetMembershipDetails": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetMembershipDetails",
      "description": "Get membership details",
      "type": "object",
      "required": [
        "id",
        "login",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "login": {
          "title": "Login",
          "description": "Login",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Organization.Team.GetMembershipDetails"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Organization.Team.IsRepositoryManagedByTeam": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "IsRepositoryManagedByTeam",
      "description": "Is repository managed by team",
      "type": "object",
      "required": [
        "id",
        "owner",
        "repo",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repo": {
          "title": "Repo",
          "description": "Repo",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Organization.Team.IsRepositoryManagedByTeam"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Organization.Team.RemoveMembership": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "RemoveMembership",
      "description": "Remove membership",
      "type": "object",
      "required": [
        "id",
        "login",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "login": {
          "title": "Login",
          "description": "Login",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Organization.Team.RemoveMembership"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Organization.Team.RemoveRepository": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "RemoveRepository",
      "description": "Remove repository",
      "type": "object",
      "required": [
        "id",
        "organization",
        "repoName",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "organization": {
          "title": "Organization",
          "description": "Organization",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repoName": {
          "title": "Repo name",
          "description": "Repo name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Organization.Team.RemoveRepository"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Organization.Team.Update": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Update",
      "description": "Update",
      "type": "object",
      "required": [
        "id",
        "team",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "team": {
          "title": "Team",
          "description": "Team",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Organization.Team.Update"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Organization.Update": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Update",
      "description": "Update",
      "type": "object",
      "required": [
        "org",
        "updateRequest",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "org": {
          "title": "Org",
          "description": "Org",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "updateRequest": {
          "title": "Update request",
          "description": "Update request",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Organization.Update"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.PullRequest.Commits": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Commits",
      "description": "Commits",
      "type": "object",
      "required": [
        "number",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.PullRequest.Commits"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.PullRequest.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "newPullRequest",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "newPullRequest": {
          "title": "New pull request",
          "description": "New pull request",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.PullRequest.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.PullRequest.Files": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Files",
      "description": "Files",
      "type": "object",
      "required": [
        "number",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.PullRequest.Files"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.PullRequest.Get": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get",
      "description": "Get",
      "type": "object",
      "required": [
        "number",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.PullRequest.Get"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.PullRequest.GetAllForRepository": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForRepository",
      "description": "Get all for repository",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "request": {
          "title": "Request",
          "description": "Request",
          "$ref": "#/definitions/objectExpression"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.PullRequest.GetAllForRepository"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.PullRequest.Merge": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Merge",
      "description": "Merge",
      "type": "object",
      "required": [
        "number",
        "mergePullRequest",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "mergePullRequest": {
          "title": "Merge pull request",
          "description": "Merge pull request",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.PullRequest.Merge"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.PullRequest.Merged": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Merged",
      "description": "Merged",
      "type": "object",
      "required": [
        "number",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.PullRequest.Merged"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.PullRequest.Review.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "number",
        "review",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "review": {
          "title": "Review",
          "description": "Review",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.PullRequest.Review.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.PullRequest.Review.Delete": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Delete",
      "description": "Delete",
      "type": "object",
      "required": [
        "number",
        "reviewId",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "reviewId": {
          "title": "Review id",
          "description": "Review id"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.PullRequest.Review.Delete"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.PullRequest.Review.Dismiss": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Dismiss",
      "description": "Dismiss",
      "type": "object",
      "required": [
        "number",
        "reviewId",
        "dismissMessage",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "reviewId": {
          "title": "Review id",
          "description": "Review id"
        },
        "dismissMessage": {
          "title": "Dismiss message",
          "description": "Dismiss message",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.PullRequest.Review.Dismiss"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.PullRequest.Review.Get": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get",
      "description": "Get",
      "type": "object",
      "required": [
        "number",
        "reviewId",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "reviewId": {
          "title": "Review id",
          "description": "Review id"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.PullRequest.Review.Get"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.PullRequest.Review.GetAll": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAll",
      "description": "Get all",
      "type": "object",
      "required": [
        "number",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.PullRequest.Review.GetAll"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.PullRequest.Review.GetAllComments": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllComments",
      "description": "Get all comments",
      "type": "object",
      "required": [
        "number",
        "reviewId",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "reviewId": {
          "title": "Review id",
          "description": "Review id"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.PullRequest.Review.GetAllComments"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.PullRequest.Review.Submit": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Submit",
      "description": "Submit",
      "type": "object",
      "required": [
        "number",
        "reviewId",
        "submitMessage",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "reviewId": {
          "title": "Review id",
          "description": "Review id"
        },
        "submitMessage": {
          "title": "Submit message",
          "description": "Submit message",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.PullRequest.Review.Submit"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.PullRequest.ReviewComment.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "number",
        "comment",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "comment": {
          "title": "Comment",
          "description": "Comment",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.PullRequest.ReviewComment.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.PullRequest.ReviewComment.CreateReply": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "CreateReply",
      "description": "Create reply",
      "type": "object",
      "required": [
        "number",
        "comment",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "comment": {
          "title": "Comment",
          "description": "Comment",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.PullRequest.ReviewComment.CreateReply"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.PullRequest.ReviewComment.Delete": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Delete",
      "description": "Delete",
      "type": "object",
      "required": [
        "number",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.PullRequest.ReviewComment.Delete"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.PullRequest.ReviewComment.Edit": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Edit",
      "description": "Edit",
      "type": "object",
      "required": [
        "number",
        "comment",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "comment": {
          "title": "Comment",
          "description": "Comment",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.PullRequest.ReviewComment.Edit"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.PullRequest.ReviewComment.GetAll": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAll",
      "description": "Get all",
      "type": "object",
      "required": [
        "number",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.PullRequest.ReviewComment.GetAll"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.PullRequest.ReviewComment.GetAllForRepository": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForRepository",
      "description": "Get all for repository",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "request": {
          "title": "Request",
          "description": "Request",
          "$ref": "#/definitions/objectExpression"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.PullRequest.ReviewComment.GetAllForRepository"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.PullRequest.ReviewComment.GetComment": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetComment",
      "description": "Get comment",
      "type": "object",
      "required": [
        "number",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.PullRequest.ReviewComment.GetComment"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.PullRequest.ReviewRequest.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "number",
        "users",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "users": {
          "title": "Users",
          "description": "Users",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.PullRequest.ReviewRequest.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.PullRequest.ReviewRequest.Delete": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Delete",
      "description": "Delete",
      "type": "object",
      "required": [
        "number",
        "users",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "users": {
          "title": "Users",
          "description": "Users",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.PullRequest.ReviewRequest.Delete"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.PullRequest.ReviewRequest.Get": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get",
      "description": "Get",
      "type": "object",
      "required": [
        "number",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.PullRequest.ReviewRequest.Get"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.PullRequest.Update": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Update",
      "description": "Update",
      "type": "object",
      "required": [
        "number",
        "pullRequestUpdate",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "pullRequestUpdate": {
          "title": "Pull request update",
          "description": "Pull request update",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.PullRequest.Update"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Reaction.CommitComment.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "number",
        "reaction",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "reaction": {
          "title": "Reaction",
          "description": "Reaction",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Reaction.CommitComment.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Reaction.CommitComment.GetAll": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAll",
      "description": "Get all",
      "type": "object",
      "required": [
        "number",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Reaction.CommitComment.GetAll"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Reaction.Delete": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Delete",
      "description": "Delete",
      "type": "object",
      "required": [
        "number",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Reaction.Delete"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Reaction.Issue.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "number",
        "reaction",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "reaction": {
          "title": "Reaction",
          "description": "Reaction",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Reaction.Issue.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Reaction.Issue.GetAll": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAll",
      "description": "Get all",
      "type": "object",
      "required": [
        "number",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Reaction.Issue.GetAll"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Reaction.IssueComment.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "number",
        "reaction",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "reaction": {
          "title": "Reaction",
          "description": "Reaction",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Reaction.IssueComment.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Reaction.IssueComment.GetAll": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAll",
      "description": "Get all",
      "type": "object",
      "required": [
        "number",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Reaction.IssueComment.GetAll"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Reaction.PullRequestReviewComment.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "number",
        "reaction",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "reaction": {
          "title": "Reaction",
          "description": "Reaction",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Reaction.PullRequestReviewComment.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Reaction.PullRequestReviewComment.GetAll": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAll",
      "description": "Get all",
      "type": "object",
      "required": [
        "number",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Reaction.PullRequestReviewComment.GetAll"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Branch.AddAdminEnforcement": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "AddAdminEnforcement",
      "description": "Add admin enforcement",
      "type": "object",
      "required": [
        "branch",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "branch": {
          "title": "Branch",
          "description": "Branch",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Branch.AddAdminEnforcement"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Branch.AddProtectedBranchTeamRestrictions": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "AddProtectedBranchTeamRestrictions",
      "description": "Add protected branch team restrictions",
      "type": "object",
      "required": [
        "branch",
        "teams",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "branch": {
          "title": "Branch",
          "description": "Branch",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "teams": {
          "title": "Teams",
          "description": "Teams",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Branch.AddProtectedBranchTeamRestrictions"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Branch.AddProtectedBranchUserRestrictions": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "AddProtectedBranchUserRestrictions",
      "description": "Add protected branch user restrictions",
      "type": "object",
      "required": [
        "branch",
        "users",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "branch": {
          "title": "Branch",
          "description": "Branch",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "users": {
          "title": "Users",
          "description": "Users",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Branch.AddProtectedBranchUserRestrictions"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Branch.AddRequiredStatusChecksContexts": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "AddRequiredStatusChecksContexts",
      "description": "Add required status checks contexts",
      "type": "object",
      "required": [
        "branch",
        "contexts",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "branch": {
          "title": "Branch",
          "description": "Branch",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "contexts": {
          "title": "Contexts",
          "description": "Contexts"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Branch.AddRequiredStatusChecksContexts"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Branch.DeleteBranchProtection": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "DeleteBranchProtection",
      "description": "Delete branch protection",
      "type": "object",
      "required": [
        "branch",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "branch": {
          "title": "Branch",
          "description": "Branch",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Branch.DeleteBranchProtection"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Branch.DeleteProtectedBranchRestrictions": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "DeleteProtectedBranchRestrictions",
      "description": "Delete protected branch restrictions",
      "type": "object",
      "required": [
        "branch",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "branch": {
          "title": "Branch",
          "description": "Branch",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Branch.DeleteProtectedBranchRestrictions"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Branch.DeleteProtectedBranchTeamRestrictions": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "DeleteProtectedBranchTeamRestrictions",
      "description": "Delete protected branch team restrictions",
      "type": "object",
      "required": [
        "branch",
        "teams",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "branch": {
          "title": "Branch",
          "description": "Branch",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "teams": {
          "title": "Teams",
          "description": "Teams",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Branch.DeleteProtectedBranchTeamRestrictions"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Branch.DeleteProtectedBranchUserRestrictions": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "DeleteProtectedBranchUserRestrictions",
      "description": "Delete protected branch user restrictions",
      "type": "object",
      "required": [
        "branch",
        "users",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "branch": {
          "title": "Branch",
          "description": "Branch",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "users": {
          "title": "Users",
          "description": "Users",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Branch.DeleteProtectedBranchUserRestrictions"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Branch.DeleteRequiredStatusChecks": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "DeleteRequiredStatusChecks",
      "description": "Delete required status checks",
      "type": "object",
      "required": [
        "branch",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "branch": {
          "title": "Branch",
          "description": "Branch",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Branch.DeleteRequiredStatusChecks"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Branch.DeleteRequiredStatusChecksContexts": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "DeleteRequiredStatusChecksContexts",
      "description": "Delete required status checks contexts",
      "type": "object",
      "required": [
        "branch",
        "contexts",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "branch": {
          "title": "Branch",
          "description": "Branch",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "contexts": {
          "title": "Contexts",
          "description": "Contexts"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Branch.DeleteRequiredStatusChecksContexts"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Branch.Get": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get",
      "description": "Get",
      "type": "object",
      "required": [
        "branch",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "branch": {
          "title": "Branch",
          "description": "Branch",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Branch.Get"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Branch.GetAdminEnforcement": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAdminEnforcement",
      "description": "Get admin enforcement",
      "type": "object",
      "required": [
        "branch",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "branch": {
          "title": "Branch",
          "description": "Branch",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Branch.GetAdminEnforcement"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Branch.GetAll": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAll",
      "description": "Get all",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Branch.GetAll"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Branch.GetAllProtectedBranchTeamRestrictions": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllProtectedBranchTeamRestrictions",
      "description": "Get all protected branch team restrictions",
      "type": "object",
      "required": [
        "branch",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "branch": {
          "title": "Branch",
          "description": "Branch",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Branch.GetAllProtectedBranchTeamRestrictions"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Branch.GetAllProtectedBranchUserRestrictions": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllProtectedBranchUserRestrictions",
      "description": "Get all protected branch user restrictions",
      "type": "object",
      "required": [
        "branch",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "branch": {
          "title": "Branch",
          "description": "Branch",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Branch.GetAllProtectedBranchUserRestrictions"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Branch.GetAllRequiredStatusChecksContexts": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllRequiredStatusChecksContexts",
      "description": "Get all required status checks contexts",
      "type": "object",
      "required": [
        "branch",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "branch": {
          "title": "Branch",
          "description": "Branch",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Branch.GetAllRequiredStatusChecksContexts"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Branch.GetBranchProtection": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetBranchProtection",
      "description": "Get branch protection",
      "type": "object",
      "required": [
        "branch",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "branch": {
          "title": "Branch",
          "description": "Branch",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Branch.GetBranchProtection"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Branch.GetProtectedBranchRestrictions": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetProtectedBranchRestrictions",
      "description": "Get protected branch restrictions",
      "type": "object",
      "required": [
        "branch",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "branch": {
          "title": "Branch",
          "description": "Branch",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Branch.GetProtectedBranchRestrictions"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Branch.GetRequiredStatusChecks": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetRequiredStatusChecks",
      "description": "Get required status checks",
      "type": "object",
      "required": [
        "branch",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "branch": {
          "title": "Branch",
          "description": "Branch",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Branch.GetRequiredStatusChecks"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Branch.GetReviewEnforcement": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetReviewEnforcement",
      "description": "Get review enforcement",
      "type": "object",
      "required": [
        "branch",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "branch": {
          "title": "Branch",
          "description": "Branch",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Branch.GetReviewEnforcement"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Branch.RemoveAdminEnforcement": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "RemoveAdminEnforcement",
      "description": "Remove admin enforcement",
      "type": "object",
      "required": [
        "branch",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "branch": {
          "title": "Branch",
          "description": "Branch",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Branch.RemoveAdminEnforcement"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Branch.RemoveReviewEnforcement": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "RemoveReviewEnforcement",
      "description": "Remove review enforcement",
      "type": "object",
      "required": [
        "branch",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "branch": {
          "title": "Branch",
          "description": "Branch",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Branch.RemoveReviewEnforcement"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Branch.UpdateBranchProtection": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "UpdateBranchProtection",
      "description": "Update branch protection",
      "type": "object",
      "required": [
        "branch",
        "update",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "branch": {
          "title": "Branch",
          "description": "Branch",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "update": {
          "title": "Update",
          "description": "Update",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Branch.UpdateBranchProtection"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Branch.UpdateProtectedBranchTeamRestrictions": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "UpdateProtectedBranchTeamRestrictions",
      "description": "Update protected branch team restrictions",
      "type": "object",
      "required": [
        "branch",
        "teams",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "branch": {
          "title": "Branch",
          "description": "Branch",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "teams": {
          "title": "Teams",
          "description": "Teams",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Branch.UpdateProtectedBranchTeamRestrictions"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Branch.UpdateProtectedBranchUserRestrictions": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "UpdateProtectedBranchUserRestrictions",
      "description": "Update protected branch user restrictions",
      "type": "object",
      "required": [
        "branch",
        "users",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "branch": {
          "title": "Branch",
          "description": "Branch",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "users": {
          "title": "Users",
          "description": "Users",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Branch.UpdateProtectedBranchUserRestrictions"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Branch.UpdateRequiredStatusChecks": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "UpdateRequiredStatusChecks",
      "description": "Update required status checks",
      "type": "object",
      "required": [
        "branch",
        "update",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "branch": {
          "title": "Branch",
          "description": "Branch",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "update": {
          "title": "Update",
          "description": "Update",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Branch.UpdateRequiredStatusChecks"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Branch.UpdateRequiredStatusChecksContexts": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "UpdateRequiredStatusChecksContexts",
      "description": "Update required status checks contexts",
      "type": "object",
      "required": [
        "branch",
        "contexts",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "branch": {
          "title": "Branch",
          "description": "Branch",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "contexts": {
          "title": "Contexts",
          "description": "Contexts"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Branch.UpdateRequiredStatusChecksContexts"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Branch.UpdateReviewEnforcement": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "UpdateReviewEnforcement",
      "description": "Update review enforcement",
      "type": "object",
      "required": [
        "branch",
        "update",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "branch": {
          "title": "Branch",
          "description": "Branch",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "update": {
          "title": "Update",
          "description": "Update",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Branch.UpdateReviewEnforcement"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Collaborator.Add": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Add",
      "description": "Add",
      "type": "object",
      "required": [
        "user",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "user": {
          "title": "User",
          "description": "User",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "permission": {
          "title": "Permission",
          "description": "Permission",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Collaborator.Add"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Collaborator.Delete": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Delete",
      "description": "Delete",
      "type": "object",
      "required": [
        "user",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "user": {
          "title": "User",
          "description": "User",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Collaborator.Delete"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Collaborator.GetAll": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAll",
      "description": "Get all",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "request": {
          "title": "Request",
          "description": "Request",
          "$ref": "#/definitions/objectExpression"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Collaborator.GetAll"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Collaborator.Invite": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Invite",
      "description": "Invite",
      "type": "object",
      "required": [
        "user",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "user": {
          "title": "User",
          "description": "User",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "permission": {
          "title": "Permission",
          "description": "Permission",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Collaborator.Invite"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Collaborator.IsCollaborator": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "IsCollaborator",
      "description": "Is collaborator",
      "type": "object",
      "required": [
        "user",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "user": {
          "title": "User",
          "description": "User",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Collaborator.IsCollaborator"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Collaborator.ReviewPermission": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "ReviewPermission",
      "description": "Review permission",
      "type": "object",
      "required": [
        "user",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "user": {
          "title": "User",
          "description": "User",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Collaborator.ReviewPermission"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Comment.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "sha",
        "newCommitComment",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "sha": {
          "title": "Sha",
          "description": "Sha",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "newCommitComment": {
          "title": "New commit comment",
          "description": "New commit comment",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Comment.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Comment.Delete": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Delete",
      "description": "Delete",
      "type": "object",
      "required": [
        "number",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Comment.Delete"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Comment.Get": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get",
      "description": "Get",
      "type": "object",
      "required": [
        "number",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Comment.Get"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Comment.GetAllForCommit": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForCommit",
      "description": "Get all for commit",
      "type": "object",
      "required": [
        "sha",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "sha": {
          "title": "Sha",
          "description": "Sha",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Comment.GetAllForCommit"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Comment.GetAllForRepository": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForRepository",
      "description": "Get all for repository",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Comment.GetAllForRepository"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Comment.Update": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Update",
      "description": "Update",
      "type": "object",
      "required": [
        "number",
        "commentUpdate",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "commentUpdate": {
          "title": "Comment update",
          "description": "Comment update",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Comment.Update"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Commit.Compare": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Compare",
      "description": "Compare",
      "type": "object",
      "required": [
        "base",
        "head",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "base": {
          "title": "Base",
          "description": "Base",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "head": {
          "title": "Head",
          "description": "Head",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Commit.Compare"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Commit.Get": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get",
      "description": "Get",
      "type": "object",
      "required": [
        "reference",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "reference": {
          "title": "Reference",
          "description": "Reference",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Commit.Get"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Commit.GetAll": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAll",
      "description": "Get all",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "request": {
          "title": "Request",
          "description": "Request",
          "$ref": "#/definitions/objectExpression"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Commit.GetAll"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Commit.GetSha1": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetSha1",
      "description": "Get sha 1",
      "type": "object",
      "required": [
        "reference",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "reference": {
          "title": "Reference",
          "description": "Reference",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Commit.GetSha1"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Content.CreateFile": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "CreateFile",
      "description": "Create file",
      "type": "object",
      "required": [
        "path",
        "request",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "path": {
          "title": "Path",
          "description": "Path",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "request": {
          "title": "Request",
          "description": "Request",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Content.CreateFile"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Content.DeleteFile": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "DeleteFile",
      "description": "Delete file",
      "type": "object",
      "required": [
        "path",
        "request",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "path": {
          "title": "Path",
          "description": "Path",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "request": {
          "title": "Request",
          "description": "Request",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Content.DeleteFile"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Content.GetAllContents": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllContents",
      "description": "Get all contents",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "path": {
          "title": "Path",
          "description": "Path",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Content.GetAllContents"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Content.GetAllContentsByRef": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllContentsByRef",
      "description": "Get all contents by ref",
      "type": "object",
      "required": [
        "reference",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "path": {
          "title": "Path",
          "description": "Path",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "reference": {
          "title": "Reference",
          "description": "Reference",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Content.GetAllContentsByRef"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Content.GetArchive": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetArchive",
      "description": "Get archive",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "archiveFormat": {
          "title": "Archive format",
          "description": "Archive format",
          "$ref": "#/definitions/objectExpression"
        },
        "reference": {
          "title": "Reference",
          "description": "Reference",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "timeout": {
          "title": "Timeout",
          "description": "Timeout",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Content.GetArchive"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Content.GetRawContent": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetRawContent",
      "description": "Get raw content",
      "type": "object",
      "required": [
        "owner",
        "name",
        "path",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "path": {
          "title": "Path",
          "description": "Path",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Content.GetRawContent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Content.GetRawContentByRef": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetRawContentByRef",
      "description": "Get raw content by ref",
      "type": "object",
      "required": [
        "owner",
        "name",
        "path",
        "reference",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "path": {
          "title": "Path",
          "description": "Path",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "reference": {
          "title": "Reference",
          "description": "Reference",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Content.GetRawContentByRef"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Content.GetReadme": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetReadme",
      "description": "Get readme",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Content.GetReadme"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Content.GetReadmeHtml": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetReadmeHtml",
      "description": "Get readme html",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Content.GetReadmeHtml"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Content.UpdateFile": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "UpdateFile",
      "description": "Update file",
      "type": "object",
      "required": [
        "path",
        "request",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "path": {
          "title": "Path",
          "description": "Path",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "request": {
          "title": "Request",
          "description": "Request",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Content.UpdateFile"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "newRepository",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "organizationLogin": {
          "title": "Organization login",
          "description": "Organization login",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "newRepository": {
          "title": "New repository",
          "description": "New repository",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Delete": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Delete",
      "description": "Delete",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Delete"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.DeployKeys.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "newDeployKey",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "newDeployKey": {
          "title": "New deploy key",
          "description": "New deploy key",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.DeployKeys.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.DeployKeys.Delete": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Delete",
      "description": "Delete",
      "type": "object",
      "required": [
        "number",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.DeployKeys.Delete"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.DeployKeys.Get": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get",
      "description": "Get",
      "type": "object",
      "required": [
        "number",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.DeployKeys.Get"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.DeployKeys.GetAll": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAll",
      "description": "Get all",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.DeployKeys.GetAll"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Deployment.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "newDeployment",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "newDeployment": {
          "title": "New deployment",
          "description": "New deployment",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Deployment.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Deployment.GetAll": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAll",
      "description": "Get all",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Deployment.GetAll"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Deployment.Status.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "deploymentId",
        "newDeploymentStatus",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "deploymentId": {
          "title": "Deployment id",
          "description": "Deployment id"
        },
        "newDeploymentStatus": {
          "title": "New deployment status",
          "description": "New deployment status",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Deployment.Status.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Deployment.Status.GetAll": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAll",
      "description": "Get all",
      "type": "object",
      "required": [
        "deploymentId",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "deploymentId": {
          "title": "Deployment id",
          "description": "Deployment id"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Deployment.Status.GetAll"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Edit": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Edit",
      "description": "Edit",
      "type": "object",
      "required": [
        "update",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "update": {
          "title": "Update",
          "description": "Update",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Edit"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Forks.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "fork",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "fork": {
          "title": "Fork",
          "description": "Fork",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Forks.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Forks.GetAll": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAll",
      "description": "Get all",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "request": {
          "title": "Request",
          "description": "Request",
          "$ref": "#/definitions/objectExpression"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Forks.GetAll"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Get": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get",
      "description": "Get",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Get"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.GetAllContributors": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllContributors",
      "description": "Get all contributors",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "includeAnonymous": {
          "title": "Include anonymous",
          "description": "Include anonymous",
          "$ref": "#/definitions/booleanExpression"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.GetAllContributors"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.GetAllForCurrent": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForCurrent",
      "description": "Get all for current",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "request": {
          "title": "Request",
          "description": "Request",
          "$ref": "#/definitions/objectExpression"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.GetAllForCurrent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.GetAllForOrg": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForOrg",
      "description": "Get all for org",
      "type": "object",
      "required": [
        "organization",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "organization": {
          "title": "Organization",
          "description": "Organization",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.GetAllForOrg"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.GetAllForUser": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForUser",
      "description": "Get all for user",
      "type": "object",
      "required": [
        "login",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "login": {
          "title": "Login",
          "description": "Login",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.GetAllForUser"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.GetAllLanguages": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllLanguages",
      "description": "Get all languages",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.GetAllLanguages"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.GetAllPublic": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllPublic",
      "description": "Get all public",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "request": {
          "title": "Request",
          "description": "Request",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.GetAllPublic"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.GetAllTags": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllTags",
      "description": "Get all tags",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.GetAllTags"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.GetAllTeams": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllTeams",
      "description": "Get all teams",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.GetAllTeams"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.GetLicenseContents": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetLicenseContents",
      "description": "Get license contents",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.GetLicenseContents"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Hooks.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "hook",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "hook": {
          "title": "Hook",
          "description": "Hook",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Hooks.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Hooks.Delete": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Delete",
      "description": "Delete",
      "type": "object",
      "required": [
        "hookId",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "hookId": {
          "title": "Hook id",
          "description": "Hook id"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Hooks.Delete"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Hooks.Edit": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Edit",
      "description": "Edit",
      "type": "object",
      "required": [
        "hookId",
        "hook",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "hookId": {
          "title": "Hook id",
          "description": "Hook id"
        },
        "hook": {
          "title": "Hook",
          "description": "Hook",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Hooks.Edit"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Hooks.Get": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get",
      "description": "Get",
      "type": "object",
      "required": [
        "hookId",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "hookId": {
          "title": "Hook id",
          "description": "Hook id"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Hooks.Get"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Hooks.GetAll": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAll",
      "description": "Get all",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Hooks.GetAll"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Hooks.Ping": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Ping",
      "description": "Ping",
      "type": "object",
      "required": [
        "hookId",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "hookId": {
          "title": "Hook id",
          "description": "Hook id"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Hooks.Ping"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Hooks.Test": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Test",
      "description": "Test",
      "type": "object",
      "required": [
        "hookId",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "hookId": {
          "title": "Hook id",
          "description": "Hook id"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Hooks.Test"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Invitation.Accept": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Accept",
      "description": "Accept",
      "type": "object",
      "required": [
        "invitationId",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "invitationId": {
          "title": "Invitation id",
          "description": "Invitation id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Invitation.Accept"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Invitation.Decline": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Decline",
      "description": "Decline",
      "type": "object",
      "required": [
        "invitationId",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "invitationId": {
          "title": "Invitation id",
          "description": "Invitation id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Invitation.Decline"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Invitation.Delete": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Delete",
      "description": "Delete",
      "type": "object",
      "required": [
        "repositoryId",
        "invitationId",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "invitationId": {
          "title": "Invitation id",
          "description": "Invitation id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Invitation.Delete"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Invitation.Edit": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Edit",
      "description": "Edit",
      "type": "object",
      "required": [
        "repositoryId",
        "invitationId",
        "permissions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "invitationId": {
          "title": "Invitation id",
          "description": "Invitation id"
        },
        "permissions": {
          "title": "Permissions",
          "description": "Permissions",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Invitation.Edit"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Invitation.GetAllForCurrent": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForCurrent",
      "description": "Get all for current",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Invitation.GetAllForCurrent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Invitation.GetAllForRepository": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForRepository",
      "description": "Get all for repository",
      "type": "object",
      "required": [
        "repositoryId",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Invitation.GetAllForRepository"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Merging.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "merge",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "merge": {
          "title": "Merge",
          "description": "Merge",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Merging.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Page.Get": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get",
      "description": "Get",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Page.Get"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Page.GetAll": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAll",
      "description": "Get all",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Page.GetAll"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Page.GetLatest": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetLatest",
      "description": "Get latest",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Page.GetLatest"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Page.RequestPageBuild": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "RequestPageBuild",
      "description": "Request page build",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Page.RequestPageBuild"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Project.Card.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "columnId",
        "newProjectCard",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "columnId": {
          "title": "Column id",
          "description": "Column id"
        },
        "newProjectCard": {
          "title": "New project card",
          "description": "New project card",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Project.Card.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Project.Card.Delete": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Delete",
      "description": "Delete",
      "type": "object",
      "required": [
        "id",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Project.Card.Delete"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Project.Card.Get": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get",
      "description": "Get",
      "type": "object",
      "required": [
        "id",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Project.Card.Get"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Project.Card.GetAll": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAll",
      "description": "Get all",
      "type": "object",
      "required": [
        "columnId",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "columnId": {
          "title": "Column id",
          "description": "Column id"
        },
        "request": {
          "title": "Request",
          "description": "Request",
          "$ref": "#/definitions/objectExpression"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Project.Card.GetAll"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Project.Card.Move": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Move",
      "description": "Move",
      "type": "object",
      "required": [
        "id",
        "position",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "position": {
          "title": "Position",
          "description": "Position",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Project.Card.Move"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Project.Card.Update": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Update",
      "description": "Update",
      "type": "object",
      "required": [
        "id",
        "projectCardUpdate",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "projectCardUpdate": {
          "title": "Project card update",
          "description": "Project card update",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Project.Card.Update"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Project.Column.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "projectId",
        "newProjectColumn",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "projectId": {
          "title": "Project id",
          "description": "Project id"
        },
        "newProjectColumn": {
          "title": "New project column",
          "description": "New project column",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Project.Column.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Project.Column.Delete": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Delete",
      "description": "Delete",
      "type": "object",
      "required": [
        "id",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Project.Column.Delete"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Project.Column.Get": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get",
      "description": "Get",
      "type": "object",
      "required": [
        "id",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Project.Column.Get"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Project.Column.GetAll": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAll",
      "description": "Get all",
      "type": "object",
      "required": [
        "projectId",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "projectId": {
          "title": "Project id",
          "description": "Project id"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Project.Column.GetAll"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Project.Column.Move": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Move",
      "description": "Move",
      "type": "object",
      "required": [
        "id",
        "position",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "position": {
          "title": "Position",
          "description": "Position",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Project.Column.Move"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Project.Column.Update": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Update",
      "description": "Update",
      "type": "object",
      "required": [
        "id",
        "projectColumnUpdate",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "projectColumnUpdate": {
          "title": "Project column update",
          "description": "Project column update",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Project.Column.Update"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Project.CreateForOrganization": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "CreateForOrganization",
      "description": "Create for organization",
      "type": "object",
      "required": [
        "organization",
        "newProject",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "organization": {
          "title": "Organization",
          "description": "Organization",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "newProject": {
          "title": "New project",
          "description": "New project",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Project.CreateForOrganization"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Project.CreateForRepository": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "CreateForRepository",
      "description": "Create for repository",
      "type": "object",
      "required": [
        "repositoryId",
        "newProject",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "newProject": {
          "title": "New project",
          "description": "New project",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Project.CreateForRepository"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Project.Delete": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Delete",
      "description": "Delete",
      "type": "object",
      "required": [
        "id",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Project.Delete"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Project.Get": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get",
      "description": "Get",
      "type": "object",
      "required": [
        "id",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Project.Get"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Project.GetAllForOrganization": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForOrganization",
      "description": "Get all for organization",
      "type": "object",
      "required": [
        "organization",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "organization": {
          "title": "Organization",
          "description": "Organization",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "request": {
          "title": "Request",
          "description": "Request",
          "$ref": "#/definitions/objectExpression"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Project.GetAllForOrganization"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Project.GetAllForRepository": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForRepository",
      "description": "Get all for repository",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "request": {
          "title": "Request",
          "description": "Request",
          "$ref": "#/definitions/objectExpression"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Project.GetAllForRepository"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Project.Update": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Update",
      "description": "Update",
      "type": "object",
      "required": [
        "id",
        "projectUpdate",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "projectUpdate": {
          "title": "Project update",
          "description": "Project update",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Project.Update"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.PullRequest.Commits": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Commits",
      "description": "Commits",
      "type": "object",
      "required": [
        "number",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.PullRequest.Commits"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.PullRequest.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "newPullRequest",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "newPullRequest": {
          "title": "New pull request",
          "description": "New pull request",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.PullRequest.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.PullRequest.Files": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Files",
      "description": "Files",
      "type": "object",
      "required": [
        "number",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.PullRequest.Files"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.PullRequest.Get": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get",
      "description": "Get",
      "type": "object",
      "required": [
        "number",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.PullRequest.Get"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.PullRequest.GetAllForRepository": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForRepository",
      "description": "Get all for repository",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "request": {
          "title": "Request",
          "description": "Request",
          "$ref": "#/definitions/objectExpression"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.PullRequest.GetAllForRepository"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.PullRequest.Merge": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Merge",
      "description": "Merge",
      "type": "object",
      "required": [
        "number",
        "mergePullRequest",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "mergePullRequest": {
          "title": "Merge pull request",
          "description": "Merge pull request",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.PullRequest.Merge"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.PullRequest.Merged": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Merged",
      "description": "Merged",
      "type": "object",
      "required": [
        "number",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.PullRequest.Merged"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.PullRequest.Review.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "number",
        "review",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "review": {
          "title": "Review",
          "description": "Review",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.PullRequest.Review.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.PullRequest.Review.Delete": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Delete",
      "description": "Delete",
      "type": "object",
      "required": [
        "number",
        "reviewId",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "reviewId": {
          "title": "Review id",
          "description": "Review id"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.PullRequest.Review.Delete"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.PullRequest.Review.Dismiss": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Dismiss",
      "description": "Dismiss",
      "type": "object",
      "required": [
        "number",
        "reviewId",
        "dismissMessage",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "reviewId": {
          "title": "Review id",
          "description": "Review id"
        },
        "dismissMessage": {
          "title": "Dismiss message",
          "description": "Dismiss message",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.PullRequest.Review.Dismiss"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.PullRequest.Review.Get": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get",
      "description": "Get",
      "type": "object",
      "required": [
        "number",
        "reviewId",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "reviewId": {
          "title": "Review id",
          "description": "Review id"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.PullRequest.Review.Get"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.PullRequest.Review.GetAll": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAll",
      "description": "Get all",
      "type": "object",
      "required": [
        "number",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.PullRequest.Review.GetAll"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.PullRequest.Review.GetAllComments": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllComments",
      "description": "Get all comments",
      "type": "object",
      "required": [
        "number",
        "reviewId",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "reviewId": {
          "title": "Review id",
          "description": "Review id"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.PullRequest.Review.GetAllComments"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.PullRequest.Review.Submit": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Submit",
      "description": "Submit",
      "type": "object",
      "required": [
        "number",
        "reviewId",
        "submitMessage",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "reviewId": {
          "title": "Review id",
          "description": "Review id"
        },
        "submitMessage": {
          "title": "Submit message",
          "description": "Submit message",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.PullRequest.Review.Submit"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.PullRequest.ReviewComment.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "number",
        "comment",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "comment": {
          "title": "Comment",
          "description": "Comment",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.PullRequest.ReviewComment.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.PullRequest.ReviewComment.CreateReply": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "CreateReply",
      "description": "Create reply",
      "type": "object",
      "required": [
        "number",
        "comment",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "comment": {
          "title": "Comment",
          "description": "Comment",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.PullRequest.ReviewComment.CreateReply"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.PullRequest.ReviewComment.Delete": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Delete",
      "description": "Delete",
      "type": "object",
      "required": [
        "number",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.PullRequest.ReviewComment.Delete"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.PullRequest.ReviewComment.Edit": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Edit",
      "description": "Edit",
      "type": "object",
      "required": [
        "number",
        "comment",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "comment": {
          "title": "Comment",
          "description": "Comment",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.PullRequest.ReviewComment.Edit"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.PullRequest.ReviewComment.GetAll": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAll",
      "description": "Get all",
      "type": "object",
      "required": [
        "number",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.PullRequest.ReviewComment.GetAll"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.PullRequest.ReviewComment.GetAllForRepository": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForRepository",
      "description": "Get all for repository",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "request": {
          "title": "Request",
          "description": "Request",
          "$ref": "#/definitions/objectExpression"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.PullRequest.ReviewComment.GetAllForRepository"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.PullRequest.ReviewComment.GetComment": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetComment",
      "description": "Get comment",
      "type": "object",
      "required": [
        "number",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.PullRequest.ReviewComment.GetComment"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.PullRequest.ReviewRequest.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "number",
        "users",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "users": {
          "title": "Users",
          "description": "Users",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.PullRequest.ReviewRequest.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.PullRequest.ReviewRequest.Delete": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Delete",
      "description": "Delete",
      "type": "object",
      "required": [
        "number",
        "users",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "users": {
          "title": "Users",
          "description": "Users",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.PullRequest.ReviewRequest.Delete"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.PullRequest.ReviewRequest.Get": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get",
      "description": "Get",
      "type": "object",
      "required": [
        "number",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.PullRequest.ReviewRequest.Get"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.PullRequest.Update": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Update",
      "description": "Update",
      "type": "object",
      "required": [
        "number",
        "pullRequestUpdate",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "number": {
          "title": "Number",
          "description": "Number"
        },
        "pullRequestUpdate": {
          "title": "Pull request update",
          "description": "Pull request update",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.PullRequest.Update"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Release.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "data",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "data": {
          "title": "Data",
          "description": "Data",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Release.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Release.Delete": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Delete",
      "description": "Delete",
      "type": "object",
      "required": [
        "id",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Release.Delete"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Release.DeleteAsset": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "DeleteAsset",
      "description": "Delete asset",
      "type": "object",
      "required": [
        "id",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Release.DeleteAsset"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Release.Edit": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Edit",
      "description": "Edit",
      "type": "object",
      "required": [
        "id",
        "data",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "data": {
          "title": "Data",
          "description": "Data",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Release.Edit"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Release.EditAsset": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "EditAsset",
      "description": "Edit asset",
      "type": "object",
      "required": [
        "assetId",
        "data",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "assetId": {
          "title": "Asset id",
          "description": "Asset id"
        },
        "data": {
          "title": "Data",
          "description": "Data",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Release.EditAsset"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Release.Get": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get",
      "description": "Get",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "tag": {
          "title": "Tag",
          "description": "Tag",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Release.Get"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Release.GetAll": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAll",
      "description": "Get all",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Release.GetAll"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Release.GetAllAssets": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllAssets",
      "description": "Get all assets",
      "type": "object",
      "required": [
        "id",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Release.GetAllAssets"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Release.GetAsset": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAsset",
      "description": "Get asset",
      "type": "object",
      "required": [
        "assetId",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "assetId": {
          "title": "Asset id",
          "description": "Asset id"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Release.GetAsset"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Release.GetLatest": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetLatest",
      "description": "Get latest",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Release.GetLatest"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Release.UploadAsset": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "UploadAsset",
      "description": "Upload asset",
      "type": "object",
      "required": [
        "release",
        "data",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "release": {
          "title": "Release",
          "description": "Release",
          "$ref": "#/definitions/objectExpression"
        },
        "data": {
          "title": "Data",
          "description": "Data",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Release.UploadAsset"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Statistics.GetCodeFrequency": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetCodeFrequency",
      "description": "Get code frequency",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "cancellationToken": {
          "title": "Cancellation token",
          "description": "Cancellation token",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Statistics.GetCodeFrequency"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Statistics.GetCommitActivity": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetCommitActivity",
      "description": "Get commit activity",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "cancellationToken": {
          "title": "Cancellation token",
          "description": "Cancellation token",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Statistics.GetCommitActivity"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Statistics.GetContributors": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetContributors",
      "description": "Get contributors",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "cancellationToken": {
          "title": "Cancellation token",
          "description": "Cancellation token",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Statistics.GetContributors"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Statistics.GetParticipation": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetParticipation",
      "description": "Get participation",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "cancellationToken": {
          "title": "Cancellation token",
          "description": "Cancellation token",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Statistics.GetParticipation"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Statistics.GetPunchCard": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetPunchCard",
      "description": "Get punch card",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "cancellationToken": {
          "title": "Cancellation token",
          "description": "Cancellation token",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Statistics.GetPunchCard"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Status.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "reference",
        "newCommitStatus",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "reference": {
          "title": "Reference",
          "description": "Reference",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "newCommitStatus": {
          "title": "New commit status",
          "description": "New commit status",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Status.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Status.GetAll": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAll",
      "description": "Get all",
      "type": "object",
      "required": [
        "reference",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "reference": {
          "title": "Reference",
          "description": "Reference",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Status.GetAll"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Status.GetCombined": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetCombined",
      "description": "Get combined",
      "type": "object",
      "required": [
        "reference",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "reference": {
          "title": "Reference",
          "description": "Reference",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Status.GetCombined"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Traffic.GetAllPaths": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllPaths",
      "description": "Get all paths",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Traffic.GetAllPaths"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Traffic.GetAllReferrers": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllReferrers",
      "description": "Get all referrers",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Traffic.GetAllReferrers"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Traffic.GetClones": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetClones",
      "description": "Get clones",
      "type": "object",
      "required": [
        "per",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "per": {
          "title": "Per",
          "description": "Per",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Traffic.GetClones"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Traffic.GetViews": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetViews",
      "description": "Get views",
      "type": "object",
      "required": [
        "per",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "per": {
          "title": "Per",
          "description": "Per",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Traffic.GetViews"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Repository.Transfer": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Transfer",
      "description": "Transfer",
      "type": "object",
      "required": [
        "repositoryTransfer",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "owner": {
          "title": "Owner",
          "description": "Owner",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "description": "Name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "repositoryTransfer": {
          "title": "Repository transfer",
          "description": "Repository transfer",
          "$ref": "#/definitions/objectExpression"
        },
        "repositoryId": {
          "title": "Repository id",
          "description": "Repository id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Repository.Transfer"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Search.SearchCode": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "SearchCode",
      "description": "Search code",
      "type": "object",
      "required": [
        "search",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "search": {
          "title": "Search",
          "description": "Search",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Search.SearchCode"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Search.SearchIssues": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "SearchIssues",
      "description": "Search issues",
      "type": "object",
      "required": [
        "search",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "search": {
          "title": "Search",
          "description": "Search",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Search.SearchIssues"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Search.SearchLabels": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "SearchLabels",
      "description": "Search labels",
      "type": "object",
      "required": [
        "search",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "search": {
          "title": "Search",
          "description": "Search",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Search.SearchLabels"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Search.SearchRepo": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "SearchRepo",
      "description": "Search repo",
      "type": "object",
      "required": [
        "search",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "search": {
          "title": "Search",
          "description": "Search",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Search.SearchRepo"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.Search.SearchUsers": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "SearchUsers",
      "description": "Search users",
      "type": "object",
      "required": [
        "search",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "search": {
          "title": "Search",
          "description": "Search",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.Search.SearchUsers"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.User.Administration.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "newUser",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "newUser": {
          "title": "New user",
          "description": "New user",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.User.Administration.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.User.Administration.CreateImpersonationToken": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "CreateImpersonationToken",
      "description": "Create impersonation token",
      "type": "object",
      "required": [
        "login",
        "newImpersonationToken",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "login": {
          "title": "Login",
          "description": "Login",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "newImpersonationToken": {
          "title": "New impersonation token",
          "description": "New impersonation token",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.User.Administration.CreateImpersonationToken"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.User.Administration.Delete": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Delete",
      "description": "Delete",
      "type": "object",
      "required": [
        "login",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "login": {
          "title": "Login",
          "description": "Login",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.User.Administration.Delete"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.User.Administration.DeleteImpersonationToken": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "DeleteImpersonationToken",
      "description": "Delete impersonation token",
      "type": "object",
      "required": [
        "login",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "login": {
          "title": "Login",
          "description": "Login",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.User.Administration.DeleteImpersonationToken"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.User.Administration.DeletePublicKey": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "DeletePublicKey",
      "description": "Delete public key",
      "type": "object",
      "required": [
        "keyId",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "keyId": {
          "title": "Key id",
          "description": "Key id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.User.Administration.DeletePublicKey"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.User.Administration.Demote": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Demote",
      "description": "Demote",
      "type": "object",
      "required": [
        "login",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "login": {
          "title": "Login",
          "description": "Login",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.User.Administration.Demote"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.User.Administration.ListAllPublicKeys": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "ListAllPublicKeys",
      "description": "List all public keys",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.User.Administration.ListAllPublicKeys"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.User.Administration.Promote": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Promote",
      "description": "Promote",
      "type": "object",
      "required": [
        "login",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "login": {
          "title": "Login",
          "description": "Login",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.User.Administration.Promote"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.User.Administration.Rename": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Rename",
      "description": "Rename",
      "type": "object",
      "required": [
        "login",
        "userRename",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "login": {
          "title": "Login",
          "description": "Login",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "userRename": {
          "title": "User rename",
          "description": "User rename",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.User.Administration.Rename"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.User.Administration.Suspend": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Suspend",
      "description": "Suspend",
      "type": "object",
      "required": [
        "login",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "login": {
          "title": "Login",
          "description": "Login",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.User.Administration.Suspend"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.User.Administration.Unsuspend": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Unsuspend",
      "description": "Unsuspend",
      "type": "object",
      "required": [
        "login",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "login": {
          "title": "Login",
          "description": "Login",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.User.Administration.Unsuspend"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.User.Current": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Current",
      "description": "Current",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.User.Current"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.User.Email.Add": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Add",
      "description": "Add",
      "type": "object",
      "required": [
        "emailAddresses",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "emailAddresses": {
          "title": "Email addresses",
          "description": "Email addresses",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.User.Email.Add"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.User.Email.Delete": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Delete",
      "description": "Delete",
      "type": "object",
      "required": [
        "emailAddresses",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "emailAddresses": {
          "title": "Email addresses",
          "description": "Email addresses",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.User.Email.Delete"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.User.Email.GetAll": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAll",
      "description": "Get all",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.User.Email.GetAll"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.User.Followers.Follow": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Follow",
      "description": "Follow",
      "type": "object",
      "required": [
        "login",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "login": {
          "title": "Login",
          "description": "Login",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.User.Followers.Follow"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.User.Followers.GetAll": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAll",
      "description": "Get all",
      "type": "object",
      "required": [
        "login",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "login": {
          "title": "Login",
          "description": "Login",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.User.Followers.GetAll"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.User.Followers.GetAllFollowing": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllFollowing",
      "description": "Get all following",
      "type": "object",
      "required": [
        "login",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "login": {
          "title": "Login",
          "description": "Login",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.User.Followers.GetAllFollowing"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.User.Followers.GetAllFollowingForCurrent": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllFollowingForCurrent",
      "description": "Get all following for current",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.User.Followers.GetAllFollowingForCurrent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.User.Followers.GetAllForCurrent": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForCurrent",
      "description": "Get all for current",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.User.Followers.GetAllForCurrent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.User.Followers.IsFollowing": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "IsFollowing",
      "description": "Is following",
      "type": "object",
      "required": [
        "login",
        "following",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "login": {
          "title": "Login",
          "description": "Login",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "following": {
          "title": "Following",
          "description": "Following",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.User.Followers.IsFollowing"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.User.Followers.IsFollowingForCurrent": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "IsFollowingForCurrent",
      "description": "Is following for current",
      "type": "object",
      "required": [
        "following",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "following": {
          "title": "Following",
          "description": "Following",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.User.Followers.IsFollowingForCurrent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.User.Followers.Unfollow": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Unfollow",
      "description": "Unfollow",
      "type": "object",
      "required": [
        "login",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "login": {
          "title": "Login",
          "description": "Login",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.User.Followers.Unfollow"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.User.Get": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get",
      "description": "Get",
      "type": "object",
      "required": [
        "login",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "login": {
          "title": "Login",
          "description": "Login",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.User.Get"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.User.GitSshKey.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "newKey",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "newKey": {
          "title": "New key",
          "description": "New key",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.User.GitSshKey.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.User.GitSshKey.Delete": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Delete",
      "description": "Delete",
      "type": "object",
      "required": [
        "id",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.User.GitSshKey.Delete"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.User.GitSshKey.Get": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get",
      "description": "Get",
      "type": "object",
      "required": [
        "id",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.User.GitSshKey.Get"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.User.GitSshKey.GetAll": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAll",
      "description": "Get all",
      "type": "object",
      "required": [
        "userName",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "userName": {
          "title": "User name",
          "description": "User name",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.User.GitSshKey.GetAll"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.User.GitSshKey.GetAllForCurrent": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForCurrent",
      "description": "Get all for current",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.User.GitSshKey.GetAllForCurrent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.User.GpgKey.Create": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Create",
      "description": "Create",
      "type": "object",
      "required": [
        "newGpgKey",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "newGpgKey": {
          "title": "New gpg key",
          "description": "New gpg key",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.User.GpgKey.Create"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.User.GpgKey.Delete": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Delete",
      "description": "Delete",
      "type": "object",
      "required": [
        "id",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.User.GpgKey.Delete"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.User.GpgKey.Get": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get",
      "description": "Get",
      "type": "object",
      "required": [
        "id",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "id": {
          "title": "Id",
          "description": "Id"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.User.GpgKey.Get"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.User.GpgKey.GetAllForCurrent": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "GetAllForCurrent",
      "description": "Get all for current",
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "options": {
          "title": "Options",
          "description": "Options",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.User.GpgKey.GetAllForCurrent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "GitHub.User.Update": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Update",
      "description": "Update",
      "type": "object",
      "required": [
        "user",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "disabled": {
          "title": "Disabled",
          "description": "Disabled",
          "$ref": "#/definitions/booleanExpression"
        },
        "resultProperty": {
          "title": "Result property",
          "description": "Result property",
          "$ref": "#/definitions/stringExpression",
          "type": "string"
        },
        "user": {
          "title": "User",
          "description": "User",
          "$ref": "#/definitions/objectExpression"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "GitHub.User.Update"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.ActivityTemplate": {
      "$role": "implements(Microsoft.IActivityTemplate)",
      "title": "Microsoft activity template",
      "type": "object",
      "required": [
        "template",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "template": {
          "title": "Template",
          "description": "Language Generator template to use to create the activity",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.ActivityTemplate"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.AdaptiveDialog": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Adaptive dialog",
      "description": "Flexible, data driven dialog that can adapt to the conversation.",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional dialog ID."
        },
        "autoEndDialog": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Auto end dialog",
          "description": "If set to true the dialog will automatically end when there are no further actions.  If set to false, remember to manually end the dialog using EndDialog action.",
          "default": true
        },
        "defaultResultProperty": {
          "type": "string",
          "title": "Default result property",
          "description": "Value that will be passed back to the parent dialog.",
          "default": "dialog.result"
        },
        "recognizer": {
          "$kind": "Microsoft.IRecognizer",
          "title": "Recognizer",
          "description": "Input recognizer that interprets user input into intent and entities.",
          "$ref": "#/definitions/Microsoft.IRecognizer"
        },
        "generator": {
          "$kind": "Microsoft.ILanguageGenerator",
          "title": "Language generator",
          "description": "Language generator that generates bot responses.",
          "$ref": "#/definitions/Microsoft.ILanguageGenerator"
        },
        "selector": {
          "$kind": "Microsoft.ITriggerSelector",
          "title": "Selector",
          "description": "Policy to determine which trigger is executed. Defaults to a 'best match' selector (optional).",
          "$ref": "#/definitions/Microsoft.ITriggerSelector"
        },
        "triggers": {
          "type": "array",
          "description": "List of triggers defined for this dialog.",
          "title": "Triggers",
          "items": {
            "$kind": "Microsoft.ITrigger",
            "title": "Event triggers",
            "description": "Event triggers for handling events.",
            "$ref": "#/definitions/Microsoft.ITrigger"
          }
        },
        "schema": {
          "title": "Schema",
          "description": "Schema to fill in.",
          "anyOf": [
            {
              "$ref": "#/definitions/schema"
            },
            {
              "type": "string",
              "title": "Reference to JSON schema",
              "description": "Reference to JSON schema .dialog file."
            }
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.AdaptiveDialog"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.AgeEntityRecognizer": {
      "$role": [
        "implements(Microsoft.IRecognizer)",
        "implements(Microsoft.IEntityRecognizer)"
      ],
      "title": "Age entity recognizer",
      "description": "Recognizer which recognizes age.",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.AgeEntityRecognizer"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.Ask": {
      "$role": [
        "implements(Microsoft.IDialog)",
        "extends(Microsoft.SendActivity)"
      ],
      "title": "Send activity to ask a question",
      "description": "This is an action which sends an activity to the user when a response is expected",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "expectedProperties": {
          "$ref": "#/definitions/arrayExpression",
          "title": "Expected properties",
          "description": "Properties expected from the user.",
          "examples": [
            [
              "age",
              "name"
            ]
          ],
          "items": {
            "type": "string",
            "title": "Name",
            "description": "Name of the property"
          }
        },
        "defaultOperation": {
          "$ref": "#/definitions/stringExpression",
          "title": "Default operation",
          "description": "Sets the default operation that will be used when no operation is recognized in the response to this Ask.",
          "examples": [
            "Add()",
            "Remove()"
          ]
        },
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the dialog"
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action."
        },
        "activity": {
          "$kind": "Microsoft.IActivityTemplate",
          "title": "Activity",
          "description": "Activity to send.",
          "$ref": "#/definitions/Microsoft.IActivityTemplate"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.Ask"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.AttachmentInput": {
      "$role": [
        "implements(Microsoft.IDialog)",
        "extends(Microsoft.InputDialog)"
      ],
      "title": "Attachment input dialog",
      "description": "Collect information - Ask for a file or image.",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "type": "object",
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "defaultValue": {
          "$role": "expression",
          "title": "Default value",
          "description": "'Property' will be set to the object or the result of this expression when max turn count is exceeded.",
          "oneOf": [
            {
              "$ref": "#/definitions/botframework.json/definitions/Attachment",
              "title": "Object",
              "description": "Attachment object."
            },
            {
              "$ref": "#/definitions/equalsExpression"
            }
          ]
        },
        "value": {
          "$role": "expression",
          "title": "Value",
          "description": "'Property' will be set to the object or the result of this expression unless it evaluates to null.",
          "oneOf": [
            {
              "$ref": "#/definitions/botframework.json/definitions/Attachment",
              "title": "Object",
              "description": "Attachment object."
            },
            {
              "$ref": "#/definitions/equalsExpression"
            }
          ]
        },
        "outputFormat": {
          "$role": "expression",
          "title": "Output format",
          "description": "Attachment output format.",
          "oneOf": [
            {
              "type": "string",
              "title": "Standard format",
              "description": "Standard output formats.",
              "enum": [
                "all",
                "first"
              ],
              "default": "first"
            },
            {
              "$ref": "#/definitions/equalsExpression"
            }
          ]
        },
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the dialog"
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action.",
          "default": false,
          "examples": [
            false,
            "=user.isVip"
          ]
        },
        "prompt": {
          "$kind": "Microsoft.IActivityTemplate",
          "title": "Initial prompt",
          "description": "Message to send to collect information.",
          "examples": [
            "What is your birth date?"
          ],
          "$ref": "#/definitions/Microsoft.IActivityTemplate"
        },
        "unrecognizedPrompt": {
          "$kind": "Microsoft.IActivityTemplate",
          "title": "Unrecognized prompt",
          "description": "Message to send when max turn count (if specified) has been exceeded and the default value is selected as the value.",
          "examples": [
            "Sorry, I'm having trouble understanding you. I will just use {this.options.defaultValue} for now. You can say 'I'm 36 years old' to change it."
          ],
          "$ref": "#/definitions/Microsoft.IActivityTemplate"
        },
        "invalidPrompt": {
          "$kind": "Microsoft.IActivityTemplate",
          "title": "Invalid prompt",
          "description": "Message to send when the user input does not meet any validation expression.",
          "examples": [
            "Sorry, '{this.value}' does not work. I need a number between 1-150. What is your age?"
          ],
          "$ref": "#/definitions/Microsoft.IActivityTemplate"
        },
        "defaultValueResponse": {
          "$kind": "Microsoft.IActivityTemplate",
          "title": "Default value response",
          "description": "Message to send when max turn count (if specified) has been exceeded and the default value is selected as the value.",
          "examples": [
            "Sorry, I'm having trouble understanding you. I will just use {this.options.defaultValue} for now. You can say 'I'm 36 years old' to change it."
          ],
          "$ref": "#/definitions/Microsoft.IActivityTemplate"
        },
        "maxTurnCount": {
          "$ref": "#/definitions/integerExpression",
          "title": "Max turn count",
          "description": "Maximum number of re-prompt attempts to collect information.",
          "default": 3,
          "examples": [
            3,
            "=settings.xyz"
          ]
        },
        "validations": {
          "type": "array",
          "title": "Validation expressions",
          "description": "Expression to validate user input.",
          "items": {
            "$ref": "#/definitions/condition",
            "title": "Condition",
            "description": "Expression which needs to met for the input to be considered valid",
            "examples": [
              "int(this.value) > 1 && int(this.value) <= 150",
              "count(this.value) < 300"
            ]
          }
        },
        "property": {
          "$ref": "#/definitions/stringExpression",
          "title": "Property",
          "description": "Property to store collected information. Input will be skipped if property has value (unless 'Always prompt' is true).",
          "examples": [
            "$birthday",
            "dialog.${user.name}",
            "=f(x)"
          ]
        },
        "alwaysPrompt": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Always prompt",
          "description": "Collect information even if the specified 'property' is not empty.",
          "default": false,
          "examples": [
            false,
            "=$val"
          ]
        },
        "allowInterruptions": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Allow Interruptions",
          "description": "A boolean expression that determines whether the parent should be allowed to interrupt the input.",
          "default": true,
          "examples": [
            true,
            "=user.xyz"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.AttachmentInput"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.BeginDialog": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Begin a dialog",
      "description": "Begin another dialog.",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the dialog"
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action.",
          "examples": [
            "user.age > 3"
          ]
        },
        "dialog": {
          "oneOf": [
            {
              "$kind": "Microsoft.IDialog",
              "pattern": "^(?!(=)).*",
              "title": "Dialog",
              "$ref": "#/definitions/Microsoft.IDialog"
            },
            {
              "$ref": "#/definitions/equalsExpression",
              "examples": [
                "=settings.dialogId"
              ]
            }
          ],
          "title": "Dialog name",
          "description": "Name of the dialog to call."
        },
        "options": {
          "$ref": "#/definitions/objectExpression",
          "title": "Options",
          "description": "One or more options that are passed to the dialog that is called.",
          "examples": [
            {
              "arg1": "=expression"
            }
          ],
          "additionalProperties": {
            "type": "string",
            "title": "Options",
            "description": "Options for dialog."
          }
        },
        "activityProcessed": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Activity processed",
          "description": "When set to false, the dialog that is called can process the current activity.",
          "default": true
        },
        "resultProperty": {
          "$ref": "#/definitions/stringExpression",
          "title": "Property",
          "description": "Property to store any value returned by the dialog that is called.",
          "examples": [
            "dialog.userName"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.BeginDialog"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.BeginSkill": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Begin a skill",
      "description": "Begin a remote skill.",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the skill dialog"
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action.",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "activityProcessed": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Activity processed",
          "description": "When set to false, the skill will be started using the activity in the current turn context instead of the activity in the Activity property.",
          "default": true,
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "resultProperty": {
          "$ref": "#/definitions/stringExpression",
          "title": "Property",
          "description": "Property to store any value returned by the dialog that is called.",
          "examples": [
            "dialog.userName"
          ]
        },
        "botId": {
          "$ref": "#/definitions/stringExpression",
          "title": "Skill host bot ID",
          "description": "The Microsoft App ID that will be calling the skill.",
          "default": "=settings.MicrosoftAppId"
        },
        "skillHostEndpoint": {
          "$ref": "#/definitions/stringExpression",
          "title": "Skill host",
          "description": "The callback Url for the skill host.",
          "default": "=settings.skillHostEndpoint",
          "examples": [
            "https://mybot.contoso.com/api/skills/"
          ]
        },
        "connectionName": {
          "$ref": "#/definitions/stringExpression",
          "title": "OAuth connection name (SSO)",
          "description": "The OAuth Connection Name, that would be used to perform Single SignOn with a skill.",
          "default": "=settings.connectionName"
        },
        "skillAppId": {
          "$ref": "#/definitions/stringExpression",
          "title": "Skill App Id",
          "description": "The Microsoft App ID for the skill."
        },
        "skillEndpoint": {
          "$ref": "#/definitions/stringExpression",
          "title": "Skill endpoint ",
          "description": "The /api/messages endpoint for the skill.",
          "examples": [
            "https://myskill.contoso.com/api/messages/"
          ]
        },
        "activity": {
          "$kind": "Microsoft.IActivityTemplate",
          "title": "Activity",
          "description": "The activity to send to the skill.",
          "$ref": "#/definitions/Microsoft.IActivityTemplate"
        },
        "allowInterruptions": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Allow interruptions",
          "description": "A boolean expression that determines whether the parent should be allowed to interrupt the skill.",
          "default": true,
          "examples": [
            true,
            "=user.xyz"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.BeginSkill"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.BreakLoop": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Break loop",
      "description": "Stop executing this loop",
      "type": "object",
      "required": [
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the dialog"
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action.",
          "examples": [
            "user.age > 3"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.BreakLoop"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.CancelAllDialogs": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Cancel all dialogs",
      "description": "Cancel all active dialogs. All dialogs in the dialog chain will need a trigger to capture the event configured in this action.",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the dialog"
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action.",
          "examples": [
            "user.age > 3"
          ]
        },
        "activityProcessed": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Activity processed",
          "description": "When set to false, the caller dialog is told it should process the current activity.",
          "default": true
        },
        "eventName": {
          "$ref": "#/definitions/stringExpression",
          "title": "Event name",
          "description": "Name of the event to emit."
        },
        "eventValue": {
          "$ref": "#/definitions/valueExpression",
          "title": "Event value",
          "description": "Value to emit with the event (optional).",
          "additionalProperties": true
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.CancelAllDialogs"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.CancelDialog": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Cancel all dialogs",
      "description": "Cancel all active dialogs. All dialogs in the dialog chain will need a trigger to capture the event configured in this action.",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the dialog"
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action.",
          "examples": [
            "user.age > 3"
          ]
        },
        "activityProcessed": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Activity processed",
          "description": "When set to false, the caller dialog is told it should process the current activity.",
          "default": true
        },
        "eventName": {
          "$ref": "#/definitions/stringExpression",
          "title": "Event name",
          "description": "Name of the event to emit."
        },
        "eventValue": {
          "$ref": "#/definitions/valueExpression",
          "title": "Event value",
          "description": "Value to emit with the event (optional).",
          "additionalProperties": true
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.CancelDialog"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.ChannelMentionEntityRecognizer": {
      "$role": [
        "implements(Microsoft.IRecognizer)"
      ],
      "title": "Channel mention entity recognizer",
      "description": "Promotes mention entities passed by a channel via the activity.entities into recognizer result.",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.ChannelMentionEntityRecognizer"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.ChoiceInput": {
      "$role": [
        "implements(Microsoft.IDialog)",
        "extends(Microsoft.InputDialog)"
      ],
      "title": "Choice input dialog",
      "description": "Collect information - Pick from a list of choices",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "defaultValue": {
          "$ref": "#/definitions/stringExpression",
          "title": "Default value",
          "description": "'Property' will be set to the value of this expression when max turn count is exceeded.",
          "examples": [
            "hello world",
            "Hello ${user.name}",
            "=concat(user.firstname, user.lastName)"
          ]
        },
        "value": {
          "$ref": "#/definitions/stringExpression",
          "title": "Value",
          "description": "'Property' will be set to the value of this expression unless it evaluates to null.",
          "examples": [
            "hello world",
            "Hello ${user.name}",
            "=concat(user.firstname, user.lastName)"
          ]
        },
        "outputFormat": {
          "$role": "expression",
          "title": "Output format",
          "description": "Sets the desired choice output format (either value or index into choices).",
          "oneOf": [
            {
              "type": "string",
              "title": "Standard",
              "description": "Standard output format.",
              "enum": [
                "value",
                "index"
              ],
              "default": "value"
            },
            {
              "$ref": "#/definitions/equalsExpression"
            }
          ]
        },
        "choices": {
          "$role": "expression",
          "title": "Array of choices",
          "description": "Choices to choose from.",
          "oneOf": [
            {
              "type": "array",
              "title": "Simple choices",
              "description": "Simple choices to choose from.",
              "items": [
                {
                  "type": "string",
                  "title": "Simple choice",
                  "description": "One choice for choice input."
                }
              ]
            },
            {
              "type": "array",
              "title": "Structured choices",
              "description": "Choices that allow full control.",
              "items": [
                {
                  "type": "object",
                  "title": "Structured choice",
                  "description": "Structured choice to choose from.",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Value",
                      "description": "Value to return when this choice is selected."
                    },
                    "action": {
                      "$ref": "#/definitions/botframework.json/definitions/CardAction",
                      "title": "Action",
                      "description": "Card action for the choice."
                    },
                    "synonyms": {
                      "type": "array",
                      "title": "Synonyms",
                      "description": "List of synonyms to recognize in addition to the value (optional).",
                      "items": {
                        "type": "string",
                        "title": "Synonym",
                        "description": "Synonym for value."
                      }
                    }
                  }
                }
              ]
            },
            {
              "$ref": "#/definitions/equalsExpression"
            }
          ]
        },
        "defaultLocale": {
          "$ref": "#/definitions/stringExpression",
          "title": "Default locale",
          "description": "The default locale to use to parse confirmation choices if there is not one passed by the caller.",
          "default": "en-us",
          "examples": [
            "en-us"
          ]
        },
        "style": {
          "$role": "expression",
          "title": "List style",
          "description": "Sets the ListStyle to control how choices are rendered.",
          "oneOf": [
            {
              "type": "string",
              "title": "List style",
              "description": "Standard list style.",
              "enum": [
                "none",
                "auto",
                "inline",
                "list",
                "suggestedAction",
                "heroCard"
              ],
              "default": "auto"
            },
            {
              "$ref": "#/definitions/equalsExpression"
            }
          ]
        },
        "choiceOptions": {
          "title": "Choice options",
          "description": "Sets the choice options used for controlling how choices are combined.",
          "oneOf": [
            {
              "type": "object",
              "title": "Object",
              "description": "Choice options object.",
              "properties": {
                "inlineSeparator": {
                  "type": "string",
                  "title": "Inline separator",
                  "description": "Character used to separate individual choices when there are more than 2 choices",
                  "default": ", "
                },
                "inlineOr": {
                  "type": "string",
                  "title": "Inline or",
                  "description": "Separator inserted between the choices when there are only 2 choices",
                  "default": " or "
                },
                "inlineOrMore": {
                  "type": "string",
                  "title": "Inline or more",
                  "description": "Separator inserted between the last 2 choices when their are more than 2 choices.",
                  "default": ", or "
                },
                "includeNumbers": {
                  "type": "boolean",
                  "title": "Include numbers",
                  "description": "If true, 'inline' and 'list' list style will be prefixed with the index of the choice.",
                  "default": true
                }
              }
            },
            {
              "$ref": "#/definitions/equalsExpression"
            }
          ]
        },
        "recognizerOptions": {
          "title": "Recognizer options",
          "description": "Sets how to recognize choices in the response",
          "oneOf": [
            {
              "type": "object",
              "title": "Object",
              "description": "Options for recognizer.",
              "properties": {
                "noValue": {
                  "type": "boolean",
                  "title": "No value",
                  "description": "If true, the choices value field will NOT be search over",
                  "default": false
                },
                "noAction": {
                  "type": "boolean",
                  "title": "No action",
                  "description": "If true, the choices action.title field will NOT be searched over",
                  "default": false
                },
                "recognizeNumbers": {
                  "type": "boolean",
                  "title": "Recognize numbers",
                  "description": "If true, the number recognizer will be used to recognize an index response (1,2,3...) to the prompt.",
                  "default": true
                },
                "recognizeOrdinals": {
                  "type": "boolean",
                  "title": "Recognize ordinals",
                  "description": "If true, the ordinal recognizer will be used to recognize ordinal response (first/second/...) to the prompt.",
                  "default": true
                }
              }
            },
            {
              "$ref": "#/definitions/equalsExpression"
            }
          ]
        },
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the dialog"
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action.",
          "default": false,
          "examples": [
            false,
            "=user.isVip"
          ]
        },
        "prompt": {
          "$kind": "Microsoft.IActivityTemplate",
          "title": "Initial prompt",
          "description": "Message to send to collect information.",
          "examples": [
            "What is your birth date?"
          ],
          "$ref": "#/definitions/Microsoft.IActivityTemplate"
        },
        "unrecognizedPrompt": {
          "$kind": "Microsoft.IActivityTemplate",
          "title": "Unrecognized prompt",
          "description": "Message to send when max turn count (if specified) has been exceeded and the default value is selected as the value.",
          "examples": [
            "Sorry, I'm having trouble understanding you. I will just use {this.options.defaultValue} for now. You can say 'I'm 36 years old' to change it."
          ],
          "$ref": "#/definitions/Microsoft.IActivityTemplate"
        },
        "invalidPrompt": {
          "$kind": "Microsoft.IActivityTemplate",
          "title": "Invalid prompt",
          "description": "Message to send when the user input does not meet any validation expression.",
          "examples": [
            "Sorry, '{this.value}' does not work. I need a number between 1-150. What is your age?"
          ],
          "$ref": "#/definitions/Microsoft.IActivityTemplate"
        },
        "defaultValueResponse": {
          "$kind": "Microsoft.IActivityTemplate",
          "title": "Default value response",
          "description": "Message to send when max turn count (if specified) has been exceeded and the default value is selected as the value.",
          "examples": [
            "Sorry, I'm having trouble understanding you. I will just use {this.options.defaultValue} for now. You can say 'I'm 36 years old' to change it."
          ],
          "$ref": "#/definitions/Microsoft.IActivityTemplate"
        },
        "maxTurnCount": {
          "$ref": "#/definitions/integerExpression",
          "title": "Max turn count",
          "description": "Maximum number of re-prompt attempts to collect information.",
          "default": 3,
          "examples": [
            3,
            "=settings.xyz"
          ]
        },
        "validations": {
          "type": "array",
          "title": "Validation expressions",
          "description": "Expression to validate user input.",
          "items": {
            "$ref": "#/definitions/condition",
            "title": "Condition",
            "description": "Expression which needs to met for the input to be considered valid",
            "examples": [
              "int(this.value) > 1 && int(this.value) <= 150",
              "count(this.value) < 300"
            ]
          }
        },
        "property": {
          "$ref": "#/definitions/stringExpression",
          "title": "Property",
          "description": "Property to store collected information. Input will be skipped if property has value (unless 'Always prompt' is true).",
          "examples": [
            "$birthday",
            "dialog.${user.name}",
            "=f(x)"
          ]
        },
        "alwaysPrompt": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Always prompt",
          "description": "Collect information even if the specified 'property' is not empty.",
          "default": false,
          "examples": [
            false,
            "=$val"
          ]
        },
        "allowInterruptions": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Allow Interruptions",
          "description": "A boolean expression that determines whether the parent should be allowed to interrupt the input.",
          "default": true,
          "examples": [
            true,
            "=user.xyz"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.ChoiceInput"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.ConditionalSelector": {
      "$role": "implements(Microsoft.ITriggerSelector)",
      "title": "Conditional trigger selector",
      "description": "Use a rule selector based on a condition",
      "type": "object",
      "required": [
        "condition",
        "ifTrue",
        "ifFalse",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Expression to evaluate"
        },
        "ifTrue": {
          "$kind": "Microsoft.ITriggerSelector",
          "$ref": "#/definitions/Microsoft.ITriggerSelector"
        },
        "ifFalse": {
          "$kind": "Microsoft.ITriggerSelector",
          "$ref": "#/definitions/Microsoft.ITriggerSelector"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.ConditionalSelector"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.ConfirmInput": {
      "$role": [
        "implements(Microsoft.IDialog)",
        "extends(Microsoft.InputDialog)"
      ],
      "title": "Confirm input dialog",
      "description": "Collect information - Ask for confirmation (yes or no).",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "outputFormat": {
          "$ref": "#/definitions/valueExpression",
          "title": "Output format",
          "description": "Optional expression to use to format the output.",
          "examples": [
            "=concat('confirmation:', this.value)"
          ]
        },
        "defaultLocale": {
          "$ref": "#/definitions/stringExpression",
          "title": "Default locale",
          "description": "The Default locale or an expression which provides the default locale to use as default if not found in the activity.",
          "default": "en-us",
          "examples": [
            "en-us"
          ]
        },
        "style": {
          "$role": "expression",
          "title": "List style",
          "description": "Sets the ListStyle to control how choices are rendered.",
          "oneOf": [
            {
              "type": "string",
              "title": "Standard style",
              "description": "Standard style for rendering choices.",
              "enum": [
                "none",
                "auto",
                "inline",
                "list",
                "suggestedAction",
                "heroCard"
              ],
              "default": "auto"
            },
            {
              "$ref": "#/definitions/equalsExpression"
            }
          ]
        },
        "choiceOptions": {
          "title": "Choice options",
          "description": "Choice Options or expression which provides Choice Options to control display choices to the user.",
          "oneOf": [
            {
              "type": "object",
              "title": "Choice options",
              "description": "Choice options.",
              "properties": {
                "inlineSeparator": {
                  "type": "string",
                  "title": "Inline separator",
                  "description": "Text to separate individual choices when there are more than 2 choices",
                  "default": ", "
                },
                "inlineOr": {
                  "type": "string",
                  "title": "Inline or",
                  "description": "Text to be inserted between the choices when their are only 2 choices",
                  "default": " or "
                },
                "inlineOrMore": {
                  "type": "string",
                  "title": "Inline or more",
                  "description": "Text to be inserted between the last 2 choices when their are more than 2 choices.",
                  "default": ", or "
                },
                "includeNumbers": {
                  "type": "boolean",
                  "title": "Include numbers",
                  "description": "If true, inline and list style choices will be prefixed with the index of the choice.",
                  "default": true
                }
              }
            },
            {
              "$ref": "#/definitions/equalsExpression"
            }
          ]
        },
        "defaultValue": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Default value",
          "description": "'Property' will be set to the value of this expression when max turn count is exceeded.",
          "examples": [
            true,
            "=user.age > 3"
          ]
        },
        "value": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Value",
          "description": "'Property' will be set to the value of this expression unless it evaluates to null.",
          "examples": [
            true,
            "=user.isVip"
          ]
        },
        "confirmChoices": {
          "$role": "expression",
          "title": "Array of choice objects",
          "description": "Array of simple or structured choices.",
          "oneOf": [
            {
              "type": "array",
              "title": "Simple choices",
              "description": "Simple choices to confirm from.",
              "items": [
                {
                  "type": "string",
                  "title": "Simple choice",
                  "description": "Simple choice to confirm."
                }
              ]
            },
            {
              "type": "array",
              "title": "Structured choices",
              "description": "Structured choices for confirmations.",
              "items": [
                {
                  "type": "object",
                  "title": "Choice",
                  "description": "Choice to confirm.",
                  "properties": {
                    "value": {
                      "type": "string",
                      "title": "Value",
                      "description": "Value to return when this choice is selected."
                    },
                    "action": {
                      "$ref": "#/definitions/botframework.json/definitions/CardAction",
                      "title": "Action",
                      "description": "Card action for the choice."
                    },
                    "synonyms": {
                      "type": "array",
                      "title": "Synonyms",
                      "description": "List of synonyms to recognize in addition to the value (optional).",
                      "items": {
                        "type": "string",
                        "title": "Synonym",
                        "description": "Synonym for choice."
                      }
                    }
                  }
                }
              ]
            },
            {
              "$ref": "#/definitions/equalsExpression"
            }
          ]
        },
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the dialog"
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action.",
          "default": false,
          "examples": [
            false,
            "=user.isVip"
          ]
        },
        "prompt": {
          "$kind": "Microsoft.IActivityTemplate",
          "title": "Initial prompt",
          "description": "Message to send to collect information.",
          "examples": [
            "What is your birth date?"
          ],
          "$ref": "#/definitions/Microsoft.IActivityTemplate"
        },
        "unrecognizedPrompt": {
          "$kind": "Microsoft.IActivityTemplate",
          "title": "Unrecognized prompt",
          "description": "Message to send when max turn count (if specified) has been exceeded and the default value is selected as the value.",
          "examples": [
            "Sorry, I'm having trouble understanding you. I will just use {this.options.defaultValue} for now. You can say 'I'm 36 years old' to change it."
          ],
          "$ref": "#/definitions/Microsoft.IActivityTemplate"
        },
        "invalidPrompt": {
          "$kind": "Microsoft.IActivityTemplate",
          "title": "Invalid prompt",
          "description": "Message to send when the user input does not meet any validation expression.",
          "examples": [
            "Sorry, '{this.value}' does not work. I need a number between 1-150. What is your age?"
          ],
          "$ref": "#/definitions/Microsoft.IActivityTemplate"
        },
        "defaultValueResponse": {
          "$kind": "Microsoft.IActivityTemplate",
          "title": "Default value response",
          "description": "Message to send when max turn count (if specified) has been exceeded and the default value is selected as the value.",
          "examples": [
            "Sorry, I'm having trouble understanding you. I will just use {this.options.defaultValue} for now. You can say 'I'm 36 years old' to change it."
          ],
          "$ref": "#/definitions/Microsoft.IActivityTemplate"
        },
        "maxTurnCount": {
          "$ref": "#/definitions/integerExpression",
          "title": "Max turn count",
          "description": "Maximum number of re-prompt attempts to collect information.",
          "default": 3,
          "examples": [
            3,
            "=settings.xyz"
          ]
        },
        "validations": {
          "type": "array",
          "title": "Validation expressions",
          "description": "Expression to validate user input.",
          "items": {
            "$ref": "#/definitions/condition",
            "title": "Condition",
            "description": "Expression which needs to met for the input to be considered valid",
            "examples": [
              "int(this.value) > 1 && int(this.value) <= 150",
              "count(this.value) < 300"
            ]
          }
        },
        "property": {
          "$ref": "#/definitions/stringExpression",
          "title": "Property",
          "description": "Property to store collected information. Input will be skipped if property has value (unless 'Always prompt' is true).",
          "examples": [
            "$birthday",
            "dialog.${user.name}",
            "=f(x)"
          ]
        },
        "alwaysPrompt": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Always prompt",
          "description": "Collect information even if the specified 'property' is not empty.",
          "default": false,
          "examples": [
            false,
            "=$val"
          ]
        },
        "allowInterruptions": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Allow Interruptions",
          "description": "A boolean expression that determines whether the parent should be allowed to interrupt the input.",
          "default": true,
          "examples": [
            true,
            "=user.xyz"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.ConfirmInput"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.ConfirmationEntityRecognizer": {
      "$role": [
        "implements(Microsoft.IRecognizer)",
        "implements(Microsoft.IEntityRecognizer)"
      ],
      "title": "Confirmation entity recognizer",
      "description": "Recognizer which recognizes confirmation choices (yes/no).",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.ConfirmationEntityRecognizer"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.ContinueConversationLater": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Continue conversation later (Queue)",
      "description": "Continue conversation at later time (via Azure Storage Queue).",
      "type": "object",
      "required": [
        "date",
        "connectionString",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the dialog"
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action.",
          "examples": [
            "user.age > 3"
          ]
        },
        "date": {
          "$ref": "#/definitions/stringExpression",
          "title": "Date",
          "description": "Date in the future as a ISO string when the conversation should continue.",
          "examples": [
            "=addHours(utcNow(), 1)"
          ]
        },
        "value": {
          "$ref": "#/definitions/valueExpression",
          "title": "Value",
          "description": "Value to send in the activity.value."
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.ContinueConversationLater"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.ContinueLoop": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Continue loop",
      "description": "Stop executing this template and continue with the next iteration of the loop.",
      "type": "object",
      "required": [
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the dialog"
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action.",
          "examples": [
            "user.age > 3"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.ContinueLoop"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.CrossTrainedRecognizerSet": {
      "$role": "implements(Microsoft.IRecognizer)",
      "title": "Cross-trained recognizer set",
      "description": "Recognizer for selecting between cross trained recognizers.",
      "type": "object",
      "required": [
        "recognizers",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional unique id using with RecognizerSet."
        },
        "recognizers": {
          "type": "array",
          "title": "Recognizers",
          "description": "List of Recognizers defined for this set.",
          "items": {
            "$kind": "Microsoft.IRecognizer",
            "$ref": "#/definitions/Microsoft.IRecognizer"
          }
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.CrossTrainedRecognizerSet"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.CurrencyEntityRecognizer": {
      "$role": [
        "implements(Microsoft.IRecognizer)",
        "implements(Microsoft.IEntityRecognizer)"
      ],
      "title": "Currency entity recognizer",
      "description": "Recognizer which recognizes currency.",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.CurrencyEntityRecognizer"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.DateTimeEntityRecognizer": {
      "$role": [
        "implements(Microsoft.IRecognizer)",
        "implements(Microsoft.IEntityRecognizer)"
      ],
      "title": "Date and time entity recognizer",
      "description": "Recognizer which recognizes dates and time fragments.",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.DateTimeEntityRecognizer"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.DateTimeInput": {
      "$role": [
        "implements(Microsoft.IDialog)",
        "extends(Microsoft.InputDialog)"
      ],
      "title": "Date/time input dialog",
      "description": "Collect information - Ask for date and/ or time",
      "type": "object",
      "defaultLocale": {
        "$ref": "#/definitions/stringExpression",
        "title": "Default locale",
        "description": "Default locale.",
        "default": "en-us"
      },
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "defaultValue": {
          "$ref": "#/definitions/stringExpression",
          "format": "date-time",
          "title": "Default date",
          "description": "'Property' will be set to the value or the result of the expression when max turn count is exceeded.",
          "examples": [
            "=user.birthday"
          ]
        },
        "value": {
          "$ref": "#/definitions/stringExpression",
          "format": "date-time",
          "title": "Value",
          "description": "'Property' will be set to the value or the result of the expression unless it evaluates to null.",
          "examples": [
            "=user.birthday"
          ]
        },
        "outputFormat": {
          "$ref": "#/definitions/expression",
          "title": "Output format",
          "description": "Expression to use for formatting the output.",
          "examples": [
            "=this.value[0].Value"
          ]
        },
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the dialog"
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action.",
          "default": false,
          "examples": [
            false,
            "=user.isVip"
          ]
        },
        "prompt": {
          "$kind": "Microsoft.IActivityTemplate",
          "title": "Initial prompt",
          "description": "Message to send to collect information.",
          "examples": [
            "What is your birth date?"
          ],
          "$ref": "#/definitions/Microsoft.IActivityTemplate"
        },
        "unrecognizedPrompt": {
          "$kind": "Microsoft.IActivityTemplate",
          "title": "Unrecognized prompt",
          "description": "Message to send when max turn count (if specified) has been exceeded and the default value is selected as the value.",
          "examples": [
            "Sorry, I'm having trouble understanding you. I will just use {this.options.defaultValue} for now. You can say 'I'm 36 years old' to change it."
          ],
          "$ref": "#/definitions/Microsoft.IActivityTemplate"
        },
        "invalidPrompt": {
          "$kind": "Microsoft.IActivityTemplate",
          "title": "Invalid prompt",
          "description": "Message to send when the user input does not meet any validation expression.",
          "examples": [
            "Sorry, '{this.value}' does not work. I need a number between 1-150. What is your age?"
          ],
          "$ref": "#/definitions/Microsoft.IActivityTemplate"
        },
        "defaultValueResponse": {
          "$kind": "Microsoft.IActivityTemplate",
          "title": "Default value response",
          "description": "Message to send when max turn count (if specified) has been exceeded and the default value is selected as the value.",
          "examples": [
            "Sorry, I'm having trouble understanding you. I will just use {this.options.defaultValue} for now. You can say 'I'm 36 years old' to change it."
          ],
          "$ref": "#/definitions/Microsoft.IActivityTemplate"
        },
        "maxTurnCount": {
          "$ref": "#/definitions/integerExpression",
          "title": "Max turn count",
          "description": "Maximum number of re-prompt attempts to collect information.",
          "default": 3,
          "examples": [
            3,
            "=settings.xyz"
          ]
        },
        "validations": {
          "type": "array",
          "title": "Validation expressions",
          "description": "Expression to validate user input.",
          "items": {
            "$ref": "#/definitions/condition",
            "title": "Condition",
            "description": "Expression which needs to met for the input to be considered valid",
            "examples": [
              "int(this.value) > 1 && int(this.value) <= 150",
              "count(this.value) < 300"
            ]
          }
        },
        "property": {
          "$ref": "#/definitions/stringExpression",
          "title": "Property",
          "description": "Property to store collected information. Input will be skipped if property has value (unless 'Always prompt' is true).",
          "examples": [
            "$birthday",
            "dialog.${user.name}",
            "=f(x)"
          ]
        },
        "alwaysPrompt": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Always prompt",
          "description": "Collect information even if the specified 'property' is not empty.",
          "default": false,
          "examples": [
            false,
            "=$val"
          ]
        },
        "allowInterruptions": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Allow Interruptions",
          "description": "A boolean expression that determines whether the parent should be allowed to interrupt the input.",
          "default": true,
          "examples": [
            true,
            "=user.xyz"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.DateTimeInput"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.DebugBreak": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Debugger break",
      "description": "If debugger is attached, stop the execution at this point in the conversation.",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the dialog"
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action.",
          "examples": [
            "user.age > 3"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.DebugBreak"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.DeleteActivity": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Delete Activity",
      "description": "Delete an activity that was previously sent.",
      "type": "object",
      "required": [
        "activityId",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the dialog"
        },
        "activityId": {
          "$ref": "#/definitions/stringExpression",
          "title": "ActivityId",
          "description": "expression to an activityId to delete",
          "examples": [
            "=$lastActivity"
          ]
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action.",
          "examples": [
            "user.age > 3"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.DeleteActivity"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.DeleteProperties": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Delete Properties",
      "description": "Delete multiple properties and any value it holds.",
      "type": "object",
      "required": [
        "properties",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the dialog"
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action.",
          "examples": [
            "user.age > 3"
          ]
        },
        "properties": {
          "type": "array",
          "title": "Properties",
          "description": "Properties to delete.",
          "items": {
            "$ref": "#/definitions/stringExpression",
            "title": "Property",
            "description": "Property to delete."
          }
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.DeleteProperties"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.DeleteProperty": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Delete property",
      "description": "Delete a property and any value it holds.",
      "type": "object",
      "required": [
        "property",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the dialog"
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action.",
          "examples": [
            "user.age > 3"
          ]
        },
        "property": {
          "$ref": "#/definitions/stringExpression",
          "title": "Property",
          "description": "Property to delete."
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.DeleteProperty"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.DimensionEntityRecognizer": {
      "$role": [
        "implements(Microsoft.IRecognizer)",
        "implements(Microsoft.IEntityRecognizer)"
      ],
      "title": "Dimension entity recognizer",
      "description": "Recognizer which recognizes dimension.",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.DimensionEntityRecognizer"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.EditActions": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Edit actions.",
      "description": "Edit the current list of actions.",
      "type": "object",
      "required": [
        "changeType",
        "actions",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the dialog"
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action.",
          "examples": [
            "user.age > 3"
          ]
        },
        "changeType": {
          "title": "Type of change",
          "description": "Type of change to apply to the current actions.",
          "oneOf": [
            {
              "type": "string",
              "title": "Standard change",
              "description": "Standard change types.",
              "enum": [
                "insertActions",
                "insertActionsBeforeTags",
                "appendActions",
                "endSequence",
                "replaceSequence"
              ]
            },
            {
              "$ref": "#/definitions/equalsExpression"
            }
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Actions to apply.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.EditActions"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.EditArray": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Edit array",
      "description": "Modify an array in memory",
      "type": "object",
      "required": [
        "itemsProperty",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the dialog"
        },
        "changeType": {
          "title": "Type of change",
          "description": "Type of change to the array in memory.",
          "oneOf": [
            {
              "type": "string",
              "title": "Change type",
              "description": "Standard change type.",
              "enum": [
                "push",
                "pop",
                "take",
                "remove",
                "clear"
              ]
            },
            {
              "$ref": "#/definitions/equalsExpression"
            }
          ]
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action.",
          "examples": [
            "user.age > 3"
          ]
        },
        "itemsProperty": {
          "$ref": "#/definitions/stringExpression",
          "title": "Items property",
          "description": "Property that holds the array to update."
        },
        "resultProperty": {
          "$ref": "#/definitions/stringExpression",
          "title": "Result property",
          "description": "Property to store the result of this action."
        },
        "value": {
          "$ref": "#/definitions/valueExpression",
          "title": "Value",
          "description": "New value or expression.",
          "examples": [
            "milk",
            "=dialog.favColor",
            "=dialog.favColor == 'red'"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.EditArray"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.EmailEntityRecognizer": {
      "$role": [
        "implements(Microsoft.IRecognizer)",
        "implements(Microsoft.IEntityRecognizer)"
      ],
      "title": "Email entity recognizer",
      "description": "Recognizer which recognizes email.",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.EmailEntityRecognizer"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.EmitEvent": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Emit a custom event",
      "description": "Emit an event. Capture this event with a trigger.",
      "type": "object",
      "required": [
        "eventName",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the dialog"
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action.",
          "examples": [
            "user.age > 3"
          ]
        },
        "eventName": {
          "$role": "expression",
          "title": "Event name",
          "description": "Name of the event to emit.",
          "oneOf": [
            {
              "type": "string",
              "title": "Built-in event",
              "description": "Standard event type.",
              "enum": [
                "beginDialog",
                "resumeDialog",
                "repromptDialog",
                "cancelDialog",
                "endDialog",
                "activityReceived",
                "recognizedIntent",
                "unknownIntent",
                "actionsStarted",
                "actionsSaved",
                "actionsEnded",
                "actionsResumed"
              ]
            },
            {
              "type": "string",
              "title": "Custom event",
              "description": "Custom event type",
              "pattern": "^(?!(beginDialog$|resumeDialog$|repromptDialog$|cancelDialog$|endDialog$|activityReceived$|recognizedIntent$|unknownIntent$|actionsStarted$|actionsSaved$|actionsEnded$|actionsResumed))(\\S){1}.*"
            },
            {
              "$ref": "#/definitions/equalsExpression"
            }
          ]
        },
        "eventValue": {
          "$ref": "#/definitions/valueExpression",
          "title": "Event value",
          "description": "Value to emit with the event (optional)."
        },
        "bubbleEvent": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Bubble event",
          "description": "If true this event is passed on to parent dialogs."
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.EmitEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.EndDialog": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "End dialog",
      "description": "End this dialog.",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the dialog"
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action.",
          "examples": [
            "user.age > 3"
          ]
        },
        "value": {
          "$ref": "#/definitions/valueExpression",
          "title": "Value",
          "description": "Result value returned to the parent dialog.",
          "examples": [
            "=dialog.userName",
            "='tomato'"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.EndDialog"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.EndTurn": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "End turn",
      "description": "End the current turn without ending the dialog.",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the dialog"
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action.",
          "examples": [
            "user.age > 3"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.EndTurn"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.FirstSelector": {
      "$role": "implements(Microsoft.ITriggerSelector)",
      "title": "First trigger selector",
      "description": "Selector for first true rule",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.FirstSelector"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.Foreach": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "For each item",
      "description": "Execute actions on each item in an a collection.",
      "type": "object",
      "required": [
        "itemsProperty",
        "actions",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the dialog"
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action.",
          "examples": [
            "user.age > 3"
          ]
        },
        "itemsProperty": {
          "$ref": "#/definitions/stringExpression",
          "title": "Items property",
          "description": "Property that holds the array.",
          "examples": [
            "user.todoList"
          ]
        },
        "index": {
          "$ref": "#/definitions/stringExpression",
          "title": "Index property",
          "description": "Property that holds the index of the item.",
          "default": "dialog.foreach.index"
        },
        "value": {
          "$ref": "#/definitions/stringExpression",
          "title": "Value property",
          "description": "Property that holds the value of the item.",
          "default": "dialog.foreach.value"
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Actions to execute for each item. Use '$foreach.value' to access the value of each item. Use '$foreach.index' to access the index of each item.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.Foreach"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.ForeachPage": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "For each page",
      "description": "Execute actions on each page (collection of items) in an array.",
      "type": "object",
      "required": [
        "itemsProperty",
        "actions",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the dialog"
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action.",
          "examples": [
            "user.age > 3"
          ]
        },
        "itemsProperty": {
          "$ref": "#/definitions/stringExpression",
          "title": "Items property",
          "description": "Property that holds the array.",
          "examples": [
            "user.todoList"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Actions to execute for each page. Use '$foreach.page' to access each page.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "pageIndex": {
          "$ref": "#/definitions/stringExpression",
          "title": "Index property",
          "description": "Property that holds the index of the page.",
          "default": "dialog.foreach.pageindex"
        },
        "page": {
          "$ref": "#/definitions/stringExpression",
          "title": "Page property",
          "description": "Property that holds the value of the page.",
          "default": "dialog.foreach.page"
        },
        "pageSize": {
          "$ref": "#/definitions/integerExpression",
          "title": "Page size",
          "description": "Number of items in each page.",
          "default": 10
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.ForeachPage"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.GetActivityMembers": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get activity members",
      "description": "Get the members who are participating in an activity. (BotFrameworkAdapter only)",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the dialog"
        },
        "property": {
          "$ref": "#/definitions/stringExpression",
          "title": "Property",
          "description": "Property (named location to store information).",
          "examples": [
            "user.age"
          ]
        },
        "activityId": {
          "$ref": "#/definitions/stringExpression",
          "title": "Activity Id",
          "description": "Activity ID or expression to an activityId to use to get the members. If none is defined then the current activity id will be used.",
          "examples": [
            "$lastActivity"
          ]
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action.",
          "examples": [
            "user.age > 3"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.GetActivityMembers"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.GetConversationMembers": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Get conversation members",
      "description": "Get the members who are participating in an conversation. (BotFrameworkAdapter only)",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the dialog"
        },
        "property": {
          "$ref": "#/definitions/stringExpression",
          "title": "Property",
          "description": "Property (named location to store information).",
          "examples": [
            "user.age"
          ]
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action.",
          "examples": [
            "user.age > 3"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.GetConversationMembers"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.GotoAction": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Go to action",
      "description": "Go to an an action by id.",
      "type": "object",
      "required": [
        "actionId",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the dialog"
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action.",
          "examples": [
            "user.age > 3"
          ]
        },
        "actionId": {
          "$ref": "#/definitions/stringExpression",
          "title": "Action Id",
          "description": "Action Id to execute next"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.GotoAction"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.GuidEntityRecognizer": {
      "$role": [
        "implements(Microsoft.IRecognizer)",
        "implements(Microsoft.IEntityRecognizer)"
      ],
      "title": "Guid entity recognizer",
      "description": "Recognizer which recognizes guids.",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.GuidEntityRecognizer"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.HashtagEntityRecognizer": {
      "$role": [
        "implements(Microsoft.IRecognizer)",
        "implements(Microsoft.IEntityRecognizer)"
      ],
      "title": "Hashtag entity recognizer",
      "description": "Recognizer which recognizes Hashtags.",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.HashtagEntityRecognizer"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.HttpRequest": {
      "$role": "implements(Microsoft.IDialog)",
      "type": "object",
      "title": "HTTP request",
      "description": "Make a HTTP request.",
      "required": [
        "url",
        "method",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the dialog"
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action.",
          "examples": [
            "user.age > 3"
          ]
        },
        "method": {
          "type": "string",
          "title": "HTTP method",
          "description": "HTTP method to use.",
          "enum": [
            "GET",
            "POST",
            "PATCH",
            "PUT",
            "DELETE"
          ],
          "examples": [
            "GET",
            "POST"
          ]
        },
        "url": {
          "$ref": "#/definitions/stringExpression",
          "title": "Url",
          "description": "URL to call (supports data binding).",
          "examples": [
            "https://contoso.com"
          ]
        },
        "body": {
          "$ref": "#/definitions/valueExpression",
          "title": "Body",
          "description": "Body to include in the HTTP call (supports data binding).",
          "additionalProperties": true
        },
        "resultProperty": {
          "$ref": "#/definitions/stringExpression",
          "title": "Result property",
          "description": "A property to store the result of this action. The result can include any of the 4 properties from the HTTP response: statusCode, reasonPhrase, content, and headers. If the content is JSON it will be a deserialized object. The values can be accessed via .content for example.",
          "examples": [
            "dialog.contosodata"
          ]
        },
        "contentType": {
          "$ref": "#/definitions/stringExpression",
          "title": "Content type",
          "description": "Content media type for the body.",
          "examples": [
            "application/json",
            "text/plain"
          ]
        },
        "headers": {
          "type": "object",
          "title": "Headers",
          "description": "One or more headers to include in the request (supports data binding).",
          "additionalProperties": {
            "$ref": "#/definitions/stringExpression"
          }
        },
        "responseType": {
          "$ref": "#/definitions/stringExpression",
          "title": "Response type",
          "description": "Defines the type of HTTP response. Automatically calls the 'Send a response' action if set to 'Activity' or 'Activities'.",
          "oneOf": [
            {
              "type": "string",
              "title": "Standard response",
              "description": "Standard response type.",
              "enum": [
                "none",
                "json",
                "activity",
                "activities",
                "binary"
              ],
              "default": "json"
            },
            {
              "$ref": "#/definitions/equalsExpression"
            }
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.HttpRequest"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.IActivityTemplate": {
      "title": "Microsoft ActivityTemplates",
      "description": "Components which are ActivityTemplate, which is string template, an activity, or a implementation of ActivityTemplate",
      "$role": "interface",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "#/definitions/botframework.json/definitions/Activity",
          "required": [
            "type"
          ]
        },
        {
          "$ref": "#/definitions/Microsoft.ActivityTemplate"
        },
        {
          "$ref": "#/definitions/Microsoft.StaticActivityTemplate"
        }
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Declarative",
        "version": "4.11.0"
      }
    },
    "Microsoft.IDialog": {
      "title": "Microsoft dialogs",
      "description": "Components which derive from Dialog",
      "$role": "interface",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "#/definitions/GitHub.Activity.Events.GetAll"
        },
        {
          "$ref": "#/definitions/GitHub.Activity.Events.GetAllForAnOrganization"
        },
        {
          "$ref": "#/definitions/GitHub.Activity.Events.GetAllForOrganization"
        },
        {
          "$ref": "#/definitions/GitHub.Activity.Events.GetAllForRepository"
        },
        {
          "$ref": "#/definitions/GitHub.Activity.Events.GetAllForRepositoryNetwork"
        },
        {
          "$ref": "#/definitions/GitHub.Activity.Events.GetAllIssuesForRepository"
        },
        {
          "$ref": "#/definitions/GitHub.Activity.Events.GetAllUserPerformed"
        },
        {
          "$ref": "#/definitions/GitHub.Activity.Events.GetAllUserPerformedPublic"
        },
        {
          "$ref": "#/definitions/GitHub.Activity.Events.GetAllUserReceived"
        },
        {
          "$ref": "#/definitions/GitHub.Activity.Events.GetAllUserReceivedPublic"
        },
        {
          "$ref": "#/definitions/GitHub.Activity.Feeds.GetFeeds"
        },
        {
          "$ref": "#/definitions/GitHub.Activity.Notifications.DeleteThreadSubscription"
        },
        {
          "$ref": "#/definitions/GitHub.Activity.Notifications.Get"
        },
        {
          "$ref": "#/definitions/GitHub.Activity.Notifications.GetAllForCurrent"
        },
        {
          "$ref": "#/definitions/GitHub.Activity.Notifications.GetAllForRepository"
        },
        {
          "$ref": "#/definitions/GitHub.Activity.Notifications.GetThreadSubscription"
        },
        {
          "$ref": "#/definitions/GitHub.Activity.Notifications.MarkAsRead"
        },
        {
          "$ref": "#/definitions/GitHub.Activity.Notifications.MarkAsReadForRepository"
        },
        {
          "$ref": "#/definitions/GitHub.Activity.Notifications.SetThreadSubscription"
        },
        {
          "$ref": "#/definitions/GitHub.Activity.Starring.CheckStarred"
        },
        {
          "$ref": "#/definitions/GitHub.Activity.Starring.GetAllForCurrent"
        },
        {
          "$ref": "#/definitions/GitHub.Activity.Starring.GetAllForCurrentWithTimestamps"
        },
        {
          "$ref": "#/definitions/GitHub.Activity.Starring.GetAllForUser"
        },
        {
          "$ref": "#/definitions/GitHub.Activity.Starring.GetAllForUserWithTimestamps"
        },
        {
          "$ref": "#/definitions/GitHub.Activity.Starring.GetAllStargazers"
        },
        {
          "$ref": "#/definitions/GitHub.Activity.Starring.GetAllStargazersWithTimestamps"
        },
        {
          "$ref": "#/definitions/GitHub.Activity.Starring.RemoveStarFromRepo"
        },
        {
          "$ref": "#/definitions/GitHub.Activity.Starring.StarRepo"
        },
        {
          "$ref": "#/definitions/GitHub.Activity.Watching.CheckWatched"
        },
        {
          "$ref": "#/definitions/GitHub.Activity.Watching.GetAllForCurrent"
        },
        {
          "$ref": "#/definitions/GitHub.Activity.Watching.GetAllForUser"
        },
        {
          "$ref": "#/definitions/GitHub.Activity.Watching.GetAllWatchers"
        },
        {
          "$ref": "#/definitions/GitHub.Activity.Watching.UnwatchRepo"
        },
        {
          "$ref": "#/definitions/GitHub.Activity.Watching.WatchRepo"
        },
        {
          "$ref": "#/definitions/GitHub.Check.Run.Create"
        },
        {
          "$ref": "#/definitions/GitHub.Check.Run.Get"
        },
        {
          "$ref": "#/definitions/GitHub.Check.Run.GetAllAnnotations"
        },
        {
          "$ref": "#/definitions/GitHub.Check.Run.GetAllForCheckSuite"
        },
        {
          "$ref": "#/definitions/GitHub.Check.Run.GetAllForReference"
        },
        {
          "$ref": "#/definitions/GitHub.Check.Run.Update"
        },
        {
          "$ref": "#/definitions/GitHub.Check.Suite.Create"
        },
        {
          "$ref": "#/definitions/GitHub.Check.Suite.Get"
        },
        {
          "$ref": "#/definitions/GitHub.Check.Suite.GetAllForReference"
        },
        {
          "$ref": "#/definitions/GitHub.Check.Suite.Rerequest"
        },
        {
          "$ref": "#/definitions/GitHub.Check.Suite.UpdatePreferences"
        },
        {
          "$ref": "#/definitions/GitHub.Enterprise.AdminStats.GetStatisticsAll"
        },
        {
          "$ref": "#/definitions/GitHub.Enterprise.AdminStats.GetStatisticsComments"
        },
        {
          "$ref": "#/definitions/GitHub.Enterprise.AdminStats.GetStatisticsGists"
        },
        {
          "$ref": "#/definitions/GitHub.Enterprise.AdminStats.GetStatisticsHooks"
        },
        {
          "$ref": "#/definitions/GitHub.Enterprise.AdminStats.GetStatisticsIssues"
        },
        {
          "$ref": "#/definitions/GitHub.Enterprise.AdminStats.GetStatisticsMilestones"
        },
        {
          "$ref": "#/definitions/GitHub.Enterprise.AdminStats.GetStatisticsOrgs"
        },
        {
          "$ref": "#/definitions/GitHub.Enterprise.AdminStats.GetStatisticsPages"
        },
        {
          "$ref": "#/definitions/GitHub.Enterprise.AdminStats.GetStatisticsPulls"
        },
        {
          "$ref": "#/definitions/GitHub.Enterprise.AdminStats.GetStatisticsRepos"
        },
        {
          "$ref": "#/definitions/GitHub.Enterprise.AdminStats.GetStatisticsUsers"
        },
        {
          "$ref": "#/definitions/GitHub.Enterprise.Ldap.QueueSyncTeamMapping"
        },
        {
          "$ref": "#/definitions/GitHub.Enterprise.Ldap.QueueSyncUserMapping"
        },
        {
          "$ref": "#/definitions/GitHub.Enterprise.Ldap.UpdateTeamMapping"
        },
        {
          "$ref": "#/definitions/GitHub.Enterprise.Ldap.UpdateUserMapping"
        },
        {
          "$ref": "#/definitions/GitHub.Enterprise.License.Get"
        },
        {
          "$ref": "#/definitions/GitHub.Enterprise.ManagementConsole.EditMaintenanceMode"
        },
        {
          "$ref": "#/definitions/GitHub.Enterprise.ManagementConsole.GetMaintenanceMode"
        },
        {
          "$ref": "#/definitions/GitHub.Enterprise.Organization.Create"
        },
        {
          "$ref": "#/definitions/GitHub.Enterprise.PreReceiveEnvironment.Create"
        },
        {
          "$ref": "#/definitions/GitHub.Enterprise.PreReceiveEnvironment.Delete"
        },
        {
          "$ref": "#/definitions/GitHub.Enterprise.PreReceiveEnvironment.DownloadStatus"
        },
        {
          "$ref": "#/definitions/GitHub.Enterprise.PreReceiveEnvironment.Edit"
        },
        {
          "$ref": "#/definitions/GitHub.Enterprise.PreReceiveEnvironment.Get"
        },
        {
          "$ref": "#/definitions/GitHub.Enterprise.PreReceiveEnvironment.GetAll"
        },
        {
          "$ref": "#/definitions/GitHub.Enterprise.PreReceiveEnvironment.TriggerDownload"
        },
        {
          "$ref": "#/definitions/GitHub.Enterprise.SearchIndexing.Queue"
        },
        {
          "$ref": "#/definitions/GitHub.Enterprise.SearchIndexing.QueueAll"
        },
        {
          "$ref": "#/definitions/GitHub.Enterprise.SearchIndexing.QueueAllCode"
        },
        {
          "$ref": "#/definitions/GitHub.Enterprise.SearchIndexing.QueueAllIssues"
        },
        {
          "$ref": "#/definitions/GitHub.Gist.Comment.Create"
        },
        {
          "$ref": "#/definitions/GitHub.Gist.Comment.Delete"
        },
        {
          "$ref": "#/definitions/GitHub.Gist.Comment.Get"
        },
        {
          "$ref": "#/definitions/GitHub.Gist.Comment.GetAllForGist"
        },
        {
          "$ref": "#/definitions/GitHub.Gist.Comment.Update"
        },
        {
          "$ref": "#/definitions/GitHub.Gist.Create"
        },
        {
          "$ref": "#/definitions/GitHub.Gist.Delete"
        },
        {
          "$ref": "#/definitions/GitHub.Gist.Edit"
        },
        {
          "$ref": "#/definitions/GitHub.Gist.Fork"
        },
        {
          "$ref": "#/definitions/GitHub.Gist.Get"
        },
        {
          "$ref": "#/definitions/GitHub.Gist.GetAll"
        },
        {
          "$ref": "#/definitions/GitHub.Gist.GetAllCommits"
        },
        {
          "$ref": "#/definitions/GitHub.Gist.GetAllForks"
        },
        {
          "$ref": "#/definitions/GitHub.Gist.GetAllForUser"
        },
        {
          "$ref": "#/definitions/GitHub.Gist.GetAllPublic"
        },
        {
          "$ref": "#/definitions/GitHub.Gist.GetAllStarred"
        },
        {
          "$ref": "#/definitions/GitHub.Gist.IsStarred"
        },
        {
          "$ref": "#/definitions/GitHub.Gist.Star"
        },
        {
          "$ref": "#/definitions/GitHub.Gist.Unstar"
        },
        {
          "$ref": "#/definitions/GitHub.Git.Blob.Create"
        },
        {
          "$ref": "#/definitions/GitHub.Git.Blob.Get"
        },
        {
          "$ref": "#/definitions/GitHub.Git.Commit.Create"
        },
        {
          "$ref": "#/definitions/GitHub.Git.Commit.Get"
        },
        {
          "$ref": "#/definitions/GitHub.Git.Reference.Create"
        },
        {
          "$ref": "#/definitions/GitHub.Git.Reference.Delete"
        },
        {
          "$ref": "#/definitions/GitHub.Git.Reference.Get"
        },
        {
          "$ref": "#/definitions/GitHub.Git.Reference.GetAll"
        },
        {
          "$ref": "#/definitions/GitHub.Git.Reference.GetAllForSubNamespace"
        },
        {
          "$ref": "#/definitions/GitHub.Git.Reference.Update"
        },
        {
          "$ref": "#/definitions/GitHub.Git.Tag.Create"
        },
        {
          "$ref": "#/definitions/GitHub.Git.Tag.Get"
        },
        {
          "$ref": "#/definitions/GitHub.Git.Tree.Create"
        },
        {
          "$ref": "#/definitions/GitHub.Git.Tree.Get"
        },
        {
          "$ref": "#/definitions/GitHub.Git.Tree.GetRecursive"
        },
        {
          "$ref": "#/definitions/GitHub.GitHubApps.CreateInstallationToken"
        },
        {
          "$ref": "#/definitions/GitHub.GitHubApps.Get"
        },
        {
          "$ref": "#/definitions/GitHub.GitHubApps.GetAllInstallationsForCurrent"
        },
        {
          "$ref": "#/definitions/GitHub.GitHubApps.GetAllInstallationsForCurrentUser"
        },
        {
          "$ref": "#/definitions/GitHub.GitHubApps.GetCurrent"
        },
        {
          "$ref": "#/definitions/GitHub.GitHubApps.GetInstallation"
        },
        {
          "$ref": "#/definitions/GitHub.GitHubApps.GetInstallationForCurrent"
        },
        {
          "$ref": "#/definitions/GitHub.GitHubApps.GetOrganizationInstallationForCurrent"
        },
        {
          "$ref": "#/definitions/GitHub.GitHubApps.GetRepositoryInstallationForCurrent"
        },
        {
          "$ref": "#/definitions/GitHub.GitHubApps.GetUserInstallationForCurrent"
        },
        {
          "$ref": "#/definitions/GitHub.GitHubApps.Installation.GetAllRepositoriesForCurrent"
        },
        {
          "$ref": "#/definitions/GitHub.GitHubApps.Installation.GetAllRepositoriesForCurrentUser"
        },
        {
          "$ref": "#/definitions/GitHub.Issue.Assignee.AddAssignees"
        },
        {
          "$ref": "#/definitions/GitHub.Issue.Assignee.CheckAssignee"
        },
        {
          "$ref": "#/definitions/GitHub.Issue.Assignee.GetAllForRepository"
        },
        {
          "$ref": "#/definitions/GitHub.Issue.Assignee.RemoveAssignees"
        },
        {
          "$ref": "#/definitions/GitHub.Issue.Comment.Create"
        },
        {
          "$ref": "#/definitions/GitHub.Issue.Comment.Delete"
        },
        {
          "$ref": "#/definitions/GitHub.Issue.Comment.Get"
        },
        {
          "$ref": "#/definitions/GitHub.Issue.Comment.GetAllForIssue"
        },
        {
          "$ref": "#/definitions/GitHub.Issue.Comment.GetAllForRepository"
        },
        {
          "$ref": "#/definitions/GitHub.Issue.Comment.Update"
        },
        {
          "$ref": "#/definitions/GitHub.Issue.Create"
        },
        {
          "$ref": "#/definitions/GitHub.Issue.Events.Get"
        },
        {
          "$ref": "#/definitions/GitHub.Issue.Events.GetAllForIssue"
        },
        {
          "$ref": "#/definitions/GitHub.Issue.Events.GetAllForRepository"
        },
        {
          "$ref": "#/definitions/GitHub.Issue.Get"
        },
        {
          "$ref": "#/definitions/GitHub.Issue.GetAllForCurrent"
        },
        {
          "$ref": "#/definitions/GitHub.Issue.GetAllForOrganization"
        },
        {
          "$ref": "#/definitions/GitHub.Issue.GetAllForOwnedAndMemberRepositories"
        },
        {
          "$ref": "#/definitions/GitHub.Issue.GetAllForRepository"
        },
        {
          "$ref": "#/definitions/GitHub.Issue.Labels.AddToIssue"
        },
        {
          "$ref": "#/definitions/GitHub.Issue.Labels.Create"
        },
        {
          "$ref": "#/definitions/GitHub.Issue.Labels.Delete"
        },
        {
          "$ref": "#/definitions/GitHub.Issue.Labels.Get"
        },
        {
          "$ref": "#/definitions/GitHub.Issue.Labels.GetAllForIssue"
        },
        {
          "$ref": "#/definitions/GitHub.Issue.Labels.GetAllForMilestone"
        },
        {
          "$ref": "#/definitions/GitHub.Issue.Labels.GetAllForRepository"
        },
        {
          "$ref": "#/definitions/GitHub.Issue.Labels.RemoveAllFromIssue"
        },
        {
          "$ref": "#/definitions/GitHub.Issue.Labels.RemoveFromIssue"
        },
        {
          "$ref": "#/definitions/GitHub.Issue.Labels.ReplaceAllForIssue"
        },
        {
          "$ref": "#/definitions/GitHub.Issue.Labels.Update"
        },
        {
          "$ref": "#/definitions/GitHub.Issue.Lock"
        },
        {
          "$ref": "#/definitions/GitHub.Issue.Milestone.Create"
        },
        {
          "$ref": "#/definitions/GitHub.Issue.Milestone.Delete"
        },
        {
          "$ref": "#/definitions/GitHub.Issue.Milestone.Get"
        },
        {
          "$ref": "#/definitions/GitHub.Issue.Milestone.GetAllForRepository"
        },
        {
          "$ref": "#/definitions/GitHub.Issue.Milestone.Update"
        },
        {
          "$ref": "#/definitions/GitHub.Issue.Timeline.GetAllForIssue"
        },
        {
          "$ref": "#/definitions/GitHub.Issue.Unlock"
        },
        {
          "$ref": "#/definitions/GitHub.Issue.Update"
        },
        {
          "$ref": "#/definitions/GitHub.Migration.Migrations.DeleteArchive"
        },
        {
          "$ref": "#/definitions/GitHub.Migration.Migrations.Get"
        },
        {
          "$ref": "#/definitions/GitHub.Migration.Migrations.GetAll"
        },
        {
          "$ref": "#/definitions/GitHub.Migration.Migrations.GetArchive"
        },
        {
          "$ref": "#/definitions/GitHub.Migration.Migrations.Start"
        },
        {
          "$ref": "#/definitions/GitHub.Migration.Migrations.UnlockRepository"
        },
        {
          "$ref": "#/definitions/GitHub.Miscellaneous.GetAllEmojis"
        },
        {
          "$ref": "#/definitions/GitHub.Miscellaneous.GetAllGitIgnoreTemplates"
        },
        {
          "$ref": "#/definitions/GitHub.Miscellaneous.GetAllLicenses"
        },
        {
          "$ref": "#/definitions/GitHub.Miscellaneous.GetGitIgnoreTemplate"
        },
        {
          "$ref": "#/definitions/GitHub.Miscellaneous.GetLicense"
        },
        {
          "$ref": "#/definitions/GitHub.Miscellaneous.GetMetadata"
        },
        {
          "$ref": "#/definitions/GitHub.Miscellaneous.GetRateLimits"
        },
        {
          "$ref": "#/definitions/GitHub.Miscellaneous.RenderArbitraryMarkdown"
        },
        {
          "$ref": "#/definitions/GitHub.Miscellaneous.RenderRawMarkdown"
        },
        {
          "$ref": "#/definitions/GitHub.Oauth.CreateAccessToken"
        },
        {
          "$ref": "#/definitions/GitHub.Oauth.GetGitHubLoginUrl"
        },
        {
          "$ref": "#/definitions/GitHub.Organization.Get"
        },
        {
          "$ref": "#/definitions/GitHub.Organization.GetAll"
        },
        {
          "$ref": "#/definitions/GitHub.Organization.GetAllForCurrent"
        },
        {
          "$ref": "#/definitions/GitHub.Organization.GetAllForUser"
        },
        {
          "$ref": "#/definitions/GitHub.Organization.Hook.Create"
        },
        {
          "$ref": "#/definitions/GitHub.Organization.Hook.Delete"
        },
        {
          "$ref": "#/definitions/GitHub.Organization.Hook.Edit"
        },
        {
          "$ref": "#/definitions/GitHub.Organization.Hook.Get"
        },
        {
          "$ref": "#/definitions/GitHub.Organization.Hook.GetAll"
        },
        {
          "$ref": "#/definitions/GitHub.Organization.Hook.Ping"
        },
        {
          "$ref": "#/definitions/GitHub.Organization.Member.AddOrUpdateOrganizationMembership"
        },
        {
          "$ref": "#/definitions/GitHub.Organization.Member.CheckMember"
        },
        {
          "$ref": "#/definitions/GitHub.Organization.Member.CheckMemberPublic"
        },
        {
          "$ref": "#/definitions/GitHub.Organization.Member.Conceal"
        },
        {
          "$ref": "#/definitions/GitHub.Organization.Member.Delete"
        },
        {
          "$ref": "#/definitions/GitHub.Organization.Member.GetAll"
        },
        {
          "$ref": "#/definitions/GitHub.Organization.Member.GetAllPendingInvitations"
        },
        {
          "$ref": "#/definitions/GitHub.Organization.Member.GetAllPublic"
        },
        {
          "$ref": "#/definitions/GitHub.Organization.Member.GetOrganizationMembership"
        },
        {
          "$ref": "#/definitions/GitHub.Organization.Member.Publicize"
        },
        {
          "$ref": "#/definitions/GitHub.Organization.Member.RemoveOrganizationMembership"
        },
        {
          "$ref": "#/definitions/GitHub.Organization.OutsideCollaborator.ConvertFromMember"
        },
        {
          "$ref": "#/definitions/GitHub.Organization.OutsideCollaborator.Delete"
        },
        {
          "$ref": "#/definitions/GitHub.Organization.OutsideCollaborator.GetAll"
        },
        {
          "$ref": "#/definitions/GitHub.Organization.Team.AddOrEditMembership"
        },
        {
          "$ref": "#/definitions/GitHub.Organization.Team.AddRepository"
        },
        {
          "$ref": "#/definitions/GitHub.Organization.Team.Create"
        },
        {
          "$ref": "#/definitions/GitHub.Organization.Team.Delete"
        },
        {
          "$ref": "#/definitions/GitHub.Organization.Team.Get"
        },
        {
          "$ref": "#/definitions/GitHub.Organization.Team.GetAll"
        },
        {
          "$ref": "#/definitions/GitHub.Organization.Team.GetAllChildTeams"
        },
        {
          "$ref": "#/definitions/GitHub.Organization.Team.GetAllForCurrent"
        },
        {
          "$ref": "#/definitions/GitHub.Organization.Team.GetAllMembers"
        },
        {
          "$ref": "#/definitions/GitHub.Organization.Team.GetAllPendingInvitations"
        },
        {
          "$ref": "#/definitions/GitHub.Organization.Team.GetAllRepositories"
        },
        {
          "$ref": "#/definitions/GitHub.Organization.Team.GetMembershipDetails"
        },
        {
          "$ref": "#/definitions/GitHub.Organization.Team.IsRepositoryManagedByTeam"
        },
        {
          "$ref": "#/definitions/GitHub.Organization.Team.RemoveMembership"
        },
        {
          "$ref": "#/definitions/GitHub.Organization.Team.RemoveRepository"
        },
        {
          "$ref": "#/definitions/GitHub.Organization.Team.Update"
        },
        {
          "$ref": "#/definitions/GitHub.Organization.Update"
        },
        {
          "$ref": "#/definitions/GitHub.PullRequest.Commits"
        },
        {
          "$ref": "#/definitions/GitHub.PullRequest.Create"
        },
        {
          "$ref": "#/definitions/GitHub.PullRequest.Files"
        },
        {
          "$ref": "#/definitions/GitHub.PullRequest.Get"
        },
        {
          "$ref": "#/definitions/GitHub.PullRequest.GetAllForRepository"
        },
        {
          "$ref": "#/definitions/GitHub.PullRequest.Merge"
        },
        {
          "$ref": "#/definitions/GitHub.PullRequest.Merged"
        },
        {
          "$ref": "#/definitions/GitHub.PullRequest.Review.Create"
        },
        {
          "$ref": "#/definitions/GitHub.PullRequest.Review.Delete"
        },
        {
          "$ref": "#/definitions/GitHub.PullRequest.Review.Dismiss"
        },
        {
          "$ref": "#/definitions/GitHub.PullRequest.Review.Get"
        },
        {
          "$ref": "#/definitions/GitHub.PullRequest.Review.GetAll"
        },
        {
          "$ref": "#/definitions/GitHub.PullRequest.Review.GetAllComments"
        },
        {
          "$ref": "#/definitions/GitHub.PullRequest.Review.Submit"
        },
        {
          "$ref": "#/definitions/GitHub.PullRequest.ReviewComment.Create"
        },
        {
          "$ref": "#/definitions/GitHub.PullRequest.ReviewComment.CreateReply"
        },
        {
          "$ref": "#/definitions/GitHub.PullRequest.ReviewComment.Delete"
        },
        {
          "$ref": "#/definitions/GitHub.PullRequest.ReviewComment.Edit"
        },
        {
          "$ref": "#/definitions/GitHub.PullRequest.ReviewComment.GetAll"
        },
        {
          "$ref": "#/definitions/GitHub.PullRequest.ReviewComment.GetAllForRepository"
        },
        {
          "$ref": "#/definitions/GitHub.PullRequest.ReviewComment.GetComment"
        },
        {
          "$ref": "#/definitions/GitHub.PullRequest.ReviewRequest.Create"
        },
        {
          "$ref": "#/definitions/GitHub.PullRequest.ReviewRequest.Delete"
        },
        {
          "$ref": "#/definitions/GitHub.PullRequest.ReviewRequest.Get"
        },
        {
          "$ref": "#/definitions/GitHub.PullRequest.Update"
        },
        {
          "$ref": "#/definitions/GitHub.Reaction.CommitComment.Create"
        },
        {
          "$ref": "#/definitions/GitHub.Reaction.CommitComment.GetAll"
        },
        {
          "$ref": "#/definitions/GitHub.Reaction.Delete"
        },
        {
          "$ref": "#/definitions/GitHub.Reaction.Issue.Create"
        },
        {
          "$ref": "#/definitions/GitHub.Reaction.Issue.GetAll"
        },
        {
          "$ref": "#/definitions/GitHub.Reaction.IssueComment.Create"
        },
        {
          "$ref": "#/definitions/GitHub.Reaction.IssueComment.GetAll"
        },
        {
          "$ref": "#/definitions/GitHub.Reaction.PullRequestReviewComment.Create"
        },
        {
          "$ref": "#/definitions/GitHub.Reaction.PullRequestReviewComment.GetAll"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Branch.AddAdminEnforcement"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Branch.AddProtectedBranchTeamRestrictions"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Branch.AddProtectedBranchUserRestrictions"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Branch.AddRequiredStatusChecksContexts"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Branch.DeleteBranchProtection"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Branch.DeleteProtectedBranchRestrictions"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Branch.DeleteProtectedBranchTeamRestrictions"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Branch.DeleteProtectedBranchUserRestrictions"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Branch.DeleteRequiredStatusChecks"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Branch.DeleteRequiredStatusChecksContexts"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Branch.Get"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Branch.GetAdminEnforcement"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Branch.GetAll"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Branch.GetAllProtectedBranchTeamRestrictions"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Branch.GetAllProtectedBranchUserRestrictions"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Branch.GetAllRequiredStatusChecksContexts"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Branch.GetBranchProtection"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Branch.GetProtectedBranchRestrictions"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Branch.GetRequiredStatusChecks"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Branch.GetReviewEnforcement"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Branch.RemoveAdminEnforcement"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Branch.RemoveReviewEnforcement"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Branch.UpdateBranchProtection"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Branch.UpdateProtectedBranchTeamRestrictions"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Branch.UpdateProtectedBranchUserRestrictions"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Branch.UpdateRequiredStatusChecks"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Branch.UpdateRequiredStatusChecksContexts"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Branch.UpdateReviewEnforcement"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Collaborator.Add"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Collaborator.Delete"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Collaborator.GetAll"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Collaborator.Invite"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Collaborator.IsCollaborator"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Collaborator.ReviewPermission"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Comment.Create"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Comment.Delete"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Comment.Get"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Comment.GetAllForCommit"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Comment.GetAllForRepository"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Comment.Update"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Commit.Compare"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Commit.Get"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Commit.GetAll"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Commit.GetSha1"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Content.CreateFile"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Content.DeleteFile"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Content.GetAllContents"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Content.GetAllContentsByRef"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Content.GetArchive"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Content.GetRawContent"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Content.GetRawContentByRef"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Content.GetReadme"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Content.GetReadmeHtml"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Content.UpdateFile"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Create"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Delete"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.DeployKeys.Create"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.DeployKeys.Delete"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.DeployKeys.Get"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.DeployKeys.GetAll"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Deployment.Create"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Deployment.GetAll"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Deployment.Status.Create"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Deployment.Status.GetAll"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Edit"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Forks.Create"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Forks.GetAll"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Get"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.GetAllContributors"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.GetAllForCurrent"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.GetAllForOrg"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.GetAllForUser"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.GetAllLanguages"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.GetAllPublic"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.GetAllTags"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.GetAllTeams"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.GetLicenseContents"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Hooks.Create"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Hooks.Delete"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Hooks.Edit"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Hooks.Get"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Hooks.GetAll"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Hooks.Ping"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Hooks.Test"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Invitation.Accept"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Invitation.Decline"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Invitation.Delete"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Invitation.Edit"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Invitation.GetAllForCurrent"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Invitation.GetAllForRepository"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Merging.Create"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Page.Get"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Page.GetAll"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Page.GetLatest"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Page.RequestPageBuild"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Project.Card.Create"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Project.Card.Delete"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Project.Card.Get"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Project.Card.GetAll"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Project.Card.Move"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Project.Card.Update"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Project.Column.Create"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Project.Column.Delete"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Project.Column.Get"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Project.Column.GetAll"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Project.Column.Move"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Project.Column.Update"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Project.CreateForOrganization"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Project.CreateForRepository"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Project.Delete"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Project.Get"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Project.GetAllForOrganization"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Project.GetAllForRepository"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Project.Update"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.PullRequest.Commits"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.PullRequest.Create"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.PullRequest.Files"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.PullRequest.Get"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.PullRequest.GetAllForRepository"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.PullRequest.Merge"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.PullRequest.Merged"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.PullRequest.Review.Create"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.PullRequest.Review.Delete"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.PullRequest.Review.Dismiss"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.PullRequest.Review.Get"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.PullRequest.Review.GetAll"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.PullRequest.Review.GetAllComments"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.PullRequest.Review.Submit"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.PullRequest.ReviewComment.Create"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.PullRequest.ReviewComment.CreateReply"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.PullRequest.ReviewComment.Delete"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.PullRequest.ReviewComment.Edit"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.PullRequest.ReviewComment.GetAll"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.PullRequest.ReviewComment.GetAllForRepository"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.PullRequest.ReviewComment.GetComment"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.PullRequest.ReviewRequest.Create"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.PullRequest.ReviewRequest.Delete"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.PullRequest.ReviewRequest.Get"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.PullRequest.Update"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Release.Create"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Release.Delete"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Release.DeleteAsset"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Release.Edit"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Release.EditAsset"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Release.Get"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Release.GetAll"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Release.GetAllAssets"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Release.GetAsset"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Release.GetLatest"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Release.UploadAsset"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Statistics.GetCodeFrequency"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Statistics.GetCommitActivity"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Statistics.GetContributors"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Statistics.GetParticipation"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Statistics.GetPunchCard"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Status.Create"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Status.GetAll"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Status.GetCombined"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Traffic.GetAllPaths"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Traffic.GetAllReferrers"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Traffic.GetClones"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Traffic.GetViews"
        },
        {
          "$ref": "#/definitions/GitHub.Repository.Transfer"
        },
        {
          "$ref": "#/definitions/GitHub.Search.SearchCode"
        },
        {
          "$ref": "#/definitions/GitHub.Search.SearchIssues"
        },
        {
          "$ref": "#/definitions/GitHub.Search.SearchLabels"
        },
        {
          "$ref": "#/definitions/GitHub.Search.SearchRepo"
        },
        {
          "$ref": "#/definitions/GitHub.Search.SearchUsers"
        },
        {
          "$ref": "#/definitions/GitHub.User.Administration.Create"
        },
        {
          "$ref": "#/definitions/GitHub.User.Administration.CreateImpersonationToken"
        },
        {
          "$ref": "#/definitions/GitHub.User.Administration.Delete"
        },
        {
          "$ref": "#/definitions/GitHub.User.Administration.DeleteImpersonationToken"
        },
        {
          "$ref": "#/definitions/GitHub.User.Administration.DeletePublicKey"
        },
        {
          "$ref": "#/definitions/GitHub.User.Administration.Demote"
        },
        {
          "$ref": "#/definitions/GitHub.User.Administration.ListAllPublicKeys"
        },
        {
          "$ref": "#/definitions/GitHub.User.Administration.Promote"
        },
        {
          "$ref": "#/definitions/GitHub.User.Administration.Rename"
        },
        {
          "$ref": "#/definitions/GitHub.User.Administration.Suspend"
        },
        {
          "$ref": "#/definitions/GitHub.User.Administration.Unsuspend"
        },
        {
          "$ref": "#/definitions/GitHub.User.Current"
        },
        {
          "$ref": "#/definitions/GitHub.User.Email.Add"
        },
        {
          "$ref": "#/definitions/GitHub.User.Email.Delete"
        },
        {
          "$ref": "#/definitions/GitHub.User.Email.GetAll"
        },
        {
          "$ref": "#/definitions/GitHub.User.Followers.Follow"
        },
        {
          "$ref": "#/definitions/GitHub.User.Followers.GetAll"
        },
        {
          "$ref": "#/definitions/GitHub.User.Followers.GetAllFollowing"
        },
        {
          "$ref": "#/definitions/GitHub.User.Followers.GetAllFollowingForCurrent"
        },
        {
          "$ref": "#/definitions/GitHub.User.Followers.GetAllForCurrent"
        },
        {
          "$ref": "#/definitions/GitHub.User.Followers.IsFollowing"
        },
        {
          "$ref": "#/definitions/GitHub.User.Followers.IsFollowingForCurrent"
        },
        {
          "$ref": "#/definitions/GitHub.User.Followers.Unfollow"
        },
        {
          "$ref": "#/definitions/GitHub.User.Get"
        },
        {
          "$ref": "#/definitions/GitHub.User.GitSshKey.Create"
        },
        {
          "$ref": "#/definitions/GitHub.User.GitSshKey.Delete"
        },
        {
          "$ref": "#/definitions/GitHub.User.GitSshKey.Get"
        },
        {
          "$ref": "#/definitions/GitHub.User.GitSshKey.GetAll"
        },
        {
          "$ref": "#/definitions/GitHub.User.GitSshKey.GetAllForCurrent"
        },
        {
          "$ref": "#/definitions/GitHub.User.GpgKey.Create"
        },
        {
          "$ref": "#/definitions/GitHub.User.GpgKey.Delete"
        },
        {
          "$ref": "#/definitions/GitHub.User.GpgKey.Get"
        },
        {
          "$ref": "#/definitions/GitHub.User.GpgKey.GetAllForCurrent"
        },
        {
          "$ref": "#/definitions/GitHub.User.Update"
        },
        {
          "$ref": "#/definitions/Microsoft.AdaptiveDialog"
        },
        {
          "$ref": "#/definitions/Microsoft.BeginDialog"
        },
        {
          "$ref": "#/definitions/Microsoft.BeginSkill"
        },
        {
          "$ref": "#/definitions/Microsoft.BreakLoop"
        },
        {
          "$ref": "#/definitions/Microsoft.CancelAllDialogs"
        },
        {
          "$ref": "#/definitions/Microsoft.CancelDialog"
        },
        {
          "$ref": "#/definitions/Microsoft.ContinueConversationLater"
        },
        {
          "$ref": "#/definitions/Microsoft.ContinueLoop"
        },
        {
          "$ref": "#/definitions/Microsoft.DebugBreak"
        },
        {
          "$ref": "#/definitions/Microsoft.DeleteActivity"
        },
        {
          "$ref": "#/definitions/Microsoft.DeleteProperties"
        },
        {
          "$ref": "#/definitions/Microsoft.DeleteProperty"
        },
        {
          "$ref": "#/definitions/Microsoft.EditActions"
        },
        {
          "$ref": "#/definitions/Microsoft.EditArray"
        },
        {
          "$ref": "#/definitions/Microsoft.EmitEvent"
        },
        {
          "$ref": "#/definitions/Microsoft.EndDialog"
        },
        {
          "$ref": "#/definitions/Microsoft.EndTurn"
        },
        {
          "$ref": "#/definitions/Microsoft.Foreach"
        },
        {
          "$ref": "#/definitions/Microsoft.ForeachPage"
        },
        {
          "$ref": "#/definitions/Microsoft.GetActivityMembers"
        },
        {
          "$ref": "#/definitions/Microsoft.GetConversationMembers"
        },
        {
          "$ref": "#/definitions/Microsoft.GotoAction"
        },
        {
          "$ref": "#/definitions/Microsoft.HttpRequest"
        },
        {
          "$ref": "#/definitions/Microsoft.IfCondition"
        },
        {
          "$ref": "#/definitions/Microsoft.LogAction"
        },
        {
          "$ref": "#/definitions/Microsoft.RepeatDialog"
        },
        {
          "$ref": "#/definitions/Microsoft.ReplaceDialog"
        },
        {
          "$ref": "#/definitions/Microsoft.SendActivity"
        },
        {
          "$ref": "#/definitions/Microsoft.SetProperties"
        },
        {
          "$ref": "#/definitions/Microsoft.SetProperty"
        },
        {
          "$ref": "#/definitions/Microsoft.SignOutUser"
        },
        {
          "$ref": "#/definitions/Microsoft.SwitchCondition"
        },
        {
          "$ref": "#/definitions/Microsoft.TelemetryTrackEvent"
        },
        {
          "$ref": "#/definitions/Microsoft.ThrowException"
        },
        {
          "$ref": "#/definitions/Microsoft.TraceActivity"
        },
        {
          "$ref": "#/definitions/Microsoft.UpdateActivity"
        },
        {
          "$ref": "#/definitions/Microsoft.Ask"
        },
        {
          "$ref": "#/definitions/Microsoft.AttachmentInput"
        },
        {
          "$ref": "#/definitions/Microsoft.ChoiceInput"
        },
        {
          "$ref": "#/definitions/Microsoft.ConfirmInput"
        },
        {
          "$ref": "#/definitions/Microsoft.DateTimeInput"
        },
        {
          "$ref": "#/definitions/Microsoft.NumberInput"
        },
        {
          "$ref": "#/definitions/Microsoft.OAuthInput"
        },
        {
          "$ref": "#/definitions/Microsoft.TextInput"
        }
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Declarative",
        "version": "4.11.0"
      }
    },
    "Microsoft.IEntityRecognizer": {
      "$role": "interface",
      "title": "Entity recognizers",
      "description": "Components which derive from EntityRecognizer.",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "oneOf": [
        {
          "type": "string",
          "title": "Reference to Microsoft.IEntityRecognizer",
          "description": "Reference to Microsoft.IEntityRecognizer .dialog file."
        },
        {
          "$ref": "#/definitions/Microsoft.AgeEntityRecognizer"
        },
        {
          "$ref": "#/definitions/Microsoft.ConfirmationEntityRecognizer"
        },
        {
          "$ref": "#/definitions/Microsoft.CurrencyEntityRecognizer"
        },
        {
          "$ref": "#/definitions/Microsoft.DateTimeEntityRecognizer"
        },
        {
          "$ref": "#/definitions/Microsoft.DimensionEntityRecognizer"
        },
        {
          "$ref": "#/definitions/Microsoft.EmailEntityRecognizer"
        },
        {
          "$ref": "#/definitions/Microsoft.GuidEntityRecognizer"
        },
        {
          "$ref": "#/definitions/Microsoft.HashtagEntityRecognizer"
        },
        {
          "$ref": "#/definitions/Microsoft.IpEntityRecognizer"
        },
        {
          "$ref": "#/definitions/Microsoft.MentionEntityRecognizer"
        },
        {
          "$ref": "#/definitions/Microsoft.NumberEntityRecognizer"
        },
        {
          "$ref": "#/definitions/Microsoft.NumberRangeEntityRecognizer"
        },
        {
          "$ref": "#/definitions/Microsoft.OrdinalEntityRecognizer"
        },
        {
          "$ref": "#/definitions/Microsoft.PercentageEntityRecognizer"
        },
        {
          "$ref": "#/definitions/Microsoft.PhoneNumberEntityRecognizer"
        },
        {
          "$ref": "#/definitions/Microsoft.RegexEntityRecognizer"
        },
        {
          "$ref": "#/definitions/Microsoft.TemperatureEntityRecognizer"
        },
        {
          "$ref": "#/definitions/Microsoft.UrlEntityRecognizer"
        }
      ]
    },
    "Microsoft.ILanguageGenerator": {
      "title": "Microsoft LanguageGenerator",
      "description": "Components which dervie from the LanguageGenerator class",
      "$role": "interface",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "#/definitions/Microsoft.ResourceMultiLanguageGenerator"
        },
        {
          "$ref": "#/definitions/Microsoft.TemplateEngineLanguageGenerator"
        }
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      }
    },
    "Microsoft.IRecognizer": {
      "title": "Microsoft recognizer",
      "description": "Components which derive from Recognizer class",
      "$role": "interface",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "#/definitions/Microsoft.LuisRecognizer"
        },
        {
          "$ref": "#/definitions/Microsoft.CrossTrainedRecognizerSet"
        },
        {
          "$ref": "#/definitions/Microsoft.MultiLanguageRecognizer"
        },
        {
          "$ref": "#/definitions/Microsoft.RecognizerSet"
        },
        {
          "$ref": "#/definitions/Microsoft.RegexRecognizer"
        },
        {
          "$ref": "#/definitions/Microsoft.AgeEntityRecognizer"
        },
        {
          "$ref": "#/definitions/Microsoft.ChannelMentionEntityRecognizer"
        },
        {
          "$ref": "#/definitions/Microsoft.ConfirmationEntityRecognizer"
        },
        {
          "$ref": "#/definitions/Microsoft.CurrencyEntityRecognizer"
        },
        {
          "$ref": "#/definitions/Microsoft.DateTimeEntityRecognizer"
        },
        {
          "$ref": "#/definitions/Microsoft.DimensionEntityRecognizer"
        },
        {
          "$ref": "#/definitions/Microsoft.EmailEntityRecognizer"
        },
        {
          "$ref": "#/definitions/Microsoft.GuidEntityRecognizer"
        },
        {
          "$ref": "#/definitions/Microsoft.HashtagEntityRecognizer"
        },
        {
          "$ref": "#/definitions/Microsoft.IpEntityRecognizer"
        },
        {
          "$ref": "#/definitions/Microsoft.MentionEntityRecognizer"
        },
        {
          "$ref": "#/definitions/Microsoft.NumberEntityRecognizer"
        },
        {
          "$ref": "#/definitions/Microsoft.NumberRangeEntityRecognizer"
        },
        {
          "$ref": "#/definitions/Microsoft.OrdinalEntityRecognizer"
        },
        {
          "$ref": "#/definitions/Microsoft.PercentageEntityRecognizer"
        },
        {
          "$ref": "#/definitions/Microsoft.PhoneNumberEntityRecognizer"
        },
        {
          "$ref": "#/definitions/Microsoft.RegexEntityRecognizer"
        },
        {
          "$ref": "#/definitions/Microsoft.TemperatureEntityRecognizer"
        },
        {
          "$ref": "#/definitions/Microsoft.UrlEntityRecognizer"
        }
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Declarative",
        "version": "4.11.0"
      }
    },
    "Microsoft.ITextTemplate": {
      "title": "Microsoft TextTemplate",
      "description": "Components which derive from TextTemplate class",
      "$role": "interface",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "#/definitions/Microsoft.TextTemplate"
        }
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Declarative",
        "version": "4.11.0"
      }
    },
    "Microsoft.ITrigger": {
      "$role": "interface",
      "title": "Microsoft Triggers",
      "description": "Components which derive from OnCondition class.",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "oneOf": [
        {
          "type": "string",
          "title": "Reference to Microsoft.ITrigger",
          "description": "Reference to Microsoft.ITrigger .dialog file."
        },
        {
          "$ref": "#/definitions/GitHub.OnCheckRunEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnCheckSuiteEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnCodeScanningAlertEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnCommitCommentEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnContentReferenceEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnCreateEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnDeleteEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnDeployKeyEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnDeploymentEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnDeploymentStatusEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnForkEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnGithubAppAuthorizationEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnGollumEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnInstallationEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnInstallationRepositoriesEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnIssueCommentEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnIssuesEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnLabelEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnMarketplacePurchaseEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnMemberEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnMembershipEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnMetaEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnMilestoneEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnOrganizationEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnOrgBlockEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnPackageEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnPageBuildEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnPingEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnProjectCardEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnProjectColumnEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnProjectEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnPublicEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnPullRequestEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnPullRequestReviewCommentEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnPullRequestReviewEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnPushEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnReleaseEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnRepositoryDispatchEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnRepositoryEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnRepositoryImportEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnRepositoryVulnerabilityAlertEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnSecurityAdvisoryEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnSponsorshipEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnStarEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnStatusEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnTeamAddEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnTeamEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnWatchEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnWorkflowDispatchEvent"
        },
        {
          "$ref": "#/definitions/GitHub.OnWorkflowRunEvent"
        },
        {
          "$ref": "#/definitions/Microsoft.OnActivity"
        },
        {
          "$ref": "#/definitions/Microsoft.OnAssignEntity"
        },
        {
          "$ref": "#/definitions/Microsoft.OnBeginDialog"
        },
        {
          "$ref": "#/definitions/Microsoft.OnCancelDialog"
        },
        {
          "$ref": "#/definitions/Microsoft.OnChooseEntity"
        },
        {
          "$ref": "#/definitions/Microsoft.OnChooseIntent"
        },
        {
          "$ref": "#/definitions/Microsoft.OnChooseProperty"
        },
        {
          "$ref": "#/definitions/Microsoft.OnCondition"
        },
        {
          "$ref": "#/definitions/Microsoft.OnContinueConversation"
        },
        {
          "$ref": "#/definitions/Microsoft.OnConversationUpdateActivity"
        },
        {
          "$ref": "#/definitions/Microsoft.OnDialogEvent"
        },
        {
          "$ref": "#/definitions/Microsoft.OnEndOfActions"
        },
        {
          "$ref": "#/definitions/Microsoft.OnEndOfConversationActivity"
        },
        {
          "$ref": "#/definitions/Microsoft.OnError"
        },
        {
          "$ref": "#/definitions/Microsoft.OnEventActivity"
        },
        {
          "$ref": "#/definitions/Microsoft.OnHandoffActivity"
        },
        {
          "$ref": "#/definitions/Microsoft.OnInstallationUpdateActivity"
        },
        {
          "$ref": "#/definitions/Microsoft.OnIntent"
        },
        {
          "$ref": "#/definitions/Microsoft.OnInvokeActivity"
        },
        {
          "$ref": "#/definitions/Microsoft.OnMessageActivity"
        },
        {
          "$ref": "#/definitions/Microsoft.OnMessageDeleteActivity"
        },
        {
          "$ref": "#/definitions/Microsoft.OnMessageReactionActivity"
        },
        {
          "$ref": "#/definitions/Microsoft.OnMessageUpdateActivity"
        },
        {
          "$ref": "#/definitions/Microsoft.OnQnAMatch"
        },
        {
          "$ref": "#/definitions/Microsoft.OnRepromptDialog"
        },
        {
          "$ref": "#/definitions/Microsoft.OnTypingActivity"
        },
        {
          "$ref": "#/definitions/Microsoft.OnUnknownIntent"
        }
      ]
    },
    "Microsoft.ITriggerSelector": {
      "$role": "interface",
      "title": "Selectors",
      "description": "Components which derive from TriggerSelector class.",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "oneOf": [
        {
          "type": "string",
          "title": "Reference to Microsoft.ITriggerSelector",
          "description": "Reference to Microsoft.ITriggerSelector .dialog file."
        },
        {
          "$ref": "#/definitions/Microsoft.ConditionalSelector"
        },
        {
          "$ref": "#/definitions/Microsoft.FirstSelector"
        },
        {
          "$ref": "#/definitions/Microsoft.MostSpecificSelector"
        },
        {
          "$ref": "#/definitions/Microsoft.RandomSelector"
        },
        {
          "$ref": "#/definitions/Microsoft.TrueSelector"
        }
      ]
    },
    "Microsoft.IfCondition": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "If condition",
      "description": "Two-way branch the conversation flow based on a condition.",
      "type": "object",
      "required": [
        "condition",
        "actions",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the dialog"
        },
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Expression to evaluate.",
          "examples": [
            "user.age > 3"
          ]
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action.",
          "examples": [
            true,
            "=user.age > 3"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Actions to execute if condition is true.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "elseActions": {
          "type": "array",
          "title": "Else",
          "description": "Actions to execute if condition is false.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.IfCondition"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.InputDialog": {
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the dialog"
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action.",
          "default": false,
          "examples": [
            false,
            "=user.isVip"
          ]
        },
        "prompt": {
          "$kind": "Microsoft.IActivityTemplate",
          "title": "Initial prompt",
          "description": "Message to send to collect information.",
          "examples": [
            "What is your birth date?"
          ],
          "$ref": "#/definitions/Microsoft.IActivityTemplate"
        },
        "unrecognizedPrompt": {
          "$kind": "Microsoft.IActivityTemplate",
          "title": "Unrecognized prompt",
          "description": "Message to send when max turn count (if specified) has been exceeded and the default value is selected as the value.",
          "examples": [
            "Sorry, I'm having trouble understanding you. I will just use {this.options.defaultValue} for now. You can say 'I'm 36 years old' to change it."
          ],
          "$ref": "#/definitions/Microsoft.IActivityTemplate"
        },
        "invalidPrompt": {
          "$kind": "Microsoft.IActivityTemplate",
          "title": "Invalid prompt",
          "description": "Message to send when the user input does not meet any validation expression.",
          "examples": [
            "Sorry, '{this.value}' does not work. I need a number between 1-150. What is your age?"
          ],
          "$ref": "#/definitions/Microsoft.IActivityTemplate"
        },
        "defaultValueResponse": {
          "$kind": "Microsoft.IActivityTemplate",
          "title": "Default value response",
          "description": "Message to send when max turn count (if specified) has been exceeded and the default value is selected as the value.",
          "examples": [
            "Sorry, I'm having trouble understanding you. I will just use {this.options.defaultValue} for now. You can say 'I'm 36 years old' to change it."
          ],
          "$ref": "#/definitions/Microsoft.IActivityTemplate"
        },
        "maxTurnCount": {
          "$ref": "#/definitions/integerExpression",
          "title": "Max turn count",
          "description": "Maximum number of re-prompt attempts to collect information.",
          "default": 3,
          "examples": [
            3,
            "=settings.xyz"
          ]
        },
        "validations": {
          "type": "array",
          "title": "Validation expressions",
          "description": "Expression to validate user input.",
          "items": {
            "$ref": "#/definitions/condition",
            "title": "Condition",
            "description": "Expression which needs to met for the input to be considered valid",
            "examples": [
              "int(this.value) > 1 && int(this.value) <= 150",
              "count(this.value) < 300"
            ]
          }
        },
        "property": {
          "$ref": "#/definitions/stringExpression",
          "title": "Property",
          "description": "Property to store collected information. Input will be skipped if property has value (unless 'Always prompt' is true).",
          "examples": [
            "$birthday",
            "dialog.${user.name}",
            "=f(x)"
          ]
        },
        "alwaysPrompt": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Always prompt",
          "description": "Collect information even if the specified 'property' is not empty.",
          "default": false,
          "examples": [
            false,
            "=$val"
          ]
        },
        "allowInterruptions": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Allow Interruptions",
          "description": "A boolean expression that determines whether the parent should be allowed to interrupt the input.",
          "default": true,
          "examples": [
            true,
            "=user.xyz"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.InputDialog"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.IpEntityRecognizer": {
      "$role": [
        "implements(Microsoft.IRecognizer)",
        "implements(Microsoft.IEntityRecognizer)"
      ],
      "title": "IP entity recognizer",
      "description": "Recognizer which recognizes internet IP patterns (like 192.1.1.1).",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.IpEntityRecognizer"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.LanguagePolicy": {
      "title": "Language policy",
      "description": "This represents a policy map for locales lookups to use for language",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": {
        "type": "array",
        "title": "Per-locale policy",
        "description": "Language policy per locale.",
        "items": {
          "type": "string",
          "title": "Locale",
          "description": "Locale like en-us."
        }
      },
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.LanguagePolicy"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.LogAction": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Log to console",
      "description": "Log a message to the host application. Send a TraceActivity to Bot Framework Emulator (optional).",
      "type": "object",
      "required": [
        "text",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the dialog"
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action.",
          "examples": [
            true,
            "=user.age > 3"
          ]
        },
        "text": {
          "$ref": "#/definitions/stringExpression",
          "title": "Text",
          "description": "Information to log."
        },
        "label": {
          "$ref": "#/definitions/stringExpression",
          "title": "Label",
          "description": "Label for the trace activity (used to identify it in a list of trace activities.)"
        },
        "traceActivity": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Send trace activity",
          "description": "If true, automatically sends a TraceActivity (view in Bot Framework Emulator)."
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.LogAction"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.LuisRecognizer": {
      "$role": "implements(Microsoft.IRecognizer)",
      "title": "LUIS Recognizer",
      "description": "LUIS recognizer.",
      "type": "object",
      "required": [
        "applicationId",
        "endpoint",
        "endpointKey",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.AI.Luis",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional unique id using with RecognizerSet.  Other recognizers should return 'DeferToRecognizer_{Id}' intent when cross training data for this recognizer."
        },
        "applicationId": {
          "$ref": "#/definitions/stringExpression",
          "title": "LUIS application id",
          "description": "Application ID for your model from the LUIS service."
        },
        "version": {
          "$ref": "#/definitions/stringExpression",
          "title": "LUIS version",
          "description": "Optional version to target.  If null then predictionOptions.Slot is used."
        },
        "endpoint": {
          "$ref": "#/definitions/stringExpression",
          "title": "LUIS endpoint",
          "description": "Endpoint to use for LUIS service like https://westus.api.cognitive.microsoft.com."
        },
        "endpointKey": {
          "$ref": "#/definitions/stringExpression",
          "title": "LUIS prediction key",
          "description": "LUIS prediction key used to call endpoint."
        },
        "externalEntityRecognizer": {
          "$kind": "Microsoft.IRecognizer",
          "title": "External entity recognizer",
          "description": "Entities recognized by this recognizer will be passed to LUIS as external entities.",
          "$ref": "#/definitions/Microsoft.IRecognizer"
        },
        "dynamicLists": {
          "$ref": "#/definitions/arrayExpression",
          "title": "Dynamic lists",
          "description": "Runtime defined entity lists.",
          "items": {
            "title": "Entity list",
            "description": "Lists of canonical values and synonyms for an entity.",
            "type": "object",
            "properties": {
              "entity": {
                "title": "Entity",
                "description": "Entity to extend with a dynamic list.",
                "type": "string"
              },
              "list": {
                "title": "Dynamic list",
                "description": "List of canonical forms and synonyms.",
                "type": "array",
                "items": {
                  "type": "object",
                  "title": "List entry",
                  "description": "Canonical form and synonynms.",
                  "properties": {
                    "canonicalForm": {
                      "title": "Canonical form",
                      "description": "Resolution if any synonym matches.",
                      "type": "string"
                    },
                    "synonyms": {
                      "title": "Synonyms",
                      "description": "List of synonyms for a canonical form.",
                      "type": "array",
                      "items": {
                        "title": "Synonym",
                        "description": "Synonym for canonical form.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "predictionOptions": {
          "type": "object",
          "title": "Prediction options",
          "description": "Options to control LUIS prediction behavior.",
          "properties": {
            "includeAllIntents": {
              "$ref": "#/definitions/booleanExpression",
              "title": "Include all intents",
              "description": "True for all intents, false for only top intent."
            },
            "includeInstanceData": {
              "$ref": "#/definitions/booleanExpression",
              "title": "Include $instance",
              "description": "True to include $instance metadata in the LUIS response."
            },
            "log": {
              "$ref": "#/definitions/booleanExpression",
              "title": "Log utterances",
              "description": "True to log utterances on LUIS service."
            },
            "preferExternalEntities": {
              "$ref": "#/definitions/booleanExpression",
              "title": "Prefer external entities",
              "description": "True to prefer external entities to those generated by LUIS models."
            },
            "slot": {
              "$ref": "#/definitions/stringExpression",
              "title": "Slot",
              "description": "Slot to use for talking to LUIS service like production or staging."
            }
          }
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.LuisRecognizer"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.MentionEntityRecognizer": {
      "$role": [
        "implements(Microsoft.IRecognizer)",
        "implements(Microsoft.IEntityRecognizer)"
      ],
      "title": "Mentions entity recognizer",
      "description": "Recognizer which recognizes @Mentions",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.MentionEntityRecognizer"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.MostSpecificSelector": {
      "$role": "implements(Microsoft.ITriggerSelector)",
      "title": "Most specific trigger selector",
      "description": "Select most specific true events with optional additional selector",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "selector": {
          "$kind": "Microsoft.ITriggerSelector",
          "$ref": "#/definitions/Microsoft.ITriggerSelector"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.MostSpecificSelector"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.MultiLanguageRecognizer": {
      "$role": "implements(Microsoft.IRecognizer)",
      "title": "Multi-language recognizer",
      "description": "Configure one recognizer per language and the specify the language fallback policy.",
      "type": "object",
      "required": [
        "recognizers",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional unique id using with RecognizerSet.  Other recognizers should return 'DeferToRecognizer_{Id}' intent when cross training data for this recognizer."
        },
        "languagePolicy": {
          "$kind": "Microsoft.LanguagePolicy",
          "type": "object",
          "title": "Language policy",
          "description": "Defines fall back languages to try per user input language.",
          "$ref": "#/definitions/Microsoft.LanguagePolicy"
        },
        "recognizers": {
          "type": "object",
          "title": "Recognizers",
          "description": "Map of language -> Recognizer",
          "additionalProperties": {
            "$kind": "Microsoft.IRecognizer",
            "$ref": "#/definitions/Microsoft.IRecognizer"
          }
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.MultiLanguageRecognizer"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.NumberEntityRecognizer": {
      "$role": [
        "implements(Microsoft.IRecognizer)",
        "implements(Microsoft.IEntityRecognizer)"
      ],
      "title": "Number entity recognizer",
      "description": "Recognizer which recognizes numbers.",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.NumberEntityRecognizer"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.NumberInput": {
      "$role": [
        "implements(Microsoft.IDialog)",
        "extends(Microsoft.InputDialog)"
      ],
      "title": "Number input dialog",
      "description": "Collect information - Ask for a number.",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "defaultValue": {
          "$ref": "#/definitions/numberExpression",
          "title": "Default value",
          "description": "'Property' will be set to the value of this expression when max turn count is exceeded.",
          "examples": [
            13,
            "=user.age"
          ]
        },
        "value": {
          "$ref": "#/definitions/numberExpression",
          "title": "Value",
          "description": "'Property' will be set to the value of this expression unless it evaluates to null.",
          "examples": [
            13,
            "=user.age"
          ]
        },
        "outputFormat": {
          "$ref": "#/definitions/expression",
          "title": "Output format",
          "description": "Expression to format the number output.",
          "examples": [
            "=this.value",
            "=int(this.text)"
          ]
        },
        "defaultLocale": {
          "$ref": "#/definitions/stringExpression",
          "title": "Default locale",
          "description": "Default locale to use if there is no locale available..",
          "default": "en-us"
        },
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the dialog"
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action.",
          "default": false,
          "examples": [
            false,
            "=user.isVip"
          ]
        },
        "prompt": {
          "$kind": "Microsoft.IActivityTemplate",
          "title": "Initial prompt",
          "description": "Message to send to collect information.",
          "examples": [
            "What is your birth date?"
          ],
          "$ref": "#/definitions/Microsoft.IActivityTemplate"
        },
        "unrecognizedPrompt": {
          "$kind": "Microsoft.IActivityTemplate",
          "title": "Unrecognized prompt",
          "description": "Message to send when max turn count (if specified) has been exceeded and the default value is selected as the value.",
          "examples": [
            "Sorry, I'm having trouble understanding you. I will just use {this.options.defaultValue} for now. You can say 'I'm 36 years old' to change it."
          ],
          "$ref": "#/definitions/Microsoft.IActivityTemplate"
        },
        "invalidPrompt": {
          "$kind": "Microsoft.IActivityTemplate",
          "title": "Invalid prompt",
          "description": "Message to send when the user input does not meet any validation expression.",
          "examples": [
            "Sorry, '{this.value}' does not work. I need a number between 1-150. What is your age?"
          ],
          "$ref": "#/definitions/Microsoft.IActivityTemplate"
        },
        "defaultValueResponse": {
          "$kind": "Microsoft.IActivityTemplate",
          "title": "Default value response",
          "description": "Message to send when max turn count (if specified) has been exceeded and the default value is selected as the value.",
          "examples": [
            "Sorry, I'm having trouble understanding you. I will just use {this.options.defaultValue} for now. You can say 'I'm 36 years old' to change it."
          ],
          "$ref": "#/definitions/Microsoft.IActivityTemplate"
        },
        "maxTurnCount": {
          "$ref": "#/definitions/integerExpression",
          "title": "Max turn count",
          "description": "Maximum number of re-prompt attempts to collect information.",
          "default": 3,
          "examples": [
            3,
            "=settings.xyz"
          ]
        },
        "validations": {
          "type": "array",
          "title": "Validation expressions",
          "description": "Expression to validate user input.",
          "items": {
            "$ref": "#/definitions/condition",
            "title": "Condition",
            "description": "Expression which needs to met for the input to be considered valid",
            "examples": [
              "int(this.value) > 1 && int(this.value) <= 150",
              "count(this.value) < 300"
            ]
          }
        },
        "property": {
          "$ref": "#/definitions/stringExpression",
          "title": "Property",
          "description": "Property to store collected information. Input will be skipped if property has value (unless 'Always prompt' is true).",
          "examples": [
            "$birthday",
            "dialog.${user.name}",
            "=f(x)"
          ]
        },
        "alwaysPrompt": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Always prompt",
          "description": "Collect information even if the specified 'property' is not empty.",
          "default": false,
          "examples": [
            false,
            "=$val"
          ]
        },
        "allowInterruptions": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Allow Interruptions",
          "description": "A boolean expression that determines whether the parent should be allowed to interrupt the input.",
          "default": true,
          "examples": [
            true,
            "=user.xyz"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.NumberInput"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.NumberRangeEntityRecognizer": {
      "$role": [
        "implements(Microsoft.IRecognizer)",
        "implements(Microsoft.IEntityRecognizer)"
      ],
      "title": "Number range entity recognizer",
      "description": "Recognizer which recognizes ranges of numbers (Example:2 to 5).",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.NumberRangeEntityRecognizer"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.OAuthInput": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "OAuthInput Dialog",
      "description": "Collect login information.",
      "type": "object",
      "required": [
        "connectionName",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "connectionName": {
          "$ref": "#/definitions/stringExpression",
          "title": "Connection name",
          "description": "The connection name configured in Azure Web App Bot OAuth settings.",
          "examples": [
            "msgraphOAuthConnection"
          ]
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action.",
          "examples": [
            true,
            "=user.age > 3"
          ]
        },
        "text": {
          "$ref": "#/definitions/stringExpression",
          "title": "Text",
          "description": "Text shown in the OAuth signin card.",
          "examples": [
            "Please sign in. ",
            "=concat(x,y,z)"
          ]
        },
        "title": {
          "$ref": "#/definitions/stringExpression",
          "title": "Title",
          "description": "Title shown in the OAuth signin card.",
          "examples": [
            "Login"
          ]
        },
        "timeout": {
          "$ref": "#/definitions/integerExpression",
          "title": "Timeout",
          "description": "Time out setting for the OAuth signin card.",
          "default": 900000
        },
        "property": {
          "$ref": "#/definitions/stringExpression",
          "title": "Token property",
          "description": "Property to store the OAuth token result.",
          "examples": [
            "dialog.token"
          ]
        },
        "invalidPrompt": {
          "$kind": "Microsoft.IActivityTemplate",
          "title": "Invalid prompt",
          "description": "Message to send if user response is invalid.",
          "examples": [
            "Sorry, the login info you provided is not valid."
          ],
          "$ref": "#/definitions/Microsoft.IActivityTemplate"
        },
        "defaultValueResponse": {
          "$kind": "Microsoft.IActivityTemplate",
          "title": "Default value response",
          "description": "Message to send when max turn count (if specified) has been exceeded and the default value is selected as the value.",
          "examples": [
            "Login failed."
          ],
          "$ref": "#/definitions/Microsoft.IActivityTemplate"
        },
        "maxTurnCount": {
          "$ref": "#/definitions/integerExpression",
          "title": "Max turn count",
          "description": "Maximum number of re-prompt attempts to collect information.",
          "default": 3,
          "examples": [
            3
          ]
        },
        "defaultValue": {
          "$ref": "#/definitions/expression",
          "title": "Default value",
          "description": "Expression to examine on each turn of the conversation as possible value to the property.",
          "examples": [
            "@token"
          ]
        },
        "allowInterruptions": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Allow interruptions",
          "description": "A boolean expression that determines whether the parent should be allowed to interrupt the input.",
          "default": true,
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "alwaysPrompt": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Always prompt",
          "description": "Collect information even if the specified 'property' is not empty.",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.OAuthInput"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.OnActivity": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "title": "On activity",
      "description": "Actions to perform on receipt of a generic activity.",
      "type": "object",
      "required": [
        "type",
        "actions",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "type": {
          "type": "string",
          "title": "Activity type",
          "description": "The Activity.Type to match"
        },
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.OnActivity"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.OnAssignEntity": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "title": "On entity assignment",
      "description": "Actions to take when an entity should be assigned to a property.",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "property": {
          "type": "string",
          "title": "Property",
          "description": "Property that will be set after entity is selected."
        },
        "entity": {
          "type": "string",
          "title": "Entity",
          "description": "Entity being put into property"
        },
        "operation": {
          "type": "string",
          "title": "Operation",
          "description": "Operation for assigning entity."
        },
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.OnAssignEntity"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.OnBeginDialog": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "title": "On begin dialog",
      "description": "Actions to perform when this dialog begins.",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.OnBeginDialog"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.OnCancelDialog": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "title": "On cancel dialog",
      "description": "Actions to perform on cancel dialog event.",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.OnCancelDialog"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.OnChooseEntity": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "title": "On choose entity",
      "description": "Actions to be performed when an entity value needs to be resolved.",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "property": {
          "type": "string",
          "title": "Property to be set",
          "description": "Property that will be set after entity is selected."
        },
        "entity": {
          "type": "string",
          "title": "Ambiguous entity",
          "description": "Ambiguous entity"
        },
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.OnChooseEntity"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.OnChooseIntent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "title": "On ambigious intent",
      "description": "Actions to perform on when an intent is ambigious.",
      "type": "object",
      "required": [
        "actions",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "intents": {
          "type": "array",
          "title": "Intents",
          "description": "Intents that must be in the ChooseIntent result for this condition to trigger.",
          "items": {
            "title": "Intent",
            "description": "Intent name to trigger on.",
            "type": "string"
          }
        },
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.OnChooseIntent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.OnChooseProperty": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "title": "On choose property",
      "description": "Actions to take when there are multiple possible mappings of entities to properties.",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "entity": {
          "type": "string",
          "title": "Entity being assigned",
          "description": "Entity being assigned to property choice"
        },
        "properties": {
          "type": "array",
          "title": "Possible properties",
          "description": "Properties to be chosen between.",
          "items": {
            "type": "string",
            "title": "Property name",
            "description": "Possible property to choose."
          }
        },
        "entities": {
          "type": "array",
          "title": "Entities",
          "description": "Ambiguous entity names.",
          "items": {
            "type": "string",
            "title": "Entity name",
            "description": "Entity name being chosen between."
          }
        },
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.OnChooseProperty"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.OnCondition": {
      "$role": "implements(Microsoft.ITrigger)",
      "title": "On condition",
      "description": "Actions to perform when specified condition is true.",
      "type": "object",
      "required": [
        "actions",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.OnCondition"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.OnContinueConversation": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "title": "On continue conversation",
      "description": "Actions to perform when a conversation is started up again from a ContinueConversationLater action.",
      "type": "object",
      "required": [
        "actions",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.OnContinueConversation"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.OnConversationUpdateActivity": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "title": "On ConversationUpdate activity",
      "description": "Actions to perform on receipt of an activity with type 'ConversationUpdate'.",
      "type": "object",
      "required": [
        "actions",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.OnConversationUpdateActivity"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.OnDialogEvent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "title": "On dialog event",
      "description": "Actions to perform when a specific dialog event occurs.",
      "type": "object",
      "required": [
        "actions",
        "event",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "event": {
          "type": "string",
          "title": "Dialog event name",
          "description": "Name of dialog event."
        },
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.OnDialogEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.OnEndOfActions": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "title": "On end of actions",
      "description": "Actions to take when there are no more actions in the current dialog.",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "type": "object",
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.OnEndOfActions"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.OnEndOfConversationActivity": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "title": "On EndOfConversation activity",
      "description": "Actions to perform on receipt of an activity with type 'EndOfConversation'.",
      "type": "object",
      "required": [
        "actions",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.OnEndOfConversationActivity"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.OnError": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "title": "On error",
      "description": "Action to perform when an 'Error' dialog event occurs.",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.OnError"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.OnEventActivity": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "title": "On Event activity",
      "description": "Actions to perform on receipt of an activity with type 'Event'.",
      "type": "object",
      "required": [
        "actions",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.OnEventActivity"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.OnHandoffActivity": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "title": "On Handoff activity",
      "description": "Actions to perform on receipt of an activity with type 'HandOff'.",
      "type": "object",
      "required": [
        "actions",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.OnHandoffActivity"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.OnInstallationUpdateActivity": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "title": "On InstallationUpdate activity",
      "description": "Actions to perform on receipt of an activity with type 'InstallationUpdate'.",
      "type": "object",
      "required": [
        "actions",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.OnInstallationUpdateActivity"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.OnIntent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "title": "On intent recognition",
      "description": "Actions to perform when specified intent is recognized.",
      "type": "object",
      "required": [
        "actions",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "intent": {
          "type": "string",
          "title": "Intent",
          "description": "Name of intent."
        },
        "entities": {
          "type": "array",
          "title": "Entities",
          "description": "Required entities.",
          "items": {
            "type": "string",
            "title": "Entity",
            "description": "Entity that must be present."
          }
        },
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.OnIntent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.OnInvokeActivity": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "title": "On Invoke activity",
      "description": "Actions to perform on receipt of an activity with type 'Invoke'.",
      "type": "object",
      "required": [
        "actions",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.OnInvokeActivity"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.OnMessageActivity": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "title": "On Message activity",
      "description": "Actions to perform on receipt of an activity with type 'Message'. Overrides Intent trigger.",
      "type": "object",
      "required": [
        "actions",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.OnMessageActivity"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.OnMessageDeleteActivity": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "title": "On MessageDelete activity",
      "description": "Actions to perform on receipt of an activity with type 'MessageDelete'.",
      "type": "object",
      "required": [
        "actions",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.OnMessageDeleteActivity"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.OnMessageReactionActivity": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "title": "On MessageReaction activity",
      "description": "Actions to perform on receipt of an activity with type 'MessageReaction'.",
      "type": "object",
      "required": [
        "actions",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.OnMessageReactionActivity"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.OnMessageUpdateActivity": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "title": "On MessageUpdate activity",
      "description": "Actions to perform on receipt of an activity with type 'MessageUpdate'.",
      "type": "object",
      "required": [
        "actions",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.OnMessageUpdateActivity"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.OnQnAMatch": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "title": "On QnAMaker match",
      "description": "Actions to perform on when an match from QnAMaker is found.",
      "type": "object",
      "required": [
        "actions",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.OnQnAMatch"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.OnRepromptDialog": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "title": "On RepromptDialog",
      "description": "Actions to perform when 'RepromptDialog' event occurs.",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "actions",
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.OnRepromptDialog"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.OnTypingActivity": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "title": "On Typing activity",
      "description": "Actions to perform on receipt of an activity with type 'Typing'.",
      "type": "object",
      "required": [
        "actions",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.OnTypingActivity"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.OnUnknownIntent": {
      "$role": [
        "implements(Microsoft.ITrigger)",
        "extends(Microsoft.OnCondition)"
      ],
      "title": "On unknown intent",
      "description": "Action to perform when user input is unrecognized or if none of the 'on intent recognition' triggers match recognized intent.",
      "type": "object",
      "required": [
        "actions",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "condition": {
          "$ref": "#/definitions/condition",
          "title": "Condition",
          "description": "Condition (expression).",
          "examples": [
            "user.vip == true"
          ]
        },
        "actions": {
          "type": "array",
          "title": "Actions",
          "description": "Sequence of actions to execute.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "priority": {
          "$ref": "#/definitions/integerExpression",
          "title": "Priority",
          "description": "Priority for trigger with 0 being the highest and < 0 ignored."
        },
        "runOnce": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Run Once",
          "description": "True if rule should run once per unique conditions",
          "examples": [
            true,
            "=f(x)"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.OnUnknownIntent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.OrdinalEntityRecognizer": {
      "$role": [
        "implements(Microsoft.IRecognizer)",
        "implements(Microsoft.IEntityRecognizer)"
      ],
      "title": "Ordinal entity recognizer",
      "description": "Recognizer which recognizes ordinals (example: first, second, 3rd).",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.OrdinalEntityRecognizer"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.PercentageEntityRecognizer": {
      "$role": [
        "implements(Microsoft.IRecognizer)",
        "implements(Microsoft.IEntityRecognizer)"
      ],
      "title": "Percentage entity recognizer",
      "description": "Recognizer which recognizes percentages.",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.PercentageEntityRecognizer"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.PhoneNumberEntityRecognizer": {
      "$role": [
        "implements(Microsoft.IRecognizer)",
        "implements(Microsoft.IEntityRecognizer)"
      ],
      "title": "Phone number entity recognizer",
      "description": "Recognizer which recognizes phone numbers.",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.PhoneNumberEntityRecognizer"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.RandomSelector": {
      "$role": "implements(Microsoft.ITriggerSelector)",
      "title": "Random rule selector",
      "description": "Select most specific true rule.",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "seed": {
          "type": "integer",
          "title": "Random seed",
          "description": "Random seed to start random number generation."
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.RandomSelector"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.RecognizerSet": {
      "$role": "implements(Microsoft.IRecognizer)",
      "title": "Recognizer set",
      "description": "Creates the union of the intents and entities of the recognizers in the set.",
      "type": "object",
      "required": [
        "recognizers",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional unique id using with RecognizerSet.  Other recognizers should return 'DeferToRecognizer_{Id}' intent when cross training data for this recognizer."
        },
        "recognizers": {
          "type": "array",
          "title": "Recognizers",
          "description": "List of Recognizers defined for this set.",
          "items": {
            "$kind": "Microsoft.IRecognizer",
            "$ref": "#/definitions/Microsoft.IRecognizer"
          }
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.RecognizerSet"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.RegexEntityRecognizer": {
      "$role": [
        "implements(Microsoft.IRecognizer)",
        "implements(Microsoft.IEntityRecognizer)"
      ],
      "title": "Regex entity recognizer",
      "description": "Recognizer which recognizes patterns of input based on regex.",
      "type": "object",
      "required": [
        "name",
        "pattern",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Name of the entity"
        },
        "pattern": {
          "type": "string",
          "title": "Pattern",
          "description": "Pattern expressed as regular expression."
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.RegexEntityRecognizer"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.RegexRecognizer": {
      "$role": "implements(Microsoft.IRecognizer)",
      "title": "Regex recognizer",
      "description": "Use regular expressions to recognize intents and entities from user input.",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional unique id using with RecognizerSet.  Other recognizers should return 'DeferToRecognizer_{Id}' intent when cross training data for this recognizer."
        },
        "intents": {
          "type": "array",
          "title": "RegEx patterns to intents",
          "description": "Collection of patterns to match for an intent.",
          "items": {
            "type": "object",
            "title": "Pattern",
            "description": "Intent and regex pattern.",
            "properties": {
              "intent": {
                "type": "string",
                "title": "Intent",
                "description": "The intent name."
              },
              "pattern": {
                "type": "string",
                "title": "Pattern",
                "description": "The regular expression pattern."
              }
            }
          }
        },
        "entities": {
          "type": "array",
          "title": "Entity recognizers",
          "description": "Collection of entity recognizers to use.",
          "items": {
            "$kind": "Microsoft.IEntityRecognizer",
            "$ref": "#/definitions/Microsoft.IEntityRecognizer"
          }
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.RegexRecognizer"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.RepeatDialog": {
      "$role": "implements(Microsoft.IDialog)",
      "type": "object",
      "title": "Repeat dialog",
      "description": "Repeat current dialog.",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the dialog"
        },
        "allowLoop": {
          "$ref": "#/definitions/booleanExpression",
          "title": "AllowLoop",
          "description": "Optional condition which if true will allow loop of the repeated dialog.",
          "examples": [
            "user.age > 3"
          ]
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action.",
          "examples": [
            "user.age > 3"
          ]
        },
        "options": {
          "$ref": "#/definitions/objectExpression",
          "title": "Options",
          "description": "One or more options that are passed to the dialog that is called.",
          "additionalProperties": {
            "type": "string",
            "title": "Options",
            "description": "Options for repeating dialog."
          }
        },
        "activityProcessed": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Activity processed",
          "description": "When set to false, the dialog that is called can process the current activity.",
          "default": true
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.RepeatDialog"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.ReplaceDialog": {
      "$role": "implements(Microsoft.IDialog)",
      "type": "object",
      "title": "Replace dialog",
      "description": "Replace current dialog with another dialog.",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the dialog"
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action.",
          "examples": [
            "user.age > 3"
          ]
        },
        "dialog": {
          "oneOf": [
            {
              "$kind": "Microsoft.IDialog",
              "pattern": "^(?!(=)).*",
              "title": "Dialog",
              "$ref": "#/definitions/Microsoft.IDialog"
            },
            {
              "$ref": "#/definitions/equalsExpression",
              "examples": [
                "=settings.dialogId"
              ]
            }
          ],
          "title": "Dialog name",
          "description": "Name of the dialog to call."
        },
        "options": {
          "$ref": "#/definitions/objectExpression",
          "title": "Options",
          "description": "One or more options that are passed to the dialog that is called.",
          "additionalProperties": {
            "type": "string",
            "title": "Options",
            "description": "Options for replacing dialog."
          }
        },
        "activityProcessed": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Activity processed",
          "description": "When set to false, the dialog that is called can process the current activity.",
          "default": true
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.ReplaceDialog"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.ResourceMultiLanguageGenerator": {
      "$role": "implements(Microsoft.ILanguageGenerator)",
      "title": "Resource multi-language generator",
      "description": "MultiLanguage Generator which is bound to resource by resource Id.",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional generator ID."
        },
        "resourceId": {
          "type": "string",
          "title": "Resource Id",
          "description": "Resource which is the root language generator.  Other generaters with the same name and language suffix will be loaded into this generator and used based on the Language Policy.",
          "default": "dialog.result"
        },
        "languagePolicy": {
          "type": "object",
          "title": "Language policy",
          "description": "Set alternate language policy for this generator.  If not set, the global language policy will be used."
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.ResourceMultiLanguageGenerator"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.SendActivity": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Send an activity",
      "description": "Respond with an activity.",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the dialog"
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action."
        },
        "activity": {
          "$kind": "Microsoft.IActivityTemplate",
          "title": "Activity",
          "description": "Activity to send.",
          "$ref": "#/definitions/Microsoft.IActivityTemplate"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.SendActivity"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.SetProperties": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Set property",
      "description": "Set one or more property values.",
      "type": "object",
      "required": [
        "assignments",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the dialog"
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action.",
          "examples": [
            true,
            "=user.age > 3"
          ]
        },
        "assignments": {
          "type": "array",
          "title": "Assignments",
          "description": "Property value assignments to set.",
          "items": {
            "type": "object",
            "title": "Assignment",
            "description": "Property assignment.",
            "properties": {
              "property": {
                "$ref": "#/definitions/stringExpression",
                "title": "Property",
                "description": "Property (named location to store information).",
                "examples": [
                  "user.age"
                ]
              },
              "value": {
                "$ref": "#/definitions/valueExpression",
                "title": "Value",
                "description": "New value or expression.",
                "examples": [
                  "='milk'",
                  "=dialog.favColor",
                  "=dialog.favColor == 'red'"
                ]
              }
            }
          }
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.SetProperties"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.SetProperty": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Set property",
      "description": "Set property to a value.",
      "type": "object",
      "required": [
        "property",
        "value",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the dialog"
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action.",
          "examples": [
            true,
            "=user.age > 3"
          ]
        },
        "property": {
          "$ref": "#/definitions/stringExpression",
          "title": "Property",
          "description": "Property (named location to store information).",
          "examples": [
            "user.age"
          ]
        },
        "value": {
          "$ref": "#/definitions/valueExpression",
          "title": "Value",
          "description": "New value or expression.",
          "examples": [
            "='milk'",
            "=dialog.favColor",
            "=dialog.favColor == 'red'"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.SetProperty"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.SignOutUser": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Sign out user",
      "description": "Sign a user out that was logged in previously using OAuthInput.",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the dialog"
        },
        "userId": {
          "$ref": "#/definitions/stringExpression",
          "title": "UserId",
          "description": "Expression to an user to signout. Default is user.id.",
          "default": "=user.id"
        },
        "connectionName": {
          "$ref": "#/definitions/stringExpression",
          "title": "Connection name",
          "description": "Connection name that was used with OAuthInput to log a user in."
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action.",
          "examples": [
            true,
            "=user.age > 3"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.SignOutUser"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.StaticActivityTemplate": {
      "$role": "implements(Microsoft.IActivityTemplate)",
      "title": "Microsoft static activity template",
      "description": "This allows you to define a static Activity object",
      "type": "object",
      "required": [
        "activity",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "activity": {
          "$ref": "#/definitions/botframework.json/definitions/Activity",
          "title": "Activity",
          "description": "A static Activity to used.",
          "required": [
            "type"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.StaticActivityTemplate"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.SwitchCondition": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Switch condition",
      "description": "Execute different actions based on the value of a property.",
      "type": "object",
      "required": [
        "condition",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the dialog"
        },
        "condition": {
          "$ref": "#/definitions/stringExpression",
          "title": "Condition",
          "description": "Property to evaluate.",
          "examples": [
            "user.favColor"
          ]
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action.",
          "examples": [
            true,
            "=user.age > 3"
          ]
        },
        "cases": {
          "type": "array",
          "title": "Cases",
          "description": "Actions for each possible condition.",
          "items": {
            "type": "object",
            "title": "Case",
            "description": "Case and actions.",
            "required": [
              "value",
              "actions"
            ],
            "properties": {
              "value": {
                "type": [
                  "number",
                  "integer",
                  "boolean",
                  "string"
                ],
                "title": "Value",
                "description": "The value to compare the condition with.",
                "examples": [
                  "red",
                  "true",
                  "13"
                ]
              },
              "actions": {
                "type": "array",
                "title": "Actions",
                "description": "Actions to execute.",
                "items": {
                  "$kind": "Microsoft.IDialog",
                  "$ref": "#/definitions/Microsoft.IDialog"
                }
              }
            }
          }
        },
        "default": {
          "type": "array",
          "title": "Default",
          "description": "Actions to execute if none of the cases meet the condition.",
          "items": {
            "$kind": "Microsoft.IDialog",
            "$ref": "#/definitions/Microsoft.IDialog"
          }
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.SwitchCondition"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.TelemetryTrackEvent": {
      "$role": "implements(Microsoft.IDialog)",
      "type": "object",
      "title": "Telemetry - track event",
      "description": "Track a custom event using the registered Telemetry Client.",
      "required": [
        "url",
        "method",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the dialog"
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action.",
          "examples": [
            "user.age > 3"
          ]
        },
        "eventName": {
          "$ref": "#/definitions/stringExpression",
          "title": "Event name",
          "description": "The name of the event to track.",
          "examples": [
            "MyEventStarted",
            "MyEventCompleted"
          ]
        },
        "properties": {
          "type": "object",
          "title": "Properties",
          "description": "One or more properties to attach to the event being tracked.",
          "additionalProperties": {
            "$ref": "#/definitions/stringExpression"
          }
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.TelemetryTrackEvent"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.TemperatureEntityRecognizer": {
      "$role": [
        "implements(Microsoft.IRecognizer)",
        "implements(Microsoft.IEntityRecognizer)"
      ],
      "title": "Temperature recognizer",
      "description": "Recognizer which recognizes temperatures.",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.TemperatureEntityRecognizer"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.TemplateEngineLanguageGenerator": {
      "$role": "implements(Microsoft.ILanguageGenerator)",
      "title": "Template multi-language generator",
      "description": "Template Generator which allows only inline evaluation of templates.",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional generator ID."
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.TemplateEngineLanguageGenerator"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.TextInput": {
      "$role": [
        "implements(Microsoft.IDialog)",
        "extends(Microsoft.InputDialog)"
      ],
      "type": "object",
      "title": "Text input dialog",
      "description": "Collection information - Ask for a word or sentence.",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "defaultValue": {
          "$ref": "#/definitions/stringExpression",
          "title": "Default value",
          "description": "'Property' will be set to the value of this expression when max turn count is exceeded.",
          "examples": [
            "hello world",
            "Hello ${user.name}",
            "=concat(user.firstname, user.lastName)"
          ]
        },
        "value": {
          "$ref": "#/definitions/stringExpression",
          "title": "Value",
          "description": "'Property' will be set to the value of this expression unless it evaluates to null.",
          "examples": [
            "hello world",
            "Hello ${user.name}",
            "=concat(user.firstname, user.lastName)"
          ]
        },
        "outputFormat": {
          "$ref": "#/definitions/stringExpression",
          "title": "Output format",
          "description": "Expression to format the output.",
          "examples": [
            "=toUpper(this.value)",
            "${toUpper(this.value)}"
          ]
        },
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the dialog"
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action.",
          "default": false,
          "examples": [
            false,
            "=user.isVip"
          ]
        },
        "prompt": {
          "$kind": "Microsoft.IActivityTemplate",
          "title": "Initial prompt",
          "description": "Message to send to collect information.",
          "examples": [
            "What is your birth date?"
          ],
          "$ref": "#/definitions/Microsoft.IActivityTemplate"
        },
        "unrecognizedPrompt": {
          "$kind": "Microsoft.IActivityTemplate",
          "title": "Unrecognized prompt",
          "description": "Message to send when max turn count (if specified) has been exceeded and the default value is selected as the value.",
          "examples": [
            "Sorry, I'm having trouble understanding you. I will just use {this.options.defaultValue} for now. You can say 'I'm 36 years old' to change it."
          ],
          "$ref": "#/definitions/Microsoft.IActivityTemplate"
        },
        "invalidPrompt": {
          "$kind": "Microsoft.IActivityTemplate",
          "title": "Invalid prompt",
          "description": "Message to send when the user input does not meet any validation expression.",
          "examples": [
            "Sorry, '{this.value}' does not work. I need a number between 1-150. What is your age?"
          ],
          "$ref": "#/definitions/Microsoft.IActivityTemplate"
        },
        "defaultValueResponse": {
          "$kind": "Microsoft.IActivityTemplate",
          "title": "Default value response",
          "description": "Message to send when max turn count (if specified) has been exceeded and the default value is selected as the value.",
          "examples": [
            "Sorry, I'm having trouble understanding you. I will just use {this.options.defaultValue} for now. You can say 'I'm 36 years old' to change it."
          ],
          "$ref": "#/definitions/Microsoft.IActivityTemplate"
        },
        "maxTurnCount": {
          "$ref": "#/definitions/integerExpression",
          "title": "Max turn count",
          "description": "Maximum number of re-prompt attempts to collect information.",
          "default": 3,
          "examples": [
            3,
            "=settings.xyz"
          ]
        },
        "validations": {
          "type": "array",
          "title": "Validation expressions",
          "description": "Expression to validate user input.",
          "items": {
            "$ref": "#/definitions/condition",
            "title": "Condition",
            "description": "Expression which needs to met for the input to be considered valid",
            "examples": [
              "int(this.value) > 1 && int(this.value) <= 150",
              "count(this.value) < 300"
            ]
          }
        },
        "property": {
          "$ref": "#/definitions/stringExpression",
          "title": "Property",
          "description": "Property to store collected information. Input will be skipped if property has value (unless 'Always prompt' is true).",
          "examples": [
            "$birthday",
            "dialog.${user.name}",
            "=f(x)"
          ]
        },
        "alwaysPrompt": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Always prompt",
          "description": "Collect information even if the specified 'property' is not empty.",
          "default": false,
          "examples": [
            false,
            "=$val"
          ]
        },
        "allowInterruptions": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Allow Interruptions",
          "description": "A boolean expression that determines whether the parent should be allowed to interrupt the input.",
          "default": true,
          "examples": [
            true,
            "=user.xyz"
          ]
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.TextInput"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.TextTemplate": {
      "$role": "implements(Microsoft.ITextTemplate)",
      "title": "Microsoft TextTemplate",
      "description": "Use LG Templates to create text",
      "type": "object",
      "required": [
        "template",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "template": {
          "title": "Template",
          "description": "Language Generator template to evaluate to create the text.",
          "type": "string"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.TextTemplate"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.ThrowException": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Throw an exception",
      "description": "Throw an exception. Capture this exception with OnError trigger.",
      "type": "object",
      "required": [
        "errorValue",
        "$kind"
      ],
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the dialog"
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action.",
          "examples": [
            "user.age > 3"
          ]
        },
        "errorValue": {
          "$ref": "#/definitions/valueExpression",
          "title": "Error value",
          "description": "Error value to throw."
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.ThrowException"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.TraceActivity": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Send a TraceActivity",
      "description": "Send a trace activity to the transcript logger and/ or Bot Framework Emulator.",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the dialog"
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action.",
          "examples": [
            true,
            "=user.age > 3"
          ]
        },
        "name": {
          "$ref": "#/definitions/stringExpression",
          "title": "Name",
          "description": "Name of the trace activity"
        },
        "label": {
          "$ref": "#/definitions/stringExpression",
          "title": "Label",
          "description": "Label for the trace activity (used to identify it in a list of trace activities.)"
        },
        "valueType": {
          "$ref": "#/definitions/stringExpression",
          "title": "Value type",
          "description": "Type of value"
        },
        "value": {
          "$ref": "#/definitions/valueExpression",
          "title": "Value",
          "description": "Property that holds the value to send as trace activity."
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.TraceActivity"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.TrueSelector": {
      "$role": "implements(Microsoft.ITriggerSelector)",
      "title": "True trigger selector",
      "description": "Selector for all true events",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.TrueSelector"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.UpdateActivity": {
      "$role": "implements(Microsoft.IDialog)",
      "title": "Send an activity",
      "description": "Respond with an activity.",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Optional id for the dialog"
        },
        "disabled": {
          "$ref": "#/definitions/booleanExpression",
          "title": "Disabled",
          "description": "Optional condition which if true will disable this action.",
          "examples": [
            true,
            "=user.age > 3"
          ]
        },
        "activityId": {
          "$ref": "#/definitions/stringExpression",
          "title": "Activity Id",
          "description": "An string expression with the activity id to update.",
          "examples": [
            "=dialog.lastActivityId"
          ]
        },
        "activity": {
          "$kind": "Microsoft.IActivityTemplate",
          "title": "Activity",
          "description": "Activity to send.",
          "$ref": "#/definitions/Microsoft.IActivityTemplate"
        },
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.UpdateActivity"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "Microsoft.UrlEntityRecognizer": {
      "$role": [
        "implements(Microsoft.IRecognizer)",
        "implements(Microsoft.IEntityRecognizer)"
      ],
      "title": "Url recognizer",
      "description": "Recognizer which recognizes urls.",
      "type": "object",
      "$package": {
        "name": "Microsoft.Bot.Builder.Dialogs.Adaptive",
        "version": "4.11.0"
      },
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$",
          "const": "Microsoft.UrlEntityRecognizer"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "arrayExpression": {
      "$role": "expression",
      "title": "Array or expression",
      "description": "Array or expression to evaluate.",
      "oneOf": [
        {
          "type": "array",
          "title": "Array",
          "description": "Array constant."
        },
        {
          "$ref": "#/definitions/equalsExpression"
        }
      ]
    },
    "booleanExpression": {
      "$role": "expression",
      "title": "Boolean or expression",
      "description": "Boolean constant or expression to evaluate.",
      "oneOf": [
        {
          "type": "boolean",
          "title": "Boolean",
          "description": "Boolean constant.",
          "default": false,
          "examples": [
            false
          ]
        },
        {
          "$ref": "#/definitions/equalsExpression",
          "examples": [
            "=user.isVip"
          ]
        }
      ]
    },
    "component": {
      "required": [
        "$kind"
      ],
      "additionalProperties": false,
      "patternProperties": {
        "^\\$": {
          "title": "Tooling property",
          "description": "Open ended property for tooling."
        }
      },
      "properties": {
        "$kind": {
          "title": "Kind of dialog object",
          "description": "Defines the valid properties for the component you are configuring (from a dialog .schema file)",
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.]*$"
        },
        "$designer": {
          "title": "Designer information",
          "type": "object",
          "description": "Extra information for the Bot Framework Composer."
        }
      }
    },
    "condition": {
      "$role": "expression",
      "title": "Boolean condition",
      "description": "Boolean constant or expression to evaluate.",
      "oneOf": [
        {
          "$ref": "#/definitions/expression"
        },
        {
          "type": "boolean",
          "title": "Boolean",
          "description": "Boolean value.",
          "default": true,
          "examples": [
            false
          ]
        }
      ]
    },
    "equalsExpression": {
      "$role": "expression",
      "type": "string",
      "title": "Expression",
      "description": "Expression starting with =.",
      "pattern": "^=.*\\S.*",
      "examples": [
        "=user.name"
      ]
    },
    "expression": {
      "$role": "expression",
      "type": "string",
      "title": "Expression",
      "description": "Expression to evaluate.",
      "pattern": "^.*\\S.*",
      "examples": [
        "user.age > 13"
      ]
    },
    "integerExpression": {
      "$role": "expression",
      "title": "Integer or expression",
      "description": "Integer constant or expression to evaluate.",
      "oneOf": [
        {
          "type": "integer",
          "title": "Integer",
          "description": "Integer constant.",
          "default": 0,
          "examples": [
            15
          ]
        },
        {
          "$ref": "#/definitions/equalsExpression",
          "examples": [
            "=user.age"
          ]
        }
      ]
    },
    "numberExpression": {
      "$role": "expression",
      "title": "Number or expression",
      "description": "Number constant or expression to evaluate.",
      "oneOf": [
        {
          "type": "number",
          "title": "Number",
          "description": "Number constant.",
          "default": 0,
          "examples": [
            15.5
          ]
        },
        {
          "$ref": "#/definitions/equalsExpression",
          "examples": [
            "=dialog.quantity"
          ]
        }
      ]
    },
    "objectExpression": {
      "$role": "expression",
      "title": "Object or expression",
      "description": "Object or expression to evaluate.",
      "oneOf": [
        {
          "type": "object",
          "title": "Object",
          "description": "Object constant."
        },
        {
          "$ref": "#/definitions/equalsExpression"
        }
      ]
    },
    "role": {
      "title": "$role",
      "description": "Defines the role played in the dialog schema from [expression|interface|implements($kind)|extends($kind)].",
      "type": "string",
      "pattern": "^((expression)|(interface)|(implements\\([a-zA-Z][a-zA-Z0-9.]*\\))|(extends\\([a-zA-Z][a-zA-Z0-9.]*\\)))$"
    },
    "stringExpression": {
      "$role": "expression",
      "title": "String or expression",
      "description": "Interpolated string or expression to evaluate.",
      "oneOf": [
        {
          "type": "string",
          "title": "String",
          "description": "Interpolated string",
          "pattern": "^(?!(=)).*",
          "examples": [
            "Hello ${user.name}"
          ]
        },
        {
          "$ref": "#/definitions/equalsExpression",
          "examples": [
            "=concat('x','y','z')"
          ]
        }
      ]
    },
    "valueExpression": {
      "$role": "expression",
      "title": "Any or expression",
      "description": "Any constant or expression to evaluate.",
      "oneOf": [
        {
          "type": "object",
          "title": "Object",
          "description": "Object constant."
        },
        {
          "type": "array",
          "title": "Array",
          "description": "Array constant."
        },
        {
          "type": "string",
          "title": "String",
          "description": "Interpolated string.",
          "pattern": "^(?!(=)).*",
          "examples": [
            "Hello ${user.name}"
          ]
        },
        {
          "type": "boolean",
          "title": "Boolean",
          "description": "Boolean constant",
          "examples": [
            false
          ]
        },
        {
          "type": "number",
          "title": "Number",
          "description": "Number constant.",
          "examples": [
            15.5
          ]
        },
        {
          "$ref": "#/definitions/equalsExpression",
          "examples": [
            "=..."
          ]
        }
      ]
    },
    "schema": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Core schema meta-schema",
      "definitions": {
        "schemaArray": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/schema"
          }
        },
        "nonNegativeInteger": {
          "type": "integer",
          "minimum": 0
        },
        "nonNegativeIntegerDefault0": {
          "type": "integer",
          "minimum": 0,
          "default": 0
        },
        "simpleTypes": {
          "enum": [
            "array",
            "boolean",
            "integer",
            "null",
            "number",
            "object",
            "string"
          ]
        },
        "stringArray": {
          "type": "array",
          "uniqueItems": true,
          "default": [],
          "items": {
            "type": "string"
          }
        }
      },
      "type": [
        "object",
        "boolean"
      ],
      "default": true,
      "properties": {
        "$schema": {
          "type": "string",
          "format": "uri"
        },
        "$ref": {
          "type": "string",
          "format": "uri-reference"
        },
        "$comment": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "default": true,
        "readOnly": {
          "type": "boolean",
          "default": false
        },
        "writeOnly": {
          "type": "boolean",
          "default": false
        },
        "examples": {
          "type": "array",
          "items": true
        },
        "multipleOf": {
          "type": "number",
          "exclusiveMinimum": 0
        },
        "maximum": {
          "type": "number"
        },
        "exclusiveMaximum": {
          "type": "number"
        },
        "minimum": {
          "type": "number"
        },
        "exclusiveMinimum": {
          "type": "number"
        },
        "maxLength": {
          "$ref": "#/definitions/schema/definitions/nonNegativeInteger"
        },
        "minLength": {
          "$ref": "#/definitions/schema/definitions/nonNegativeIntegerDefault0"
        },
        "pattern": {
          "type": "string",
          "format": "regex"
        },
        "additionalItems": {
          "$ref": "#/definitions/schema"
        },
        "items": {
          "anyOf": [
            {
              "$ref": "#/definitions/schema"
            },
            {
              "$ref": "#/definitions/schema/definitions/schemaArray"
            }
          ],
          "default": true
        },
        "maxItems": {
          "$ref": "#/definitions/schema/definitions/nonNegativeInteger"
        },
        "minItems": {
          "$ref": "#/definitions/schema/definitions/nonNegativeIntegerDefault0"
        },
        "uniqueItems": {
          "type": "boolean",
          "default": false
        },
        "contains": {
          "$ref": "#/definitions/schema"
        },
        "maxProperties": {
          "$ref": "#/definitions/schema/definitions/nonNegativeInteger"
        },
        "minProperties": {
          "$ref": "#/definitions/schema/definitions/nonNegativeIntegerDefault0"
        },
        "required": {
          "$ref": "#/definitions/schema/definitions/stringArray"
        },
        "additionalProperties": {
          "$ref": "#/definitions/schema"
        },
        "definitions": {
          "type": "object",
          "default": {},
          "additionalProperties": {
            "$ref": "#/definitions/schema"
          }
        },
        "properties": {
          "type": "object",
          "default": {},
          "additionalProperties": {
            "$ref": "#/definitions/schema"
          }
        },
        "patternProperties": {
          "type": "object",
          "propertyNames": {
            "format": "regex"
          },
          "default": {},
          "additionalProperties": {
            "$ref": "#/definitions/schema"
          }
        },
        "dependencies": {
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "$ref": "#/definitions/schema"
              },
              {
                "$ref": "#/definitions/schema/definitions/stringArray"
              }
            ]
          }
        },
        "propertyNames": {
          "$ref": "#/definitions/schema"
        },
        "const": true,
        "enum": {
          "type": "array",
          "minItems": 1,
          "uniqueItems": true,
          "items": true
        },
        "type": {
          "anyOf": [
            {
              "$ref": "#/definitions/schema/definitions/simpleTypes"
            },
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/schema/definitions/simpleTypes"
              },
              "minItems": 1,
              "uniqueItems": true
            }
          ]
        },
        "format": {
          "type": "string"
        },
        "contentMediaType": {
          "type": "string"
        },
        "contentEncoding": {
          "type": "string"
        },
        "if": {
          "$ref": "#/definitions/schema"
        },
        "then": {
          "$ref": "#/definitions/schema"
        },
        "else": {
          "$ref": "#/definitions/schema"
        },
        "allOf": {
          "$ref": "#/definitions/schema/definitions/schemaArray"
        },
        "anyOf": {
          "$ref": "#/definitions/schema/definitions/schemaArray"
        },
        "oneOf": {
          "$ref": "#/definitions/schema/definitions/schemaArray"
        },
        "not": {
          "$ref": "#/definitions/schema"
        }
      }
    },
    "botframework.json": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "definitions": {
        "ChannelAccount": {
          "description": "Channel account information needed to route a message",
          "title": "ChannelAccount",
          "type": "object",
          "required": [
            "id",
            "name"
          ],
          "properties": {
            "id": {
              "description": "Channel id for the user or bot on this channel (Example: joe@smith.com, or @joesmith or\n123456)",
              "type": "string",
              "title": "id"
            },
            "name": {
              "description": "Display friendly name",
              "type": "string",
              "title": "name"
            },
            "aadObjectId": {
              "description": "This account's object ID within Azure Active Directory (AAD)",
              "type": "string",
              "title": "aadObjectId"
            },
            "role": {
              "description": "Role of the entity behind the account (Example: User, Bot, etc.). Possible values include:\n'user', 'bot'",
              "type": "string",
              "title": "role"
            }
          }
        },
        "ConversationAccount": {
          "description": "Channel account information for a conversation",
          "title": "ConversationAccount",
          "type": "object",
          "required": [
            "conversationType",
            "id",
            "isGroup",
            "name"
          ],
          "properties": {
            "isGroup": {
              "description": "Indicates whether the conversation contains more than two participants at the time the\nactivity was generated",
              "type": "boolean",
              "title": "isGroup"
            },
            "conversationType": {
              "description": "Indicates the type of the conversation in channels that distinguish between conversation types",
              "type": "string",
              "title": "conversationType"
            },
            "id": {
              "description": "Channel id for the user or bot on this channel (Example: joe@smith.com, or @joesmith or\n123456)",
              "type": "string",
              "title": "id"
            },
            "name": {
              "description": "Display friendly name",
              "type": "string",
              "title": "name"
            },
            "aadObjectId": {
              "description": "This account's object ID within Azure Active Directory (AAD)",
              "type": "string",
              "title": "aadObjectId"
            },
            "role": {
              "description": "Role of the entity behind the account (Example: User, Bot, etc.). Possible values include:\n'user', 'bot'",
              "enum": [
                "bot",
                "user"
              ],
              "type": "string",
              "title": "role"
            }
          }
        },
        "MessageReaction": {
          "description": "Message reaction object",
          "title": "MessageReaction",
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "description": "Message reaction type. Possible values include: 'like', 'plusOne'",
              "type": "string",
              "title": "type"
            }
          }
        },
        "CardAction": {
          "description": "A clickable action",
          "title": "CardAction",
          "type": "object",
          "required": [
            "title",
            "type",
            "value"
          ],
          "properties": {
            "type": {
              "description": "The type of action implemented by this button. Possible values include: 'openUrl', 'imBack',\n'postBack', 'playAudio', 'playVideo', 'showImage', 'downloadFile', 'signin', 'call',\n'payment', 'messageBack'",
              "type": "string",
              "title": "type"
            },
            "title": {
              "description": "Text description which appears on the button",
              "type": "string",
              "title": "title"
            },
            "image": {
              "description": "Image URL which will appear on the button, next to text label",
              "type": "string",
              "title": "image"
            },
            "text": {
              "description": "Text for this action",
              "type": "string",
              "title": "text"
            },
            "displayText": {
              "description": "(Optional) text to display in the chat feed if the button is clicked",
              "type": "string",
              "title": "displayText"
            },
            "value": {
              "description": "Supplementary parameter for action. Content of this property depends on the ActionType",
              "title": "value"
            },
            "channelData": {
              "description": "Channel-specific data associated with this action",
              "title": "channelData"
            }
          }
        },
        "SuggestedActions": {
          "description": "SuggestedActions that can be performed",
          "title": "SuggestedActions",
          "type": "object",
          "required": [
            "actions",
            "to"
          ],
          "properties": {
            "to": {
              "description": "Ids of the recipients that the actions should be shown to.  These Ids are relative to the\nchannelId and a subset of all recipients of the activity",
              "type": "array",
              "title": "to",
              "items": {
                "title": "Id",
                "description": "Id of recipient.",
                "type": "string"
              }
            },
            "actions": {
              "description": "Actions that can be shown to the user",
              "type": "array",
              "title": "actions",
              "items": {
                "$ref": "#/definitions/botframework.json/definitions/CardAction"
              }
            }
          }
        },
        "Attachment": {
          "description": "An attachment within an activity",
          "title": "Attachment",
          "type": "object",
          "required": [
            "contentType"
          ],
          "properties": {
            "contentType": {
              "description": "mimetype/Contenttype for the file",
              "type": "string",
              "title": "contentType"
            },
            "contentUrl": {
              "description": "Content Url",
              "type": "string",
              "title": "contentUrl"
            },
            "content": {
              "type": "object",
              "description": "Embedded content",
              "title": "content"
            },
            "name": {
              "description": "(OPTIONAL) The name of the attachment",
              "type": "string",
              "title": "name"
            },
            "thumbnailUrl": {
              "description": "(OPTIONAL) Thumbnail associated with attachment",
              "type": "string",
              "title": "thumbnailUrl"
            }
          }
        },
        "Entity": {
          "description": "Metadata object pertaining to an activity",
          "title": "Entity",
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "description": "Type of this entity (RFC 3987 IRI)",
              "type": "string",
              "title": "type"
            }
          }
        },
        "ConversationReference": {
          "description": "An object relating to a particular point in a conversation",
          "title": "ConversationReference",
          "type": "object",
          "required": [
            "bot",
            "channelId",
            "conversation",
            "serviceUrl"
          ],
          "properties": {
            "activityId": {
              "description": "(Optional) ID of the activity to refer to",
              "type": "string",
              "title": "activityId"
            },
            "user": {
              "description": "(Optional) User participating in this conversation",
              "$ref": "#/definitions/botframework.json/definitions/ChannelAccount",
              "title": "user"
            },
            "bot": {
              "$ref": "#/definitions/botframework.json/definitions/ChannelAccount",
              "description": "Bot participating in this conversation",
              "title": "bot"
            },
            "conversation": {
              "$ref": "#/definitions/botframework.json/definitions/ConversationAccount",
              "description": "Conversation reference",
              "title": "conversation"
            },
            "channelId": {
              "description": "Channel ID",
              "type": "string",
              "title": "channelId"
            },
            "serviceUrl": {
              "description": "Service endpoint where operations concerning the referenced conversation may be performed",
              "type": "string",
              "title": "serviceUrl"
            }
          }
        },
        "TextHighlight": {
          "description": "Refers to a substring of content within another field",
          "title": "TextHighlight",
          "type": "object",
          "required": [
            "occurrence",
            "text"
          ],
          "properties": {
            "text": {
              "description": "Defines the snippet of text to highlight",
              "type": "string",
              "title": "text"
            },
            "occurrence": {
              "description": "Occurrence of the text field within the referenced text, if multiple exist.",
              "type": "number",
              "title": "occurrence"
            }
          }
        },
        "SemanticAction": {
          "description": "Represents a reference to a programmatic action",
          "title": "SemanticAction",
          "type": "object",
          "required": [
            "entities",
            "id"
          ],
          "properties": {
            "id": {
              "description": "ID of this action",
              "type": "string",
              "title": "id"
            },
            "entities": {
              "description": "Entities associated with this action",
              "type": "object",
              "title": "entities",
              "additionalProperties": {
                "$ref": "#/definitions/botframework.json/definitions/Entity"
              }
            }
          }
        },
        "Activity": {
          "description": "An Activity is the basic communication type for the Bot Framework 3.0 protocol.",
          "title": "Activity",
          "type": "object",
          "properties": {
            "type": {
              "description": "Contains the activity type. Possible values include: 'message', 'contactRelationUpdate',\n'conversationUpdate', 'typing', 'endOfConversation', 'event', 'invoke', 'deleteUserData',\n'messageUpdate', 'messageDelete', 'installationUpdate', 'messageReaction', 'suggestion',\n'trace', 'handoff'",
              "type": "string",
              "title": "type"
            },
            "id": {
              "description": "Contains an ID that uniquely identifies the activity on the channel.",
              "type": "string",
              "title": "id"
            },
            "timestamp": {
              "description": "Contains the date and time that the message was sent, in UTC, expressed in ISO-8601 format.",
              "type": "string",
              "format": "date-time",
              "title": "timestamp"
            },
            "localTimestamp": {
              "description": "Contains the date and time that the message was sent, in local time, expressed in ISO-8601\nformat.\nFor example, 2016-09-23T13:07:49.4714686-07:00.",
              "type": "string",
              "format": "date-time",
              "title": "localTimestamp"
            },
            "localTimezone": {
              "description": "Contains the name of the timezone in which the message, in local time, expressed in IANA Time\nZone database format.\nFor example, America/Los_Angeles.",
              "type": "string",
              "title": "localTimezone"
            },
            "serviceUrl": {
              "description": "Contains the URL that specifies the channel's service endpoint. Set by the channel.",
              "type": "string",
              "title": "serviceUrl"
            },
            "channelId": {
              "description": "Contains an ID that uniquely identifies the channel. Set by the channel.",
              "type": "string",
              "title": "channelId"
            },
            "from": {
              "$ref": "#/definitions/botframework.json/definitions/ChannelAccount",
              "description": "Identifies the sender of the message.",
              "title": "from"
            },
            "conversation": {
              "$ref": "#/definitions/botframework.json/definitions/ConversationAccount",
              "description": "Identifies the conversation to which the activity belongs.",
              "title": "conversation"
            },
            "recipient": {
              "$ref": "#/definitions/botframework.json/definitions/ChannelAccount",
              "description": "Identifies the recipient of the message.",
              "title": "recipient"
            },
            "textFormat": {
              "description": "Format of text fields Default:markdown. Possible values include: 'markdown', 'plain', 'xml'",
              "type": "string",
              "title": "textFormat"
            },
            "attachmentLayout": {
              "description": "The layout hint for multiple attachments. Default: list. Possible values include: 'list',\n'carousel'",
              "type": "string",
              "title": "attachmentLayout"
            },
            "membersAdded": {
              "description": "The collection of members added to the conversation.",
              "type": "array",
              "title": "membersAdded",
              "items": {
                "$ref": "#/definitions/botframework.json/definitions/ChannelAccount"
              }
            },
            "membersRemoved": {
              "description": "The collection of members removed from the conversation.",
              "type": "array",
              "title": "membersRemoved",
              "items": {
                "$ref": "#/definitions/botframework.json/definitions/ChannelAccount"
              }
            },
            "reactionsAdded": {
              "description": "The collection of reactions added to the conversation.",
              "type": "array",
              "title": "reactionsAdded",
              "items": {
                "$ref": "#/definitions/botframework.json/definitions/MessageReaction"
              }
            },
            "reactionsRemoved": {
              "description": "The collection of reactions removed from the conversation.",
              "type": "array",
              "title": "reactionsRemoved",
              "items": {
                "$ref": "#/definitions/botframework.json/definitions/MessageReaction"
              }
            },
            "topicName": {
              "description": "The updated topic name of the conversation.",
              "type": "string",
              "title": "topicName"
            },
            "historyDisclosed": {
              "description": "Indicates whether the prior history of the channel is disclosed.",
              "type": "boolean",
              "title": "historyDisclosed"
            },
            "locale": {
              "description": "A locale name for the contents of the text field.\nThe locale name is a combination of an ISO 639 two- or three-letter culture code associated\nwith a language\nand an ISO 3166 two-letter subculture code associated with a country or region.\nThe locale name can also correspond to a valid BCP-47 language tag.",
              "type": "string",
              "title": "locale"
            },
            "text": {
              "description": "The text content of the message.",
              "type": "string",
              "title": "text"
            },
            "speak": {
              "description": "The text to speak.",
              "type": "string",
              "title": "speak"
            },
            "inputHint": {
              "description": "Indicates whether your bot is accepting,\nexpecting, or ignoring user input after the message is delivered to the client. Possible\nvalues include: 'acceptingInput', 'ignoringInput', 'expectingInput'",
              "type": "string",
              "title": "inputHint"
            },
            "summary": {
              "description": "The text to display if the channel cannot render cards.",
              "type": "string",
              "title": "summary"
            },
            "suggestedActions": {
              "description": "The suggested actions for the activity.",
              "$ref": "#/definitions/botframework.json/definitions/SuggestedActions",
              "title": "suggestedActions"
            },
            "attachments": {
              "description": "Attachments",
              "type": "array",
              "title": "attachments",
              "items": {
                "$ref": "#/definitions/botframework.json/definitions/Attachment"
              }
            },
            "entities": {
              "description": "Represents the entities that were mentioned in the message.",
              "type": "array",
              "title": "entities",
              "items": {
                "$ref": "#/definitions/botframework.json/definitions/Entity"
              }
            },
            "channelData": {
              "description": "Contains channel-specific content.",
              "title": "channelData"
            },
            "action": {
              "description": "Indicates whether the recipient of a contactRelationUpdate was added or removed from the\nsender's contact list.",
              "type": "string",
              "title": "action"
            },
            "replyToId": {
              "description": "Contains the ID of the message to which this message is a reply.",
              "type": "string",
              "title": "replyToId"
            },
            "label": {
              "description": "A descriptive label for the activity.",
              "type": "string",
              "title": "label"
            },
            "valueType": {
              "description": "The type of the activity's value object.",
              "type": "string",
              "title": "valueType"
            },
            "value": {
              "description": "A value that is associated with the activity.",
              "title": "value"
            },
            "name": {
              "description": "The name of the operation associated with an invoke or event activity.",
              "type": "string",
              "title": "name"
            },
            "relatesTo": {
              "description": "A reference to another conversation or activity.",
              "$ref": "#/definitions/botframework.json/definitions/ConversationReference",
              "title": "relatesTo"
            },
            "code": {
              "description": "The a code for endOfConversation activities that indicates why the conversation ended.\nPossible values include: 'unknown', 'completedSuccessfully', 'userCancelled', 'botTimedOut',\n'botIssuedInvalidMessage', 'channelFailed'",
              "type": "string",
              "title": "code"
            },
            "expiration": {
              "description": "The time at which the activity should be considered to be \"expired\" and should not be\npresented to the recipient.",
              "type": "string",
              "format": "date-time",
              "title": "expiration"
            },
            "importance": {
              "description": "The importance of the activity. Possible values include: 'low', 'normal', 'high'",
              "type": "string",
              "title": "importance"
            },
            "deliveryMode": {
              "description": "A delivery hint to signal to the recipient alternate delivery paths for the activity.\nThe default delivery mode is \"default\". Possible values include: 'normal', 'notification'",
              "type": "string",
              "title": "deliveryMode"
            },
            "listenFor": {
              "description": "List of phrases and references that speech and language priming systems should listen for",
              "type": "array",
              "title": "listenFor",
              "items": {
                "type": "string",
                "title": "Phrase",
                "description": "Phrase to listen for."
              }
            },
            "textHighlights": {
              "description": "The collection of text fragments to highlight when the activity contains a ReplyToId value.",
              "type": "array",
              "title": "textHighlights",
              "items": {
                "$ref": "#/definitions/botframework.json/definitions/TextHighlight"
              }
            },
            "semanticAction": {
              "$ref": "#/definitions/botframework.json/definitions/SemanticAction",
              "description": "An optional programmatic action accompanying this request",
              "title": "semanticAction"
            }
          }
        }
      }
    }
  }
}
